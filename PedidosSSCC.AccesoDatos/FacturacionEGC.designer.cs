#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccesoDatos
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FacturacionInterna")]
	public partial class FacturacionInternaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertDepartamentos(Departamentos instance);
    partial void UpdateDepartamentos(Departamentos instance);
    partial void DeleteDepartamentos(Departamentos instance);
    partial void InsertUsuarios(Usuarios instance);
    partial void UpdateUsuarios(Usuarios instance);
    partial void DeleteUsuarios(Usuarios instance);
    partial void InsertEmpresas(Empresas instance);
    partial void UpdateEmpresas(Empresas instance);
    partial void DeleteEmpresas(Empresas instance);
    partial void InsertEmpresas_Aprobadores(Empresas_Aprobadores instance);
    partial void UpdateEmpresas_Aprobadores(Empresas_Aprobadores instance);
    partial void DeleteEmpresas_Aprobadores(Empresas_Aprobadores instance);
    partial void InsertEstadosSolicitud(EstadosSolicitud instance);
    partial void UpdateEstadosSolicitud(EstadosSolicitud instance);
    partial void DeleteEstadosSolicitud(EstadosSolicitud instance);
    partial void InsertEstadosSolicitud_Idioma(EstadosSolicitud_Idioma instance);
    partial void UpdateEstadosSolicitud_Idioma(EstadosSolicitud_Idioma instance);
    partial void DeleteEstadosSolicitud_Idioma(EstadosSolicitud_Idioma instance);
    partial void InsertFacturas_Tareas_LineasEsfuerzo(Facturas_Tareas_LineasEsfuerzo instance);
    partial void UpdateFacturas_Tareas_LineasEsfuerzo(Facturas_Tareas_LineasEsfuerzo instance);
    partial void DeleteFacturas_Tareas_LineasEsfuerzo(Facturas_Tareas_LineasEsfuerzo instance);
    partial void InsertIdiomas(Idiomas instance);
    partial void UpdateIdiomas(Idiomas instance);
    partial void DeleteIdiomas(Idiomas instance);
    partial void InsertLineasNegocio(LineasNegocio instance);
    partial void UpdateLineasNegocio(LineasNegocio instance);
    partial void DeleteLineasNegocio(LineasNegocio instance);
    partial void InsertLineasNegocio_Idioma(LineasNegocio_Idioma instance);
    partial void UpdateLineasNegocio_Idioma(LineasNegocio_Idioma instance);
    partial void DeleteLineasNegocio_Idioma(LineasNegocio_Idioma instance);
    partial void InsertPersonas(Personas instance);
    partial void UpdatePersonas(Personas instance);
    partial void DeletePersonas(Personas instance);
    partial void InsertPersonas_Secciones(Personas_Secciones instance);
    partial void UpdatePersonas_Secciones(Personas_Secciones instance);
    partial void DeletePersonas_Secciones(Personas_Secciones instance);
    partial void InsertSecciones(Secciones instance);
    partial void UpdateSecciones(Secciones instance);
    partial void DeleteSecciones(Secciones instance);
    partial void InsertSeguridad_Opciones(Seguridad_Opciones instance);
    partial void UpdateSeguridad_Opciones(Seguridad_Opciones instance);
    partial void DeleteSeguridad_Opciones(Seguridad_Opciones instance);
    partial void InsertSeguridad_Perfiles(Seguridad_Perfiles instance);
    partial void UpdateSeguridad_Perfiles(Seguridad_Perfiles instance);
    partial void DeleteSeguridad_Perfiles(Seguridad_Perfiles instance);
    partial void InsertSeguridad_Perfiles_Opciones(Seguridad_Perfiles_Opciones instance);
    partial void UpdateSeguridad_Perfiles_Opciones(Seguridad_Perfiles_Opciones instance);
    partial void DeleteSeguridad_Perfiles_Opciones(Seguridad_Perfiles_Opciones instance);
    partial void InsertTareas(Tareas instance);
    partial void UpdateTareas(Tareas instance);
    partial void DeleteTareas(Tareas instance);
    partial void InsertTareas_Empresas(Tareas_Empresas instance);
    partial void UpdateTareas_Empresas(Tareas_Empresas instance);
    partial void DeleteTareas_Empresas(Tareas_Empresas instance);
    partial void InsertTareas_Empresas_LineasEsfuerzo(Tareas_Empresas_LineasEsfuerzo instance);
    partial void UpdateTareas_Empresas_LineasEsfuerzo(Tareas_Empresas_LineasEsfuerzo instance);
    partial void DeleteTareas_Empresas_LineasEsfuerzo(Tareas_Empresas_LineasEsfuerzo instance);
    partial void InsertTiposTarea(TiposTarea instance);
    partial void UpdateTiposTarea(TiposTarea instance);
    partial void DeleteTiposTarea(TiposTarea instance);
    partial void InsertUnidadesTarea(UnidadesTarea instance);
    partial void UpdateUnidadesTarea(UnidadesTarea instance);
    partial void DeleteUnidadesTarea(UnidadesTarea instance);
    partial void InsertUnidadesTarea_Idioma(UnidadesTarea_Idioma instance);
    partial void UpdateUnidadesTarea_Idioma(UnidadesTarea_Idioma instance);
    partial void DeleteUnidadesTarea_Idioma(UnidadesTarea_Idioma instance);
    partial void InsertFacturas(Facturas instance);
    partial void UpdateFacturas(Facturas instance);
    partial void DeleteFacturas(Facturas instance);
    partial void InsertEnlacesContables(EnlacesContables instance);
    partial void UpdateEnlacesContables(EnlacesContables instance);
    partial void DeleteEnlacesContables(EnlacesContables instance);
    partial void InsertConceptosFacturacion(ConceptosFacturacion instance);
    partial void UpdateConceptosFacturacion(ConceptosFacturacion instance);
    partial void DeleteConceptosFacturacion(ConceptosFacturacion instance);
    partial void InsertConceptosFacturacion_Idioma(ConceptosFacturacion_Idioma instance);
    partial void UpdateConceptosFacturacion_Idioma(ConceptosFacturacion_Idioma instance);
    partial void DeleteConceptosFacturacion_Idioma(ConceptosFacturacion_Idioma instance);
    partial void InsertConfiguraciones(Configuraciones instance);
    partial void UpdateConfiguraciones(Configuraciones instance);
    partial void DeleteConfiguraciones(Configuraciones instance);
    partial void InsertItemNumbersD365(ItemNumbersD365 instance);
    partial void UpdateItemNumbersD365(ItemNumbersD365 instance);
    partial void DeleteItemNumbersD365(ItemNumbersD365 instance);
    partial void InsertProductosD365(ProductosD365 instance);
    partial void UpdateProductosD365(ProductosD365 instance);
    partial void DeleteProductosD365(ProductosD365 instance);
    partial void InsertProveedores(Proveedores instance);
    partial void UpdateProveedores(Proveedores instance);
    partial void DeleteProveedores(Proveedores instance);
    partial void InsertLicencias(Licencias instance);
    partial void UpdateLicencias(Licencias instance);
    partial void DeleteLicencias(Licencias instance);
    partial void InsertLicencias_Excepciones(Licencias_Excepciones instance);
    partial void UpdateLicencias_Excepciones(Licencias_Excepciones instance);
    partial void DeleteLicencias_Excepciones(Licencias_Excepciones instance);
    partial void InsertTiposEnte(TiposEnte instance);
    partial void UpdateTiposEnte(TiposEnte instance);
    partial void DeleteTiposEnte(TiposEnte instance);
    partial void InsertOficinas(Oficinas instance);
    partial void UpdateOficinas(Oficinas instance);
    partial void DeleteOficinas(Oficinas instance);
    partial void InsertLicencias_Tarifas(Licencias_Tarifas instance);
    partial void UpdateLicencias_Tarifas(Licencias_Tarifas instance);
    partial void DeleteLicencias_Tarifas(Licencias_Tarifas instance);
    partial void InsertEntes(Entes instance);
    partial void UpdateEntes(Entes instance);
    partial void DeleteEntes(Entes instance);
    partial void InsertEntes_Licencias(Entes_Licencias instance);
    partial void UpdateEntes_Licencias(Entes_Licencias instance);
    partial void DeleteEntes_Licencias(Entes_Licencias instance);
    partial void InsertEstadosTicket(EstadosTicket instance);
    partial void UpdateEstadosTicket(EstadosTicket instance);
    partial void DeleteEstadosTicket(EstadosTicket instance);
    partial void InsertGruposGuardia(GruposGuardia instance);
    partial void UpdateGruposGuardia(GruposGuardia instance);
    partial void DeleteGruposGuardia(GruposGuardia instance);
    partial void InsertOrigenesTicket(OrigenesTicket instance);
    partial void UpdateOrigenesTicket(OrigenesTicket instance);
    partial void DeleteOrigenesTicket(OrigenesTicket instance);
    partial void InsertTiposTicket(TiposTicket instance);
    partial void UpdateTiposTicket(TiposTicket instance);
    partial void DeleteTiposTicket(TiposTicket instance);
    partial void InsertValidacionesTicket(ValidacionesTicket instance);
    partial void UpdateValidacionesTicket(ValidacionesTicket instance);
    partial void DeleteValidacionesTicket(ValidacionesTicket instance);
    partial void InsertTareas_Empresas_LineasEsfuerzo_LicenciasMS(Tareas_Empresas_LineasEsfuerzo_LicenciasMS instance);
    partial void UpdateTareas_Empresas_LineasEsfuerzo_LicenciasMS(Tareas_Empresas_LineasEsfuerzo_LicenciasMS instance);
    partial void DeleteTareas_Empresas_LineasEsfuerzo_LicenciasMS(Tareas_Empresas_LineasEsfuerzo_LicenciasMS instance);
    partial void InsertLicencias_TiposEnte(Licencias_TiposEnte instance);
    partial void UpdateLicencias_TiposEnte(Licencias_TiposEnte instance);
    partial void DeleteLicencias_TiposEnte(Licencias_TiposEnte instance);
    partial void InsertLicencias_Excepciones_LicenciasReemplazo(Licencias_Excepciones_LicenciasReemplazo instance);
    partial void UpdateLicencias_Excepciones_LicenciasReemplazo(Licencias_Excepciones_LicenciasReemplazo instance);
    partial void DeleteLicencias_Excepciones_LicenciasReemplazo(Licencias_Excepciones_LicenciasReemplazo instance);
    partial void InsertContratosCAU(ContratosCAU instance);
    partial void UpdateContratosCAU(ContratosCAU instance);
    partial void DeleteContratosCAU(ContratosCAU instance);
    partial void InsertTickets(Tickets instance);
    partial void UpdateTickets(Tickets instance);
    partial void DeleteTickets(Tickets instance);
    partial void InsertProveedores_ContratosSoporte(Proveedores_ContratosSoporte instance);
    partial void UpdateProveedores_ContratosSoporte(Proveedores_ContratosSoporte instance);
    partial void DeleteProveedores_ContratosSoporte(Proveedores_ContratosSoporte instance);
    partial void InsertProveedores_Asuntos(Proveedores_Asuntos instance);
    partial void UpdateProveedores_Asuntos(Proveedores_Asuntos instance);
    partial void DeleteProveedores_Asuntos(Proveedores_Asuntos instance);
    partial void InsertLicencias_Incompatibles(Licencias_Incompatibles instance);
    partial void UpdateLicencias_Incompatibles(Licencias_Incompatibles instance);
    partial void DeleteLicencias_Incompatibles(Licencias_Incompatibles instance);
    partial void InsertTareas_Empresas_LineasEsfuerzo_Tickets(Tareas_Empresas_LineasEsfuerzo_Tickets instance);
    partial void UpdateTareas_Empresas_LineasEsfuerzo_Tickets(Tareas_Empresas_LineasEsfuerzo_Tickets instance);
    partial void DeleteTareas_Empresas_LineasEsfuerzo_Tickets(Tareas_Empresas_LineasEsfuerzo_Tickets instance);
    partial void InsertProyectos(Proyectos instance);
    partial void UpdateProyectos(Proyectos instance);
    partial void DeleteProyectos(Proyectos instance);
    partial void InsertLicencias_Minimos(Licencias_Minimos instance);
    partial void UpdateLicencias_Minimos(Licencias_Minimos instance);
    partial void DeleteLicencias_Minimos(Licencias_Minimos instance);
    partial void InsertCategoriasTicket(CategoriasTicket instance);
    partial void UpdateCategoriasTicket(CategoriasTicket instance);
    partial void DeleteCategoriasTicket(CategoriasTicket instance);
    partial void InsertProyectos_Departamentos(Proyectos_Departamentos instance);
    partial void UpdateProyectos_Departamentos(Proyectos_Departamentos instance);
    partial void DeleteProyectos_Departamentos(Proyectos_Departamentos instance);
    partial void InsertProyectos_Empresas(Proyectos_Empresas instance);
    partial void UpdateProyectos_Empresas(Proyectos_Empresas instance);
    partial void DeleteProyectos_Empresas(Proyectos_Empresas instance);
    partial void InsertProyectos_Partes(Proyectos_Partes instance);
    partial void UpdateProyectos_Partes(Proyectos_Partes instance);
    partial void DeleteProyectos_Partes(Proyectos_Partes instance);
    partial void InsertProyectos_Partes_Horas(Proyectos_Partes_Horas instance);
    partial void UpdateProyectos_Partes_Horas(Proyectos_Partes_Horas instance);
    partial void DeleteProyectos_Partes_Horas(Proyectos_Partes_Horas instance);
    partial void InsertPeriodosPartes(PeriodosPartes instance);
    partial void UpdatePeriodosPartes(PeriodosPartes instance);
    partial void DeletePeriodosPartes(PeriodosPartes instance);
    partial void InsertTareas_Empresas_LineasEsfuerzo_Partes(Tareas_Empresas_LineasEsfuerzo_Partes instance);
    partial void UpdateTareas_Empresas_LineasEsfuerzo_Partes(Tareas_Empresas_LineasEsfuerzo_Partes instance);
    partial void DeleteTareas_Empresas_LineasEsfuerzo_Partes(Tareas_Empresas_LineasEsfuerzo_Partes instance);
    partial void InsertFacturasP(FacturasP instance);
    partial void UpdateFacturasP(FacturasP instance);
    partial void DeleteFacturasP(FacturasP instance);
    partial void InsertAplicaciones(Aplicaciones instance);
    partial void UpdateAplicaciones(Aplicaciones instance);
    partial void DeleteAplicaciones(Aplicaciones instance);
    partial void InsertAplicaciones_Modulos(Aplicaciones_Modulos instance);
    partial void UpdateAplicaciones_Modulos(Aplicaciones_Modulos instance);
    partial void DeleteAplicaciones_Modulos(Aplicaciones_Modulos instance);
    partial void InsertAplicaciones_Modulos_Empresas(Aplicaciones_Modulos_Empresas instance);
    partial void UpdateAplicaciones_Modulos_Empresas(Aplicaciones_Modulos_Empresas instance);
    partial void DeleteAplicaciones_Modulos_Empresas(Aplicaciones_Modulos_Empresas instance);
    partial void InsertAplicaciones_Modulos_Tarifas(Aplicaciones_Modulos_Tarifas instance);
    partial void UpdateAplicaciones_Modulos_Tarifas(Aplicaciones_Modulos_Tarifas instance);
    partial void DeleteAplicaciones_Modulos_Tarifas(Aplicaciones_Modulos_Tarifas instance);
    partial void InsertAplicaciones_Tarifas(Aplicaciones_Tarifas instance);
    partial void UpdateAplicaciones_Tarifas(Aplicaciones_Tarifas instance);
    partial void DeleteAplicaciones_Tarifas(Aplicaciones_Tarifas instance);
    partial void InsertAplicaciones_TiposEnte(Aplicaciones_TiposEnte instance);
    partial void UpdateAplicaciones_TiposEnte(Aplicaciones_TiposEnte instance);
    partial void DeleteAplicaciones_TiposEnte(Aplicaciones_TiposEnte instance);
    partial void InsertEntes_Aplicaciones(Entes_Aplicaciones instance);
    partial void UpdateEntes_Aplicaciones(Entes_Aplicaciones instance);
    partial void DeleteEntes_Aplicaciones(Entes_Aplicaciones instance);
    partial void InsertLicenciasAnuales(LicenciasAnuales instance);
    partial void UpdateLicenciasAnuales(LicenciasAnuales instance);
    partial void DeleteLicenciasAnuales(LicenciasAnuales instance);
    partial void InsertLicenciasAnuales_TiposEnte(LicenciasAnuales_TiposEnte instance);
    partial void UpdateLicenciasAnuales_TiposEnte(LicenciasAnuales_TiposEnte instance);
    partial void DeleteLicenciasAnuales_TiposEnte(LicenciasAnuales_TiposEnte instance);
    partial void InsertContratosLicenciasAnuales(ContratosLicenciasAnuales instance);
    partial void UpdateContratosLicenciasAnuales(ContratosLicenciasAnuales instance);
    partial void DeleteContratosLicenciasAnuales(ContratosLicenciasAnuales instance);
    partial void InsertContratosLicenciasAnuales_Tarifas(ContratosLicenciasAnuales_Tarifas instance);
    partial void UpdateContratosLicenciasAnuales_Tarifas(ContratosLicenciasAnuales_Tarifas instance);
    partial void DeleteContratosLicenciasAnuales_Tarifas(ContratosLicenciasAnuales_Tarifas instance);
    partial void InsertEntes_LicenciasAnuales(Entes_LicenciasAnuales instance);
    partial void UpdateEntes_LicenciasAnuales(Entes_LicenciasAnuales instance);
    partial void DeleteEntes_LicenciasAnuales(Entes_LicenciasAnuales instance);
    partial void InsertProveedores_ContratosSoporte_Reparto(Proveedores_ContratosSoporte_Reparto instance);
    partial void UpdateProveedores_ContratosSoporte_Reparto(Proveedores_ContratosSoporte_Reparto instance);
    partial void DeleteProveedores_ContratosSoporte_Reparto(Proveedores_ContratosSoporte_Reparto instance);
    partial void InsertTareas_Empresas_LineasEsfuerzo_Aplicaciones(Tareas_Empresas_LineasEsfuerzo_Aplicaciones instance);
    partial void UpdateTareas_Empresas_LineasEsfuerzo_Aplicaciones(Tareas_Empresas_LineasEsfuerzo_Aplicaciones instance);
    partial void DeleteTareas_Empresas_LineasEsfuerzo_Aplicaciones(Tareas_Empresas_LineasEsfuerzo_Aplicaciones instance);
    partial void InsertTareas_Empresas_LineasEsfuerzo_Modulos(Tareas_Empresas_LineasEsfuerzo_Modulos instance);
    partial void UpdateTareas_Empresas_LineasEsfuerzo_Modulos(Tareas_Empresas_LineasEsfuerzo_Modulos instance);
    partial void DeleteTareas_Empresas_LineasEsfuerzo_Modulos(Tareas_Empresas_LineasEsfuerzo_Modulos instance);
    partial void InsertTareas_Empresas_LineasEsfuerzo_ModulosReparto(Tareas_Empresas_LineasEsfuerzo_ModulosReparto instance);
    partial void UpdateTareas_Empresas_LineasEsfuerzo_ModulosReparto(Tareas_Empresas_LineasEsfuerzo_ModulosReparto instance);
    partial void DeleteTareas_Empresas_LineasEsfuerzo_ModulosReparto(Tareas_Empresas_LineasEsfuerzo_ModulosReparto instance);
    partial void InsertEmpresas_Departamentos(Empresas_Departamentos instance);
    partial void UpdateEmpresas_Departamentos(Empresas_Departamentos instance);
    partial void DeleteEmpresas_Departamentos(Empresas_Departamentos instance);
    partial void InsertTareas_Empresas_LineasEsfuerzo_Asuntos(Tareas_Empresas_LineasEsfuerzo_Asuntos instance);
    partial void UpdateTareas_Empresas_LineasEsfuerzo_Asuntos(Tareas_Empresas_LineasEsfuerzo_Asuntos instance);
    partial void DeleteTareas_Empresas_LineasEsfuerzo_Asuntos(Tareas_Empresas_LineasEsfuerzo_Asuntos instance);
    partial void InsertTareas_Empresas_LineasEsfuerzo_LicenciasAnuales(Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales instance);
    partial void UpdateTareas_Empresas_LineasEsfuerzo_LicenciasAnuales(Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales instance);
    partial void DeleteTareas_Empresas_LineasEsfuerzo_LicenciasAnuales(Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales instance);
    partial void InsertTelefonia(Telefonia instance);
    partial void UpdateTelefonia(Telefonia instance);
    partial void DeleteTelefonia(Telefonia instance);
    partial void InsertTiposCuota(TiposCuota instance);
    partial void UpdateTiposCuota(TiposCuota instance);
    partial void DeleteTiposCuota(TiposCuota instance);
    partial void InsertContratosCAU_ExcluidasGuardia(ContratosCAU_ExcluidasGuardia instance);
    partial void UpdateContratosCAU_ExcluidasGuardia(ContratosCAU_ExcluidasGuardia instance);
    partial void DeleteContratosCAU_ExcluidasGuardia(ContratosCAU_ExcluidasGuardia instance);
    #endregion
		
		public FacturacionInternaDataContext() : 
				base(global::AccesoDatos.Properties.Settings.Default.FacturacionInternaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FacturacionInternaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FacturacionInternaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FacturacionInternaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FacturacionInternaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Departamentos> Departamentos
		{
			get
			{
				return this.GetTable<Departamentos>();
			}
		}
		
		public System.Data.Linq.Table<Usuarios> Usuarios
		{
			get
			{
				return this.GetTable<Usuarios>();
			}
		}
		
		public System.Data.Linq.Table<Empresas> Empresas
		{
			get
			{
				return this.GetTable<Empresas>();
			}
		}
		
		public System.Data.Linq.Table<Empresas_Aprobadores> Empresas_Aprobadores
		{
			get
			{
				return this.GetTable<Empresas_Aprobadores>();
			}
		}
		
		public System.Data.Linq.Table<EstadosSolicitud> EstadosSolicitud
		{
			get
			{
				return this.GetTable<EstadosSolicitud>();
			}
		}
		
		public System.Data.Linq.Table<EstadosSolicitud_Idioma> EstadosSolicitud_Idioma
		{
			get
			{
				return this.GetTable<EstadosSolicitud_Idioma>();
			}
		}
		
		public System.Data.Linq.Table<Facturas_Tareas_LineasEsfuerzo> Facturas_Tareas_LineasEsfuerzo
		{
			get
			{
				return this.GetTable<Facturas_Tareas_LineasEsfuerzo>();
			}
		}
		
		public System.Data.Linq.Table<Idiomas> Idiomas
		{
			get
			{
				return this.GetTable<Idiomas>();
			}
		}
		
		public System.Data.Linq.Table<LineasNegocio> LineasNegocio
		{
			get
			{
				return this.GetTable<LineasNegocio>();
			}
		}
		
		public System.Data.Linq.Table<LineasNegocio_Idioma> LineasNegocio_Idioma
		{
			get
			{
				return this.GetTable<LineasNegocio_Idioma>();
			}
		}
		
		public System.Data.Linq.Table<Personas> Personas
		{
			get
			{
				return this.GetTable<Personas>();
			}
		}
		
		public System.Data.Linq.Table<Personas_Secciones> Personas_Secciones
		{
			get
			{
				return this.GetTable<Personas_Secciones>();
			}
		}
		
		public System.Data.Linq.Table<Secciones> Secciones
		{
			get
			{
				return this.GetTable<Secciones>();
			}
		}
		
		public System.Data.Linq.Table<Seguridad_Opciones> Seguridad_Opciones
		{
			get
			{
				return this.GetTable<Seguridad_Opciones>();
			}
		}
		
		public System.Data.Linq.Table<Seguridad_Perfiles> Seguridad_Perfiles
		{
			get
			{
				return this.GetTable<Seguridad_Perfiles>();
			}
		}
		
		public System.Data.Linq.Table<Seguridad_Perfiles_Opciones> Seguridad_Perfiles_Opciones
		{
			get
			{
				return this.GetTable<Seguridad_Perfiles_Opciones>();
			}
		}
		
		public System.Data.Linq.Table<Tareas> Tareas
		{
			get
			{
				return this.GetTable<Tareas>();
			}
		}
		
		public System.Data.Linq.Table<Tareas_Empresas> Tareas_Empresas
		{
			get
			{
				return this.GetTable<Tareas_Empresas>();
			}
		}
		
		public System.Data.Linq.Table<Tareas_Empresas_LineasEsfuerzo> Tareas_Empresas_LineasEsfuerzo
		{
			get
			{
				return this.GetTable<Tareas_Empresas_LineasEsfuerzo>();
			}
		}
		
		public System.Data.Linq.Table<TiposTarea> TiposTarea
		{
			get
			{
				return this.GetTable<TiposTarea>();
			}
		}
		
		public System.Data.Linq.Table<UnidadesTarea> UnidadesTarea
		{
			get
			{
				return this.GetTable<UnidadesTarea>();
			}
		}
		
		public System.Data.Linq.Table<UnidadesTarea_Idioma> UnidadesTarea_Idioma
		{
			get
			{
				return this.GetTable<UnidadesTarea_Idioma>();
			}
		}
		
		public System.Data.Linq.Table<Facturas> Facturas
		{
			get
			{
				return this.GetTable<Facturas>();
			}
		}
		
		public System.Data.Linq.Table<EnlacesContables> EnlacesContables
		{
			get
			{
				return this.GetTable<EnlacesContables>();
			}
		}
		
		public System.Data.Linq.Table<ConceptosFacturacion> ConceptosFacturacion
		{
			get
			{
				return this.GetTable<ConceptosFacturacion>();
			}
		}
		
		public System.Data.Linq.Table<ConceptosFacturacion_Idioma> ConceptosFacturacion_Idioma
		{
			get
			{
				return this.GetTable<ConceptosFacturacion_Idioma>();
			}
		}
		
		public System.Data.Linq.Table<Configuraciones> Configuraciones
		{
			get
			{
				return this.GetTable<Configuraciones>();
			}
		}
		
		public System.Data.Linq.Table<ItemNumbersD365> ItemNumbersD365
		{
			get
			{
				return this.GetTable<ItemNumbersD365>();
			}
		}
		
		public System.Data.Linq.Table<ProductosD365> ProductosD365
		{
			get
			{
				return this.GetTable<ProductosD365>();
			}
		}
		
		public System.Data.Linq.Table<Proveedores> Proveedores
		{
			get
			{
				return this.GetTable<Proveedores>();
			}
		}
		
		public System.Data.Linq.Table<Licencias> Licencias
		{
			get
			{
				return this.GetTable<Licencias>();
			}
		}
		
		public System.Data.Linq.Table<Licencias_Excepciones> Licencias_Excepciones
		{
			get
			{
				return this.GetTable<Licencias_Excepciones>();
			}
		}
		
		public System.Data.Linq.Table<TiposEnte> TiposEnte
		{
			get
			{
				return this.GetTable<TiposEnte>();
			}
		}
		
		public System.Data.Linq.Table<Oficinas> Oficinas
		{
			get
			{
				return this.GetTable<Oficinas>();
			}
		}
		
		public System.Data.Linq.Table<Licencias_Tarifas> Licencias_Tarifas
		{
			get
			{
				return this.GetTable<Licencias_Tarifas>();
			}
		}
		
		public System.Data.Linq.Table<Entes> Entes
		{
			get
			{
				return this.GetTable<Entes>();
			}
		}
		
		public System.Data.Linq.Table<Entes_Licencias> Entes_Licencias
		{
			get
			{
				return this.GetTable<Entes_Licencias>();
			}
		}
		
		public System.Data.Linq.Table<EstadosTicket> EstadosTicket
		{
			get
			{
				return this.GetTable<EstadosTicket>();
			}
		}
		
		public System.Data.Linq.Table<GruposGuardia> GruposGuardia
		{
			get
			{
				return this.GetTable<GruposGuardia>();
			}
		}
		
		public System.Data.Linq.Table<OrigenesTicket> OrigenesTicket
		{
			get
			{
				return this.GetTable<OrigenesTicket>();
			}
		}
		
		public System.Data.Linq.Table<TiposTicket> TiposTicket
		{
			get
			{
				return this.GetTable<TiposTicket>();
			}
		}
		
		public System.Data.Linq.Table<ValidacionesTicket> ValidacionesTicket
		{
			get
			{
				return this.GetTable<ValidacionesTicket>();
			}
		}
		
		public System.Data.Linq.Table<Tareas_Empresas_LineasEsfuerzo_LicenciasMS> Tareas_Empresas_LineasEsfuerzo_LicenciasMS
		{
			get
			{
				return this.GetTable<Tareas_Empresas_LineasEsfuerzo_LicenciasMS>();
			}
		}
		
		public System.Data.Linq.Table<Licencias_TiposEnte> Licencias_TiposEnte
		{
			get
			{
				return this.GetTable<Licencias_TiposEnte>();
			}
		}
		
		public System.Data.Linq.Table<Licencias_Excepciones_LicenciasReemplazo> Licencias_Excepciones_LicenciasReemplazo
		{
			get
			{
				return this.GetTable<Licencias_Excepciones_LicenciasReemplazo>();
			}
		}
		
		public System.Data.Linq.Table<ContratosCAU> ContratosCAU
		{
			get
			{
				return this.GetTable<ContratosCAU>();
			}
		}
		
		public System.Data.Linq.Table<Tickets> Tickets
		{
			get
			{
				return this.GetTable<Tickets>();
			}
		}
		
		public System.Data.Linq.Table<Proveedores_ContratosSoporte> Proveedores_ContratosSoporte
		{
			get
			{
				return this.GetTable<Proveedores_ContratosSoporte>();
			}
		}
		
		public System.Data.Linq.Table<Proveedores_Asuntos> Proveedores_Asuntos
		{
			get
			{
				return this.GetTable<Proveedores_Asuntos>();
			}
		}
		
		public System.Data.Linq.Table<Licencias_Incompatibles> Licencias_Incompatibles
		{
			get
			{
				return this.GetTable<Licencias_Incompatibles>();
			}
		}
		
		public System.Data.Linq.Table<Tareas_Empresas_LineasEsfuerzo_Tickets> Tareas_Empresas_LineasEsfuerzo_Tickets
		{
			get
			{
				return this.GetTable<Tareas_Empresas_LineasEsfuerzo_Tickets>();
			}
		}
		
		public System.Data.Linq.Table<Proyectos> Proyectos
		{
			get
			{
				return this.GetTable<Proyectos>();
			}
		}
		
		public System.Data.Linq.Table<Licencias_Minimos> Licencias_Minimos
		{
			get
			{
				return this.GetTable<Licencias_Minimos>();
			}
		}
		
		public System.Data.Linq.Table<CategoriasTicket> CategoriasTicket
		{
			get
			{
				return this.GetTable<CategoriasTicket>();
			}
		}
		
		public System.Data.Linq.Table<Proyectos_Departamentos> Proyectos_Departamentos
		{
			get
			{
				return this.GetTable<Proyectos_Departamentos>();
			}
		}
		
		public System.Data.Linq.Table<Proyectos_Empresas> Proyectos_Empresas
		{
			get
			{
				return this.GetTable<Proyectos_Empresas>();
			}
		}
		
		public System.Data.Linq.Table<Proyectos_Partes> Proyectos_Partes
		{
			get
			{
				return this.GetTable<Proyectos_Partes>();
			}
		}
		
		public System.Data.Linq.Table<Proyectos_Partes_Horas> Proyectos_Partes_Horas
		{
			get
			{
				return this.GetTable<Proyectos_Partes_Horas>();
			}
		}
		
		public System.Data.Linq.Table<PeriodosPartes> PeriodosPartes
		{
			get
			{
				return this.GetTable<PeriodosPartes>();
			}
		}
		
		public System.Data.Linq.Table<Tareas_Empresas_LineasEsfuerzo_Partes> Tareas_Empresas_LineasEsfuerzo_Partes
		{
			get
			{
				return this.GetTable<Tareas_Empresas_LineasEsfuerzo_Partes>();
			}
		}
		
		public System.Data.Linq.Table<FacturasP> FacturasP
		{
			get
			{
				return this.GetTable<FacturasP>();
			}
		}
		
		public System.Data.Linq.Table<Aplicaciones> Aplicaciones
		{
			get
			{
				return this.GetTable<Aplicaciones>();
			}
		}
		
		public System.Data.Linq.Table<Aplicaciones_Modulos> Aplicaciones_Modulos
		{
			get
			{
				return this.GetTable<Aplicaciones_Modulos>();
			}
		}
		
		public System.Data.Linq.Table<Aplicaciones_Modulos_Empresas> Aplicaciones_Modulos_Empresas
		{
			get
			{
				return this.GetTable<Aplicaciones_Modulos_Empresas>();
			}
		}
		
		public System.Data.Linq.Table<Aplicaciones_Modulos_Tarifas> Aplicaciones_Modulos_Tarifas
		{
			get
			{
				return this.GetTable<Aplicaciones_Modulos_Tarifas>();
			}
		}
		
		public System.Data.Linq.Table<Aplicaciones_Tarifas> Aplicaciones_Tarifas
		{
			get
			{
				return this.GetTable<Aplicaciones_Tarifas>();
			}
		}
		
		public System.Data.Linq.Table<Aplicaciones_TiposEnte> Aplicaciones_TiposEnte
		{
			get
			{
				return this.GetTable<Aplicaciones_TiposEnte>();
			}
		}
		
		public System.Data.Linq.Table<Entes_Aplicaciones> Entes_Aplicaciones
		{
			get
			{
				return this.GetTable<Entes_Aplicaciones>();
			}
		}
		
		public System.Data.Linq.Table<LicenciasAnuales> LicenciasAnuales
		{
			get
			{
				return this.GetTable<LicenciasAnuales>();
			}
		}
		
		public System.Data.Linq.Table<LicenciasAnuales_TiposEnte> LicenciasAnuales_TiposEnte
		{
			get
			{
				return this.GetTable<LicenciasAnuales_TiposEnte>();
			}
		}
		
		public System.Data.Linq.Table<ContratosLicenciasAnuales> ContratosLicenciasAnuales
		{
			get
			{
				return this.GetTable<ContratosLicenciasAnuales>();
			}
		}
		
		public System.Data.Linq.Table<ContratosLicenciasAnuales_Tarifas> ContratosLicenciasAnuales_Tarifas
		{
			get
			{
				return this.GetTable<ContratosLicenciasAnuales_Tarifas>();
			}
		}
		
		public System.Data.Linq.Table<Entes_LicenciasAnuales> Entes_LicenciasAnuales
		{
			get
			{
				return this.GetTable<Entes_LicenciasAnuales>();
			}
		}
		
		public System.Data.Linq.Table<Proveedores_ContratosSoporte_Reparto> Proveedores_ContratosSoporte_Reparto
		{
			get
			{
				return this.GetTable<Proveedores_ContratosSoporte_Reparto>();
			}
		}
		
		public System.Data.Linq.Table<Tareas_Empresas_LineasEsfuerzo_Aplicaciones> Tareas_Empresas_LineasEsfuerzo_Aplicaciones
		{
			get
			{
				return this.GetTable<Tareas_Empresas_LineasEsfuerzo_Aplicaciones>();
			}
		}
		
		public System.Data.Linq.Table<Tareas_Empresas_LineasEsfuerzo_Modulos> Tareas_Empresas_LineasEsfuerzo_Modulos
		{
			get
			{
				return this.GetTable<Tareas_Empresas_LineasEsfuerzo_Modulos>();
			}
		}
		
		public System.Data.Linq.Table<Tareas_Empresas_LineasEsfuerzo_ModulosReparto> Tareas_Empresas_LineasEsfuerzo_ModulosReparto
		{
			get
			{
				return this.GetTable<Tareas_Empresas_LineasEsfuerzo_ModulosReparto>();
			}
		}
		
		public System.Data.Linq.Table<Empresas_Departamentos> Empresas_Departamentos
		{
			get
			{
				return this.GetTable<Empresas_Departamentos>();
			}
		}
		
		public System.Data.Linq.Table<Tareas_Empresas_LineasEsfuerzo_Asuntos> Tareas_Empresas_LineasEsfuerzo_Asuntos
		{
			get
			{
				return this.GetTable<Tareas_Empresas_LineasEsfuerzo_Asuntos>();
			}
		}
		
		public System.Data.Linq.Table<Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales> Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales
		{
			get
			{
				return this.GetTable<Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales>();
			}
		}
		
		public System.Data.Linq.Table<Telefonia> Telefonia
		{
			get
			{
				return this.GetTable<Telefonia>();
			}
		}
		
		public System.Data.Linq.Table<TiposCuota> TiposCuota
		{
			get
			{
				return this.GetTable<TiposCuota>();
			}
		}
		
		public System.Data.Linq.Table<ContratosCAU_ExcluidasGuardia> ContratosCAU_ExcluidasGuardia
		{
			get
			{
				return this.GetTable<ContratosCAU_ExcluidasGuardia>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Departamentos")]
	public partial class Departamentos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DEP_Id;
		
		private string _DEP_Nombre;
		
		private string _DEP_Codigo;
		
		private string _DEP_CodigoD365;
		
		private System.Nullable<int> _DEP_PER_Id_Responsable;
		
		private System.DateTime _FechaAlta;
		
		private System.DateTime _FechaModificacion;
		
		private int _PER_Id_Modificacion;
		
		private EntitySet<Personas> _Personas2;
		
		private EntitySet<Secciones> _Secciones;
		
		private EntitySet<ConceptosFacturacion> _ConceptosFacturacion;
		
		private EntitySet<Proyectos_Departamentos> _Proyectos_Departamentos;
		
		private EntityRef<Personas> _Personas;
		
		private EntityRef<Personas> _Personas1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDEP_IdChanging(int value);
    partial void OnDEP_IdChanged();
    partial void OnDEP_NombreChanging(string value);
    partial void OnDEP_NombreChanged();
    partial void OnDEP_CodigoChanging(string value);
    partial void OnDEP_CodigoChanged();
    partial void OnDEP_CodigoD365Changing(string value);
    partial void OnDEP_CodigoD365Changed();
    partial void OnDEP_PER_Id_ResponsableChanging(System.Nullable<int> value);
    partial void OnDEP_PER_Id_ResponsableChanged();
    partial void OnFechaAltaChanging(System.DateTime value);
    partial void OnFechaAltaChanged();
    partial void OnFechaModificacionChanging(System.DateTime value);
    partial void OnFechaModificacionChanged();
    partial void OnPER_Id_ModificacionChanging(int value);
    partial void OnPER_Id_ModificacionChanged();
    #endregion
		
		public Departamentos()
		{
			this._Personas2 = new EntitySet<Personas>(new Action<Personas>(this.attach_Personas2), new Action<Personas>(this.detach_Personas2));
			this._Secciones = new EntitySet<Secciones>(new Action<Secciones>(this.attach_Secciones), new Action<Secciones>(this.detach_Secciones));
			this._ConceptosFacturacion = new EntitySet<ConceptosFacturacion>(new Action<ConceptosFacturacion>(this.attach_ConceptosFacturacion), new Action<ConceptosFacturacion>(this.detach_ConceptosFacturacion));
			this._Proyectos_Departamentos = new EntitySet<Proyectos_Departamentos>(new Action<Proyectos_Departamentos>(this.attach_Proyectos_Departamentos), new Action<Proyectos_Departamentos>(this.detach_Proyectos_Departamentos));
			this._Personas = default(EntityRef<Personas>);
			this._Personas1 = default(EntityRef<Personas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEP_Id", DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DEP_Id
		{
			get
			{
				return this._DEP_Id;
			}
			set
			{
				if ((this._DEP_Id != value))
				{
					this.OnDEP_IdChanging(value);
					this.SendPropertyChanging();
					this._DEP_Id = value;
					this.SendPropertyChanged("DEP_Id");
					this.OnDEP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEP_Nombre", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string DEP_Nombre
		{
			get
			{
				return this._DEP_Nombre;
			}
			set
			{
				if ((this._DEP_Nombre != value))
				{
					this.OnDEP_NombreChanging(value);
					this.SendPropertyChanging();
					this._DEP_Nombre = value;
					this.SendPropertyChanged("DEP_Nombre");
					this.OnDEP_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEP_Codigo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string DEP_Codigo
		{
			get
			{
				return this._DEP_Codigo;
			}
			set
			{
				if ((this._DEP_Codigo != value))
				{
					this.OnDEP_CodigoChanging(value);
					this.SendPropertyChanging();
					this._DEP_Codigo = value;
					this.SendPropertyChanged("DEP_Codigo");
					this.OnDEP_CodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEP_CodigoD365", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DEP_CodigoD365
		{
			get
			{
				return this._DEP_CodigoD365;
			}
			set
			{
				if ((this._DEP_CodigoD365 != value))
				{
					this.OnDEP_CodigoD365Changing(value);
					this.SendPropertyChanging();
					this._DEP_CodigoD365 = value;
					this.SendPropertyChanged("DEP_CodigoD365");
					this.OnDEP_CodigoD365Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEP_PER_Id_Responsable", DbType="Int")]
		public System.Nullable<int> DEP_PER_Id_Responsable
		{
			get
			{
				return this._DEP_PER_Id_Responsable;
			}
			set
			{
				if ((this._DEP_PER_Id_Responsable != value))
				{
					if (this._Personas1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDEP_PER_Id_ResponsableChanging(value);
					this.SendPropertyChanging();
					this._DEP_PER_Id_Responsable = value;
					this.SendPropertyChanged("DEP_PER_Id_Responsable");
					this.OnDEP_PER_Id_ResponsableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAlta", DbType="DateTime NOT NULL")]
		public System.DateTime FechaAlta
		{
			get
			{
				return this._FechaAlta;
			}
			set
			{
				if ((this._FechaAlta != value))
				{
					this.OnFechaAltaChanging(value);
					this.SendPropertyChanging();
					this._FechaAlta = value;
					this.SendPropertyChanged("FechaAlta");
					this.OnFechaAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaModificacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaModificacion
		{
			get
			{
				return this._FechaModificacion;
			}
			set
			{
				if ((this._FechaModificacion != value))
				{
					this.OnFechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._FechaModificacion = value;
					this.SendPropertyChanged("FechaModificacion");
					this.OnFechaModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Id_Modificacion", DbType="Int NOT NULL")]
		public int PER_Id_Modificacion
		{
			get
			{
				return this._PER_Id_Modificacion;
			}
			set
			{
				if ((this._PER_Id_Modificacion != value))
				{
					if (this._Personas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPER_Id_ModificacionChanging(value);
					this.SendPropertyChanging();
					this._PER_Id_Modificacion = value;
					this.SendPropertyChanged("PER_Id_Modificacion");
					this.OnPER_Id_ModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departamentos_Personas", Storage="_Personas2", ThisKey="DEP_Id", OtherKey="PER_DEP_Id")]
		public EntitySet<Personas> Personas2
		{
			get
			{
				return this._Personas2;
			}
			set
			{
				this._Personas2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departamentos_Secciones", Storage="_Secciones", ThisKey="DEP_Id", OtherKey="SEC_DEP_Id")]
		public EntitySet<Secciones> Secciones
		{
			get
			{
				return this._Secciones;
			}
			set
			{
				this._Secciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departamentos_ConceptosFacturacion", Storage="_ConceptosFacturacion", ThisKey="DEP_Id", OtherKey="CFA_DEP_Id")]
		public EntitySet<ConceptosFacturacion> ConceptosFacturacion
		{
			get
			{
				return this._ConceptosFacturacion;
			}
			set
			{
				this._ConceptosFacturacion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departamentos_Proyectos_Departamentos", Storage="_Proyectos_Departamentos", ThisKey="DEP_Id", OtherKey="PRD_DEP_Id")]
		public EntitySet<Proyectos_Departamentos> Proyectos_Departamentos
		{
			get
			{
				return this._Proyectos_Departamentos;
			}
			set
			{
				this._Proyectos_Departamentos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Departamentos", Storage="_Personas", ThisKey="PER_Id_Modificacion", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas Personas
		{
			get
			{
				return this._Personas.Entity;
			}
			set
			{
				Personas previousValue = this._Personas.Entity;
				if (((previousValue != value) 
							|| (this._Personas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personas.Entity = null;
						previousValue.Departamentos.Remove(this);
					}
					this._Personas.Entity = value;
					if ((value != null))
					{
						value.Departamentos.Add(this);
						this._PER_Id_Modificacion = value.PER_Id;
					}
					else
					{
						this._PER_Id_Modificacion = default(int);
					}
					this.SendPropertyChanged("Personas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Departamentos1", Storage="_Personas1", ThisKey="DEP_PER_Id_Responsable", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas Personas1
		{
			get
			{
				return this._Personas1.Entity;
			}
			set
			{
				Personas previousValue = this._Personas1.Entity;
				if (((previousValue != value) 
							|| (this._Personas1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personas1.Entity = null;
						previousValue.Departamentos1.Remove(this);
					}
					this._Personas1.Entity = value;
					if ((value != null))
					{
						value.Departamentos1.Add(this);
						this._DEP_PER_Id_Responsable = value.PER_Id;
					}
					else
					{
						this._DEP_PER_Id_Responsable = default(Nullable<int>);
					}
					this.SendPropertyChanged("Personas1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Personas2(Personas entity)
		{
			this.SendPropertyChanging();
			entity.Departamentos2 = this;
		}
		
		private void detach_Personas2(Personas entity)
		{
			this.SendPropertyChanging();
			entity.Departamentos2 = null;
		}
		
		private void attach_Secciones(Secciones entity)
		{
			this.SendPropertyChanging();
			entity.Departamentos = this;
		}
		
		private void detach_Secciones(Secciones entity)
		{
			this.SendPropertyChanging();
			entity.Departamentos = null;
		}
		
		private void attach_ConceptosFacturacion(ConceptosFacturacion entity)
		{
			this.SendPropertyChanging();
			entity.Departamentos = this;
		}
		
		private void detach_ConceptosFacturacion(ConceptosFacturacion entity)
		{
			this.SendPropertyChanging();
			entity.Departamentos = null;
		}
		
		private void attach_Proyectos_Departamentos(Proyectos_Departamentos entity)
		{
			this.SendPropertyChanging();
			entity.Departamentos = this;
		}
		
		private void detach_Proyectos_Departamentos(Proyectos_Departamentos entity)
		{
			this.SendPropertyChanging();
			entity.Departamentos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuarios")]
	public partial class Usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _USU_Id;
		
		private int _USU_PER_Id;
		
		private System.Nullable<int> _USU_SPE_Id;
		
		private bool _USU_VerTodo;
		
		private System.DateTime _FechaAlta;
		
		private System.DateTime _FechaModificacion;
		
		private int _PER_Id_Modificacion;
		
		private EntityRef<Personas> _PersonaModificacion;
		
		private EntityRef<Personas> _PersonaUsuario;
		
		private EntityRef<Seguridad_Perfiles> _Seguridad_Perfiles;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSU_IdChanging(string value);
    partial void OnUSU_IdChanged();
    partial void OnUSU_PER_IdChanging(int value);
    partial void OnUSU_PER_IdChanged();
    partial void OnUSU_SPE_IdChanging(System.Nullable<int> value);
    partial void OnUSU_SPE_IdChanged();
    partial void OnUSU_VerTodoChanging(bool value);
    partial void OnUSU_VerTodoChanged();
    partial void OnFechaAltaChanging(System.DateTime value);
    partial void OnFechaAltaChanged();
    partial void OnFechaModificacionChanging(System.DateTime value);
    partial void OnFechaModificacionChanged();
    partial void OnPER_Id_ModificacionChanging(int value);
    partial void OnPER_Id_ModificacionChanged();
    #endregion
		
		public Usuarios()
		{
			this._PersonaModificacion = default(EntityRef<Personas>);
			this._PersonaUsuario = default(EntityRef<Personas>);
			this._Seguridad_Perfiles = default(EntityRef<Seguridad_Perfiles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USU_Id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string USU_Id
		{
			get
			{
				return this._USU_Id;
			}
			set
			{
				if ((this._USU_Id != value))
				{
					this.OnUSU_IdChanging(value);
					this.SendPropertyChanging();
					this._USU_Id = value;
					this.SendPropertyChanged("USU_Id");
					this.OnUSU_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USU_PER_Id", DbType="Int NOT NULL")]
		public int USU_PER_Id
		{
			get
			{
				return this._USU_PER_Id;
			}
			set
			{
				if ((this._USU_PER_Id != value))
				{
					if (this._PersonaUsuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSU_PER_IdChanging(value);
					this.SendPropertyChanging();
					this._USU_PER_Id = value;
					this.SendPropertyChanged("USU_PER_Id");
					this.OnUSU_PER_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USU_SPE_Id", DbType="Int")]
		public System.Nullable<int> USU_SPE_Id
		{
			get
			{
				return this._USU_SPE_Id;
			}
			set
			{
				if ((this._USU_SPE_Id != value))
				{
					if (this._Seguridad_Perfiles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSU_SPE_IdChanging(value);
					this.SendPropertyChanging();
					this._USU_SPE_Id = value;
					this.SendPropertyChanged("USU_SPE_Id");
					this.OnUSU_SPE_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USU_VerTodo", DbType="Bit NOT NULL")]
		public bool USU_VerTodo
		{
			get
			{
				return this._USU_VerTodo;
			}
			set
			{
				if ((this._USU_VerTodo != value))
				{
					this.OnUSU_VerTodoChanging(value);
					this.SendPropertyChanging();
					this._USU_VerTodo = value;
					this.SendPropertyChanged("USU_VerTodo");
					this.OnUSU_VerTodoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAlta", DbType="DateTime NOT NULL")]
		public System.DateTime FechaAlta
		{
			get
			{
				return this._FechaAlta;
			}
			set
			{
				if ((this._FechaAlta != value))
				{
					this.OnFechaAltaChanging(value);
					this.SendPropertyChanging();
					this._FechaAlta = value;
					this.SendPropertyChanged("FechaAlta");
					this.OnFechaAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaModificacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaModificacion
		{
			get
			{
				return this._FechaModificacion;
			}
			set
			{
				if ((this._FechaModificacion != value))
				{
					this.OnFechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._FechaModificacion = value;
					this.SendPropertyChanged("FechaModificacion");
					this.OnFechaModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Id_Modificacion", DbType="Int NOT NULL")]
		public int PER_Id_Modificacion
		{
			get
			{
				return this._PER_Id_Modificacion;
			}
			set
			{
				if ((this._PER_Id_Modificacion != value))
				{
					if (this._PersonaModificacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPER_Id_ModificacionChanging(value);
					this.SendPropertyChanging();
					this._PER_Id_Modificacion = value;
					this.SendPropertyChanged("PER_Id_Modificacion");
					this.OnPER_Id_ModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Usuarios", Storage="_PersonaModificacion", ThisKey="PER_Id_Modificacion", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas PersonaModificacion
		{
			get
			{
				return this._PersonaModificacion.Entity;
			}
			set
			{
				Personas previousValue = this._PersonaModificacion.Entity;
				if (((previousValue != value) 
							|| (this._PersonaModificacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonaModificacion.Entity = null;
						previousValue.Usuarios.Remove(this);
					}
					this._PersonaModificacion.Entity = value;
					if ((value != null))
					{
						value.Usuarios.Add(this);
						this._PER_Id_Modificacion = value.PER_Id;
					}
					else
					{
						this._PER_Id_Modificacion = default(int);
					}
					this.SendPropertyChanged("PersonaModificacion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Usuarios1", Storage="_PersonaUsuario", ThisKey="USU_PER_Id", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas PersonaUsuario
		{
			get
			{
				return this._PersonaUsuario.Entity;
			}
			set
			{
				Personas previousValue = this._PersonaUsuario.Entity;
				if (((previousValue != value) 
							|| (this._PersonaUsuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonaUsuario.Entity = null;
						previousValue.Usuarios1.Remove(this);
					}
					this._PersonaUsuario.Entity = value;
					if ((value != null))
					{
						value.Usuarios1.Add(this);
						this._USU_PER_Id = value.PER_Id;
					}
					else
					{
						this._USU_PER_Id = default(int);
					}
					this.SendPropertyChanged("PersonaUsuario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seguridad_Perfiles_Usuarios", Storage="_Seguridad_Perfiles", ThisKey="USU_SPE_Id", OtherKey="SPE_Id", IsForeignKey=true)]
		public Seguridad_Perfiles Seguridad_Perfiles
		{
			get
			{
				return this._Seguridad_Perfiles.Entity;
			}
			set
			{
				Seguridad_Perfiles previousValue = this._Seguridad_Perfiles.Entity;
				if (((previousValue != value) 
							|| (this._Seguridad_Perfiles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Seguridad_Perfiles.Entity = null;
						previousValue.Usuarios.Remove(this);
					}
					this._Seguridad_Perfiles.Entity = value;
					if ((value != null))
					{
						value.Usuarios.Add(this);
						this._USU_SPE_Id = value.SPE_Id;
					}
					else
					{
						this._USU_SPE_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Seguridad_Perfiles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empresas")]
	public partial class Empresas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EMP_Id;
		
		private string _EMP_Nombre;
		
		private string _EMP_RazonSocial;
		
		private string _EMP_CIF;
		
		private string _EMP_Direccion;
		
		private System.Nullable<int> _EMP_PER_Id_AprobadorDefault;
		
		private System.Nullable<int> _EMP_LNE_Id;
		
		private int _EMP_CodigoAPIKA;
		
		private string _EMP_CodigoD365;
		
		private int _EMP_FPA_CodigoAPIKA;
		
		private string _EMP_FPA_D365;
		
		private int _EMP_TipoCliente;
		
		private string _EMP_EGrupoD365;
		
		private bool _EMP_EmpresaFacturar;
		
		private System.DateTime _FechaAlta;
		
		private System.DateTime _FechaModificacion;
		
		private int _PER_Id_Modificacion;
		
		private System.Nullable<int> _EMP_EmpresaFacturar_Id;
		
		private bool _EMP_ExcluidaGuardia;
		
		private System.Nullable<int> _EMP_GRG_Id;
		
		private string _EMP_NombreDA;
		
		private string _EMP_NumFacturaVDF;
		
		private EntitySet<Empresas_Aprobadores> _Empresas_Aprobadores;
		
		private EntitySet<Tareas_Empresas> _Tareas_Empresas;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo> _Tareas_Empresas_LineasEsfuerzo;
		
		private EntitySet<Facturas> _Facturas;
		
		private EntitySet<Facturas> _FacturasEmpreaFacturar;
		
		private EntitySet<Licencias_Excepciones> _Licencias_Excepciones;
		
		private EntitySet<Entes> _Entes;
		
		private EntitySet<Licencias_Excepciones_LicenciasReemplazo> _Licencias_Excepciones_LicenciasReemplazo;
		
		private EntitySet<Proveedores_Asuntos> _Proveedores_Asuntos;
		
		private EntitySet<Licencias_Minimos> _Licencias_Minimos;
		
		private EntitySet<Proyectos_Empresas> _Proyectos_Empresas;
		
		private EntitySet<Aplicaciones_Modulos_Empresas> _Aplicaciones_Modulos_Empresas;
		
		private EntitySet<Proveedores_ContratosSoporte_Reparto> _Proveedores_ContratosSoporte_Reparto;
		
		private EntitySet<Empresas_Departamentos> _Empresas_Departamentos;
		
		private EntitySet<Telefonia> _Telefonia;
		
		private EntitySet<Telefonia> _Telefonia1;
		
		private EntitySet<ContratosCAU_ExcluidasGuardia> _ContratosCAU_ExcluidasGuardia;
		
		private EntityRef<LineasNegocio> _LineasNegocio;
		
		private EntityRef<Personas> _Personas;
		
		private EntityRef<Personas> _Personas1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEMP_IdChanging(int value);
    partial void OnEMP_IdChanged();
    partial void OnEMP_NombreChanging(string value);
    partial void OnEMP_NombreChanged();
    partial void OnEMP_RazonSocialChanging(string value);
    partial void OnEMP_RazonSocialChanged();
    partial void OnEMP_CIFChanging(string value);
    partial void OnEMP_CIFChanged();
    partial void OnEMP_DireccionChanging(string value);
    partial void OnEMP_DireccionChanged();
    partial void OnEMP_PER_Id_AprobadorDefaultChanging(System.Nullable<int> value);
    partial void OnEMP_PER_Id_AprobadorDefaultChanged();
    partial void OnEMP_LNE_IdChanging(System.Nullable<int> value);
    partial void OnEMP_LNE_IdChanged();
    partial void OnEMP_CodigoAPIKAChanging(int value);
    partial void OnEMP_CodigoAPIKAChanged();
    partial void OnEMP_CodigoD365Changing(string value);
    partial void OnEMP_CodigoD365Changed();
    partial void OnEMP_FPA_CodigoAPIKAChanging(int value);
    partial void OnEMP_FPA_CodigoAPIKAChanged();
    partial void OnEMP_FPA_D365Changing(string value);
    partial void OnEMP_FPA_D365Changed();
    partial void OnEMP_TipoClienteChanging(int value);
    partial void OnEMP_TipoClienteChanged();
    partial void OnEMP_EGrupoD365Changing(string value);
    partial void OnEMP_EGrupoD365Changed();
    partial void OnEMP_EmpresaFacturarChanging(bool value);
    partial void OnEMP_EmpresaFacturarChanged();
    partial void OnFechaAltaChanging(System.DateTime value);
    partial void OnFechaAltaChanged();
    partial void OnFechaModificacionChanging(System.DateTime value);
    partial void OnFechaModificacionChanged();
    partial void OnPER_Id_ModificacionChanging(int value);
    partial void OnPER_Id_ModificacionChanged();
    partial void OnEMP_EmpresaFacturar_IdChanging(System.Nullable<int> value);
    partial void OnEMP_EmpresaFacturar_IdChanged();
    partial void OnEMP_ExcluidaGuardiaChanging(bool value);
    partial void OnEMP_ExcluidaGuardiaChanged();
    partial void OnEMP_GRG_IdChanging(System.Nullable<int> value);
    partial void OnEMP_GRG_IdChanged();
    partial void OnEMP_NombreDAChanging(string value);
    partial void OnEMP_NombreDAChanged();
    partial void OnEMP_NumFacturaVDFChanging(string value);
    partial void OnEMP_NumFacturaVDFChanged();
    #endregion
		
		public Empresas()
		{
			this._Empresas_Aprobadores = new EntitySet<Empresas_Aprobadores>(new Action<Empresas_Aprobadores>(this.attach_Empresas_Aprobadores), new Action<Empresas_Aprobadores>(this.detach_Empresas_Aprobadores));
			this._Tareas_Empresas = new EntitySet<Tareas_Empresas>(new Action<Tareas_Empresas>(this.attach_Tareas_Empresas), new Action<Tareas_Empresas>(this.detach_Tareas_Empresas));
			this._Tareas_Empresas_LineasEsfuerzo = new EntitySet<Tareas_Empresas_LineasEsfuerzo>(new Action<Tareas_Empresas_LineasEsfuerzo>(this.attach_Tareas_Empresas_LineasEsfuerzo), new Action<Tareas_Empresas_LineasEsfuerzo>(this.detach_Tareas_Empresas_LineasEsfuerzo));
			this._Facturas = new EntitySet<Facturas>(new Action<Facturas>(this.attach_Facturas), new Action<Facturas>(this.detach_Facturas));
			this._FacturasEmpreaFacturar = new EntitySet<Facturas>(new Action<Facturas>(this.attach_FacturasEmpreaFacturar), new Action<Facturas>(this.detach_FacturasEmpreaFacturar));
			this._Licencias_Excepciones = new EntitySet<Licencias_Excepciones>(new Action<Licencias_Excepciones>(this.attach_Licencias_Excepciones), new Action<Licencias_Excepciones>(this.detach_Licencias_Excepciones));
			this._Entes = new EntitySet<Entes>(new Action<Entes>(this.attach_Entes), new Action<Entes>(this.detach_Entes));
			this._Licencias_Excepciones_LicenciasReemplazo = new EntitySet<Licencias_Excepciones_LicenciasReemplazo>(new Action<Licencias_Excepciones_LicenciasReemplazo>(this.attach_Licencias_Excepciones_LicenciasReemplazo), new Action<Licencias_Excepciones_LicenciasReemplazo>(this.detach_Licencias_Excepciones_LicenciasReemplazo));
			this._Proveedores_Asuntos = new EntitySet<Proveedores_Asuntos>(new Action<Proveedores_Asuntos>(this.attach_Proveedores_Asuntos), new Action<Proveedores_Asuntos>(this.detach_Proveedores_Asuntos));
			this._Licencias_Minimos = new EntitySet<Licencias_Minimos>(new Action<Licencias_Minimos>(this.attach_Licencias_Minimos), new Action<Licencias_Minimos>(this.detach_Licencias_Minimos));
			this._Proyectos_Empresas = new EntitySet<Proyectos_Empresas>(new Action<Proyectos_Empresas>(this.attach_Proyectos_Empresas), new Action<Proyectos_Empresas>(this.detach_Proyectos_Empresas));
			this._Aplicaciones_Modulos_Empresas = new EntitySet<Aplicaciones_Modulos_Empresas>(new Action<Aplicaciones_Modulos_Empresas>(this.attach_Aplicaciones_Modulos_Empresas), new Action<Aplicaciones_Modulos_Empresas>(this.detach_Aplicaciones_Modulos_Empresas));
			this._Proveedores_ContratosSoporte_Reparto = new EntitySet<Proveedores_ContratosSoporte_Reparto>(new Action<Proveedores_ContratosSoporte_Reparto>(this.attach_Proveedores_ContratosSoporte_Reparto), new Action<Proveedores_ContratosSoporte_Reparto>(this.detach_Proveedores_ContratosSoporte_Reparto));
			this._Empresas_Departamentos = new EntitySet<Empresas_Departamentos>(new Action<Empresas_Departamentos>(this.attach_Empresas_Departamentos), new Action<Empresas_Departamentos>(this.detach_Empresas_Departamentos));
			this._Telefonia = new EntitySet<Telefonia>(new Action<Telefonia>(this.attach_Telefonia), new Action<Telefonia>(this.detach_Telefonia));
			this._Telefonia1 = new EntitySet<Telefonia>(new Action<Telefonia>(this.attach_Telefonia1), new Action<Telefonia>(this.detach_Telefonia1));
			this._ContratosCAU_ExcluidasGuardia = new EntitySet<ContratosCAU_ExcluidasGuardia>(new Action<ContratosCAU_ExcluidasGuardia>(this.attach_ContratosCAU_ExcluidasGuardia), new Action<ContratosCAU_ExcluidasGuardia>(this.detach_ContratosCAU_ExcluidasGuardia));
			this._LineasNegocio = default(EntityRef<LineasNegocio>);
			this._Personas = default(EntityRef<Personas>);
			this._Personas1 = default(EntityRef<Personas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EMP_Id
		{
			get
			{
				return this._EMP_Id;
			}
			set
			{
				if ((this._EMP_Id != value))
				{
					this.OnEMP_IdChanging(value);
					this.SendPropertyChanging();
					this._EMP_Id = value;
					this.SendPropertyChanged("EMP_Id");
					this.OnEMP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_Nombre", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string EMP_Nombre
		{
			get
			{
				return this._EMP_Nombre;
			}
			set
			{
				if ((this._EMP_Nombre != value))
				{
					this.OnEMP_NombreChanging(value);
					this.SendPropertyChanging();
					this._EMP_Nombre = value;
					this.SendPropertyChanged("EMP_Nombre");
					this.OnEMP_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_RazonSocial", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string EMP_RazonSocial
		{
			get
			{
				return this._EMP_RazonSocial;
			}
			set
			{
				if ((this._EMP_RazonSocial != value))
				{
					this.OnEMP_RazonSocialChanging(value);
					this.SendPropertyChanging();
					this._EMP_RazonSocial = value;
					this.SendPropertyChanged("EMP_RazonSocial");
					this.OnEMP_RazonSocialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_CIF", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string EMP_CIF
		{
			get
			{
				return this._EMP_CIF;
			}
			set
			{
				if ((this._EMP_CIF != value))
				{
					this.OnEMP_CIFChanging(value);
					this.SendPropertyChanging();
					this._EMP_CIF = value;
					this.SendPropertyChanged("EMP_CIF");
					this.OnEMP_CIFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_Direccion", DbType="VarChar(MAX)")]
		public string EMP_Direccion
		{
			get
			{
				return this._EMP_Direccion;
			}
			set
			{
				if ((this._EMP_Direccion != value))
				{
					this.OnEMP_DireccionChanging(value);
					this.SendPropertyChanging();
					this._EMP_Direccion = value;
					this.SendPropertyChanged("EMP_Direccion");
					this.OnEMP_DireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_PER_Id_AprobadorDefault", DbType="Int")]
		public System.Nullable<int> EMP_PER_Id_AprobadorDefault
		{
			get
			{
				return this._EMP_PER_Id_AprobadorDefault;
			}
			set
			{
				if ((this._EMP_PER_Id_AprobadorDefault != value))
				{
					if (this._Personas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEMP_PER_Id_AprobadorDefaultChanging(value);
					this.SendPropertyChanging();
					this._EMP_PER_Id_AprobadorDefault = value;
					this.SendPropertyChanged("EMP_PER_Id_AprobadorDefault");
					this.OnEMP_PER_Id_AprobadorDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_LNE_Id", DbType="Int")]
		public System.Nullable<int> EMP_LNE_Id
		{
			get
			{
				return this._EMP_LNE_Id;
			}
			set
			{
				if ((this._EMP_LNE_Id != value))
				{
					if (this._LineasNegocio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEMP_LNE_IdChanging(value);
					this.SendPropertyChanging();
					this._EMP_LNE_Id = value;
					this.SendPropertyChanged("EMP_LNE_Id");
					this.OnEMP_LNE_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_CodigoAPIKA", DbType="Int NOT NULL")]
		public int EMP_CodigoAPIKA
		{
			get
			{
				return this._EMP_CodigoAPIKA;
			}
			set
			{
				if ((this._EMP_CodigoAPIKA != value))
				{
					this.OnEMP_CodigoAPIKAChanging(value);
					this.SendPropertyChanging();
					this._EMP_CodigoAPIKA = value;
					this.SendPropertyChanged("EMP_CodigoAPIKA");
					this.OnEMP_CodigoAPIKAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_CodigoD365", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EMP_CodigoD365
		{
			get
			{
				return this._EMP_CodigoD365;
			}
			set
			{
				if ((this._EMP_CodigoD365 != value))
				{
					this.OnEMP_CodigoD365Changing(value);
					this.SendPropertyChanging();
					this._EMP_CodigoD365 = value;
					this.SendPropertyChanged("EMP_CodigoD365");
					this.OnEMP_CodigoD365Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_FPA_CodigoAPIKA", DbType="Int NOT NULL")]
		public int EMP_FPA_CodigoAPIKA
		{
			get
			{
				return this._EMP_FPA_CodigoAPIKA;
			}
			set
			{
				if ((this._EMP_FPA_CodigoAPIKA != value))
				{
					this.OnEMP_FPA_CodigoAPIKAChanging(value);
					this.SendPropertyChanging();
					this._EMP_FPA_CodigoAPIKA = value;
					this.SendPropertyChanged("EMP_FPA_CodigoAPIKA");
					this.OnEMP_FPA_CodigoAPIKAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_FPA_D365", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EMP_FPA_D365
		{
			get
			{
				return this._EMP_FPA_D365;
			}
			set
			{
				if ((this._EMP_FPA_D365 != value))
				{
					this.OnEMP_FPA_D365Changing(value);
					this.SendPropertyChanging();
					this._EMP_FPA_D365 = value;
					this.SendPropertyChanged("EMP_FPA_D365");
					this.OnEMP_FPA_D365Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_TipoCliente", DbType="Int NOT NULL")]
		public int EMP_TipoCliente
		{
			get
			{
				return this._EMP_TipoCliente;
			}
			set
			{
				if ((this._EMP_TipoCliente != value))
				{
					this.OnEMP_TipoClienteChanging(value);
					this.SendPropertyChanging();
					this._EMP_TipoCliente = value;
					this.SendPropertyChanged("EMP_TipoCliente");
					this.OnEMP_TipoClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_EGrupoD365", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EMP_EGrupoD365
		{
			get
			{
				return this._EMP_EGrupoD365;
			}
			set
			{
				if ((this._EMP_EGrupoD365 != value))
				{
					this.OnEMP_EGrupoD365Changing(value);
					this.SendPropertyChanging();
					this._EMP_EGrupoD365 = value;
					this.SendPropertyChanged("EMP_EGrupoD365");
					this.OnEMP_EGrupoD365Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_EmpresaFacturar", DbType="Bit NOT NULL")]
		public bool EMP_EmpresaFacturar
		{
			get
			{
				return this._EMP_EmpresaFacturar;
			}
			set
			{
				if ((this._EMP_EmpresaFacturar != value))
				{
					this.OnEMP_EmpresaFacturarChanging(value);
					this.SendPropertyChanging();
					this._EMP_EmpresaFacturar = value;
					this.SendPropertyChanged("EMP_EmpresaFacturar");
					this.OnEMP_EmpresaFacturarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAlta", DbType="DateTime NOT NULL")]
		public System.DateTime FechaAlta
		{
			get
			{
				return this._FechaAlta;
			}
			set
			{
				if ((this._FechaAlta != value))
				{
					this.OnFechaAltaChanging(value);
					this.SendPropertyChanging();
					this._FechaAlta = value;
					this.SendPropertyChanged("FechaAlta");
					this.OnFechaAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaModificacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaModificacion
		{
			get
			{
				return this._FechaModificacion;
			}
			set
			{
				if ((this._FechaModificacion != value))
				{
					this.OnFechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._FechaModificacion = value;
					this.SendPropertyChanged("FechaModificacion");
					this.OnFechaModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Id_Modificacion", DbType="Int NOT NULL")]
		public int PER_Id_Modificacion
		{
			get
			{
				return this._PER_Id_Modificacion;
			}
			set
			{
				if ((this._PER_Id_Modificacion != value))
				{
					if (this._Personas1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPER_Id_ModificacionChanging(value);
					this.SendPropertyChanging();
					this._PER_Id_Modificacion = value;
					this.SendPropertyChanged("PER_Id_Modificacion");
					this.OnPER_Id_ModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_EmpresaFacturar_Id")]
		public System.Nullable<int> EMP_EmpresaFacturar_Id
		{
			get
			{
				return this._EMP_EmpresaFacturar_Id;
			}
			set
			{
				if ((this._EMP_EmpresaFacturar_Id != value))
				{
					this.OnEMP_EmpresaFacturar_IdChanging(value);
					this.SendPropertyChanging();
					this._EMP_EmpresaFacturar_Id = value;
					this.SendPropertyChanged("EMP_EmpresaFacturar_Id");
					this.OnEMP_EmpresaFacturar_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_ExcluidaGuardia")]
		public bool EMP_ExcluidaGuardia
		{
			get
			{
				return this._EMP_ExcluidaGuardia;
			}
			set
			{
				if ((this._EMP_ExcluidaGuardia != value))
				{
					this.OnEMP_ExcluidaGuardiaChanging(value);
					this.SendPropertyChanging();
					this._EMP_ExcluidaGuardia = value;
					this.SendPropertyChanged("EMP_ExcluidaGuardia");
					this.OnEMP_ExcluidaGuardiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_GRG_Id")]
		public System.Nullable<int> EMP_GRG_Id
		{
			get
			{
				return this._EMP_GRG_Id;
			}
			set
			{
				if ((this._EMP_GRG_Id != value))
				{
					this.OnEMP_GRG_IdChanging(value);
					this.SendPropertyChanging();
					this._EMP_GRG_Id = value;
					this.SendPropertyChanged("EMP_GRG_Id");
					this.OnEMP_GRG_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_NombreDA")]
		public string EMP_NombreDA
		{
			get
			{
				return this._EMP_NombreDA;
			}
			set
			{
				if ((this._EMP_NombreDA != value))
				{
					this.OnEMP_NombreDAChanging(value);
					this.SendPropertyChanging();
					this._EMP_NombreDA = value;
					this.SendPropertyChanged("EMP_NombreDA");
					this.OnEMP_NombreDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_NumFacturaVDF")]
		public string EMP_NumFacturaVDF
		{
			get
			{
				return this._EMP_NumFacturaVDF;
			}
			set
			{
				if ((this._EMP_NumFacturaVDF != value))
				{
					this.OnEMP_NumFacturaVDFChanging(value);
					this.SendPropertyChanging();
					this._EMP_NumFacturaVDF = value;
					this.SendPropertyChanged("EMP_NumFacturaVDF");
					this.OnEMP_NumFacturaVDFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Empresas_Aprobadores", Storage="_Empresas_Aprobadores", ThisKey="EMP_Id", OtherKey="EMA_EMP_Id")]
		public EntitySet<Empresas_Aprobadores> Empresas_Aprobadores
		{
			get
			{
				return this._Empresas_Aprobadores;
			}
			set
			{
				this._Empresas_Aprobadores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Tareas_Empresas", Storage="_Tareas_Empresas", ThisKey="EMP_Id", OtherKey="TEM_EMP_Id")]
		public EntitySet<Tareas_Empresas> Tareas_Empresas
		{
			get
			{
				return this._Tareas_Empresas;
			}
			set
			{
				this._Tareas_Empresas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Tareas_Empresas_LineasEsfuerzo", Storage="_Tareas_Empresas_LineasEsfuerzo", ThisKey="EMP_Id", OtherKey="TLE_EMP_Id")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo> Tareas_Empresas_LineasEsfuerzo
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Facturas", Storage="_Facturas", ThisKey="EMP_Id", OtherKey="FAC_EMP_Id")]
		public EntitySet<Facturas> Facturas
		{
			get
			{
				return this._Facturas;
			}
			set
			{
				this._Facturas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Facturas1", Storage="_FacturasEmpreaFacturar", ThisKey="EMP_Id", OtherKey="FAC_EMP_Id_Facturar")]
		public EntitySet<Facturas> FacturasEmpreaFacturar
		{
			get
			{
				return this._FacturasEmpreaFacturar;
			}
			set
			{
				this._FacturasEmpreaFacturar.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Licencias_Excepciones", Storage="_Licencias_Excepciones", ThisKey="EMP_Id", OtherKey="LIE_EMP_Id")]
		public EntitySet<Licencias_Excepciones> Licencias_Excepciones
		{
			get
			{
				return this._Licencias_Excepciones;
			}
			set
			{
				this._Licencias_Excepciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Entes", Storage="_Entes", ThisKey="EMP_Id", OtherKey="ENT_EMP_Id")]
		public EntitySet<Entes> Entes
		{
			get
			{
				return this._Entes;
			}
			set
			{
				this._Entes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Licencias_Excepciones_LicenciasReemplazo", Storage="_Licencias_Excepciones_LicenciasReemplazo", ThisKey="EMP_Id", OtherKey="LEL_LIE_EMP_Id")]
		public EntitySet<Licencias_Excepciones_LicenciasReemplazo> Licencias_Excepciones_LicenciasReemplazo
		{
			get
			{
				return this._Licencias_Excepciones_LicenciasReemplazo;
			}
			set
			{
				this._Licencias_Excepciones_LicenciasReemplazo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Proveedores_Asuntos", Storage="_Proveedores_Asuntos", ThisKey="EMP_Id", OtherKey="PAS_EMP_Id")]
		public EntitySet<Proveedores_Asuntos> Proveedores_Asuntos
		{
			get
			{
				return this._Proveedores_Asuntos;
			}
			set
			{
				this._Proveedores_Asuntos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Licencias_Minimos", Storage="_Licencias_Minimos", ThisKey="EMP_Id", OtherKey="LEM_EMP_Id")]
		public EntitySet<Licencias_Minimos> Licencias_Minimos
		{
			get
			{
				return this._Licencias_Minimos;
			}
			set
			{
				this._Licencias_Minimos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Proyectos_Empresas", Storage="_Proyectos_Empresas", ThisKey="EMP_Id", OtherKey="PRE_EMP_Id")]
		public EntitySet<Proyectos_Empresas> Proyectos_Empresas
		{
			get
			{
				return this._Proyectos_Empresas;
			}
			set
			{
				this._Proyectos_Empresas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Aplicaciones_Modulos_Empresas", Storage="_Aplicaciones_Modulos_Empresas", ThisKey="EMP_Id", OtherKey="AME_EMP_Id")]
		public EntitySet<Aplicaciones_Modulos_Empresas> Aplicaciones_Modulos_Empresas
		{
			get
			{
				return this._Aplicaciones_Modulos_Empresas;
			}
			set
			{
				this._Aplicaciones_Modulos_Empresas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Proveedores_ContratosSoporte_Reparto", Storage="_Proveedores_ContratosSoporte_Reparto", ThisKey="EMP_Id", OtherKey="PVR_EMP_Id")]
		public EntitySet<Proveedores_ContratosSoporte_Reparto> Proveedores_ContratosSoporte_Reparto
		{
			get
			{
				return this._Proveedores_ContratosSoporte_Reparto;
			}
			set
			{
				this._Proveedores_ContratosSoporte_Reparto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Empresas_Departamentos", Storage="_Empresas_Departamentos", ThisKey="EMP_Id", OtherKey="EDE_EMP_Id")]
		public EntitySet<Empresas_Departamentos> Empresas_Departamentos
		{
			get
			{
				return this._Empresas_Departamentos;
			}
			set
			{
				this._Empresas_Departamentos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Telefonia", Storage="_Telefonia", ThisKey="EMP_Id", OtherKey="TFN_EMP_Id")]
		public EntitySet<Telefonia> Telefonia
		{
			get
			{
				return this._Telefonia;
			}
			set
			{
				this._Telefonia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Telefonia1", Storage="_Telefonia1", ThisKey="EMP_Id", OtherKey="TFN_Planta_EMP_Id")]
		public EntitySet<Telefonia> Telefonia1
		{
			get
			{
				return this._Telefonia1;
			}
			set
			{
				this._Telefonia1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_ContratosCAU_ExcluidasGuardia", Storage="_ContratosCAU_ExcluidasGuardia", ThisKey="EMP_Id", OtherKey="CEE_EMP_Id")]
		public EntitySet<ContratosCAU_ExcluidasGuardia> ContratosCAU_ExcluidasGuardia
		{
			get
			{
				return this._ContratosCAU_ExcluidasGuardia;
			}
			set
			{
				this._ContratosCAU_ExcluidasGuardia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LineasNegocio_Empresas", Storage="_LineasNegocio", ThisKey="EMP_LNE_Id", OtherKey="LNE_Id", IsForeignKey=true)]
		public LineasNegocio LineasNegocio
		{
			get
			{
				return this._LineasNegocio.Entity;
			}
			set
			{
				LineasNegocio previousValue = this._LineasNegocio.Entity;
				if (((previousValue != value) 
							|| (this._LineasNegocio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LineasNegocio.Entity = null;
						previousValue.Empresas.Remove(this);
					}
					this._LineasNegocio.Entity = value;
					if ((value != null))
					{
						value.Empresas.Add(this);
						this._EMP_LNE_Id = value.LNE_Id;
					}
					else
					{
						this._EMP_LNE_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("LineasNegocio");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Empresas", Storage="_Personas", ThisKey="EMP_PER_Id_AprobadorDefault", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas Personas
		{
			get
			{
				return this._Personas.Entity;
			}
			set
			{
				Personas previousValue = this._Personas.Entity;
				if (((previousValue != value) 
							|| (this._Personas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personas.Entity = null;
						previousValue.Empresas.Remove(this);
					}
					this._Personas.Entity = value;
					if ((value != null))
					{
						value.Empresas.Add(this);
						this._EMP_PER_Id_AprobadorDefault = value.PER_Id;
					}
					else
					{
						this._EMP_PER_Id_AprobadorDefault = default(Nullable<int>);
					}
					this.SendPropertyChanged("Personas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Empresas1", Storage="_Personas1", ThisKey="PER_Id_Modificacion", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas Personas1
		{
			get
			{
				return this._Personas1.Entity;
			}
			set
			{
				Personas previousValue = this._Personas1.Entity;
				if (((previousValue != value) 
							|| (this._Personas1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personas1.Entity = null;
						previousValue.Empresas1.Remove(this);
					}
					this._Personas1.Entity = value;
					if ((value != null))
					{
						value.Empresas1.Add(this);
						this._PER_Id_Modificacion = value.PER_Id;
					}
					else
					{
						this._PER_Id_Modificacion = default(int);
					}
					this.SendPropertyChanged("Personas1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Empresas_Aprobadores(Empresas_Aprobadores entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = this;
		}
		
		private void detach_Empresas_Aprobadores(Empresas_Aprobadores entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = null;
		}
		
		private void attach_Tareas_Empresas(Tareas_Empresas entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = this;
		}
		
		private void detach_Tareas_Empresas(Tareas_Empresas entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = null;
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo(Tareas_Empresas_LineasEsfuerzo entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo(Tareas_Empresas_LineasEsfuerzo entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = null;
		}
		
		private void attach_Facturas(Facturas entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = this;
		}
		
		private void detach_Facturas(Facturas entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = null;
		}
		
		private void attach_FacturasEmpreaFacturar(Facturas entity)
		{
			this.SendPropertyChanging();
			entity.EmpresaFacturar = this;
		}
		
		private void detach_FacturasEmpreaFacturar(Facturas entity)
		{
			this.SendPropertyChanging();
			entity.EmpresaFacturar = null;
		}
		
		private void attach_Licencias_Excepciones(Licencias_Excepciones entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = this;
		}
		
		private void detach_Licencias_Excepciones(Licencias_Excepciones entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = null;
		}
		
		private void attach_Entes(Entes entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = this;
		}
		
		private void detach_Entes(Entes entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = null;
		}
		
		private void attach_Licencias_Excepciones_LicenciasReemplazo(Licencias_Excepciones_LicenciasReemplazo entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = this;
		}
		
		private void detach_Licencias_Excepciones_LicenciasReemplazo(Licencias_Excepciones_LicenciasReemplazo entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = null;
		}
		
		private void attach_Proveedores_Asuntos(Proveedores_Asuntos entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = this;
		}
		
		private void detach_Proveedores_Asuntos(Proveedores_Asuntos entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = null;
		}
		
		private void attach_Licencias_Minimos(Licencias_Minimos entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = this;
		}
		
		private void detach_Licencias_Minimos(Licencias_Minimos entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = null;
		}
		
		private void attach_Proyectos_Empresas(Proyectos_Empresas entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = this;
		}
		
		private void detach_Proyectos_Empresas(Proyectos_Empresas entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = null;
		}
		
		private void attach_Aplicaciones_Modulos_Empresas(Aplicaciones_Modulos_Empresas entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = this;
		}
		
		private void detach_Aplicaciones_Modulos_Empresas(Aplicaciones_Modulos_Empresas entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = null;
		}
		
		private void attach_Proveedores_ContratosSoporte_Reparto(Proveedores_ContratosSoporte_Reparto entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = this;
		}
		
		private void detach_Proveedores_ContratosSoporte_Reparto(Proveedores_ContratosSoporte_Reparto entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = null;
		}
		
		private void attach_Empresas_Departamentos(Empresas_Departamentos entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = this;
		}
		
		private void detach_Empresas_Departamentos(Empresas_Departamentos entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = null;
		}
		
		private void attach_Telefonia(Telefonia entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = this;
		}
		
		private void detach_Telefonia(Telefonia entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = null;
		}
		
		private void attach_Telefonia1(Telefonia entity)
		{
			this.SendPropertyChanging();
			entity.Empresas1 = this;
		}
		
		private void detach_Telefonia1(Telefonia entity)
		{
			this.SendPropertyChanging();
			entity.Empresas1 = null;
		}
		
		private void attach_ContratosCAU_ExcluidasGuardia(ContratosCAU_ExcluidasGuardia entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = this;
		}
		
		private void detach_ContratosCAU_ExcluidasGuardia(ContratosCAU_ExcluidasGuardia entity)
		{
			this.SendPropertyChanging();
			entity.Empresas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empresas_Aprobadores")]
	public partial class Empresas_Aprobadores : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EMA_EMP_Id;
		
		private int _EMA_PER_Id;
		
		private EntityRef<Empresas> _Empresas;
		
		private EntityRef<Personas> _Personas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEMA_EMP_IdChanging(int value);
    partial void OnEMA_EMP_IdChanged();
    partial void OnEMA_PER_IdChanging(int value);
    partial void OnEMA_PER_IdChanged();
    #endregion
		
		public Empresas_Aprobadores()
		{
			this._Empresas = default(EntityRef<Empresas>);
			this._Personas = default(EntityRef<Personas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMA_EMP_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EMA_EMP_Id
		{
			get
			{
				return this._EMA_EMP_Id;
			}
			set
			{
				if ((this._EMA_EMP_Id != value))
				{
					if (this._Empresas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEMA_EMP_IdChanging(value);
					this.SendPropertyChanging();
					this._EMA_EMP_Id = value;
					this.SendPropertyChanged("EMA_EMP_Id");
					this.OnEMA_EMP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMA_PER_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EMA_PER_Id
		{
			get
			{
				return this._EMA_PER_Id;
			}
			set
			{
				if ((this._EMA_PER_Id != value))
				{
					if (this._Personas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEMA_PER_IdChanging(value);
					this.SendPropertyChanging();
					this._EMA_PER_Id = value;
					this.SendPropertyChanged("EMA_PER_Id");
					this.OnEMA_PER_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Empresas_Aprobadores", Storage="_Empresas", ThisKey="EMA_EMP_Id", OtherKey="EMP_Id", IsForeignKey=true)]
		public Empresas Empresas
		{
			get
			{
				return this._Empresas.Entity;
			}
			set
			{
				Empresas previousValue = this._Empresas.Entity;
				if (((previousValue != value) 
							|| (this._Empresas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresas.Entity = null;
						previousValue.Empresas_Aprobadores.Remove(this);
					}
					this._Empresas.Entity = value;
					if ((value != null))
					{
						value.Empresas_Aprobadores.Add(this);
						this._EMA_EMP_Id = value.EMP_Id;
					}
					else
					{
						this._EMA_EMP_Id = default(int);
					}
					this.SendPropertyChanged("Empresas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Empresas_Aprobadores", Storage="_Personas", ThisKey="EMA_PER_Id", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas Personas
		{
			get
			{
				return this._Personas.Entity;
			}
			set
			{
				Personas previousValue = this._Personas.Entity;
				if (((previousValue != value) 
							|| (this._Personas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personas.Entity = null;
						previousValue.Empresas_Aprobadores.Remove(this);
					}
					this._Personas.Entity = value;
					if ((value != null))
					{
						value.Empresas_Aprobadores.Add(this);
						this._EMA_PER_Id = value.PER_Id;
					}
					else
					{
						this._EMA_PER_Id = default(int);
					}
					this.SendPropertyChanged("Personas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EstadosSolicitud")]
	public partial class EstadosSolicitud : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ESO_Id;
		
		private System.DateTime _FechaAlta;
		
		private System.DateTime _FechaModificacion;
		
		private int _PER_Id_Modificacion;
		
		private EntitySet<EstadosSolicitud_Idioma> _EstadosSolicitud_Idioma;
		
		private EntitySet<Tareas_Empresas> _Tareas_Empresas;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo> _Tareas_Empresas_LineasEsfuerzo;
		
		private EntitySet<Facturas> _Facturas;
		
		private EntityRef<Personas> _Personas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnESO_IdChanging(int value);
    partial void OnESO_IdChanged();
    partial void OnFechaAltaChanging(System.DateTime value);
    partial void OnFechaAltaChanged();
    partial void OnFechaModificacionChanging(System.DateTime value);
    partial void OnFechaModificacionChanged();
    partial void OnPER_Id_ModificacionChanging(int value);
    partial void OnPER_Id_ModificacionChanged();
    #endregion
		
		public EstadosSolicitud()
		{
			this._EstadosSolicitud_Idioma = new EntitySet<EstadosSolicitud_Idioma>(new Action<EstadosSolicitud_Idioma>(this.attach_EstadosSolicitud_Idioma), new Action<EstadosSolicitud_Idioma>(this.detach_EstadosSolicitud_Idioma));
			this._Tareas_Empresas = new EntitySet<Tareas_Empresas>(new Action<Tareas_Empresas>(this.attach_Tareas_Empresas), new Action<Tareas_Empresas>(this.detach_Tareas_Empresas));
			this._Tareas_Empresas_LineasEsfuerzo = new EntitySet<Tareas_Empresas_LineasEsfuerzo>(new Action<Tareas_Empresas_LineasEsfuerzo>(this.attach_Tareas_Empresas_LineasEsfuerzo), new Action<Tareas_Empresas_LineasEsfuerzo>(this.detach_Tareas_Empresas_LineasEsfuerzo));
			this._Facturas = new EntitySet<Facturas>(new Action<Facturas>(this.attach_Facturas), new Action<Facturas>(this.detach_Facturas));
			this._Personas = default(EntityRef<Personas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESO_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ESO_Id
		{
			get
			{
				return this._ESO_Id;
			}
			set
			{
				if ((this._ESO_Id != value))
				{
					this.OnESO_IdChanging(value);
					this.SendPropertyChanging();
					this._ESO_Id = value;
					this.SendPropertyChanged("ESO_Id");
					this.OnESO_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAlta", DbType="DateTime NOT NULL")]
		public System.DateTime FechaAlta
		{
			get
			{
				return this._FechaAlta;
			}
			set
			{
				if ((this._FechaAlta != value))
				{
					this.OnFechaAltaChanging(value);
					this.SendPropertyChanging();
					this._FechaAlta = value;
					this.SendPropertyChanged("FechaAlta");
					this.OnFechaAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaModificacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaModificacion
		{
			get
			{
				return this._FechaModificacion;
			}
			set
			{
				if ((this._FechaModificacion != value))
				{
					this.OnFechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._FechaModificacion = value;
					this.SendPropertyChanged("FechaModificacion");
					this.OnFechaModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Id_Modificacion", DbType="Int NOT NULL")]
		public int PER_Id_Modificacion
		{
			get
			{
				return this._PER_Id_Modificacion;
			}
			set
			{
				if ((this._PER_Id_Modificacion != value))
				{
					if (this._Personas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPER_Id_ModificacionChanging(value);
					this.SendPropertyChanging();
					this._PER_Id_Modificacion = value;
					this.SendPropertyChanged("PER_Id_Modificacion");
					this.OnPER_Id_ModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstadosSolicitud_EstadosSolicitud_Idioma", Storage="_EstadosSolicitud_Idioma", ThisKey="ESO_Id", OtherKey="ESI_ESO_Id")]
		public EntitySet<EstadosSolicitud_Idioma> EstadosSolicitud_Idioma
		{
			get
			{
				return this._EstadosSolicitud_Idioma;
			}
			set
			{
				this._EstadosSolicitud_Idioma.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstadosSolicitud_Tareas_Empresas", Storage="_Tareas_Empresas", ThisKey="ESO_Id", OtherKey="TEM_ESO_Id")]
		public EntitySet<Tareas_Empresas> Tareas_Empresas
		{
			get
			{
				return this._Tareas_Empresas;
			}
			set
			{
				this._Tareas_Empresas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstadosSolicitud_Tareas_Empresas_LineasEsfuerzo", Storage="_Tareas_Empresas_LineasEsfuerzo", ThisKey="ESO_Id", OtherKey="TLE_ESO_Id")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo> Tareas_Empresas_LineasEsfuerzo
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstadosSolicitud_Facturas", Storage="_Facturas", ThisKey="ESO_Id", OtherKey="FAC_ESO_Id")]
		public EntitySet<Facturas> Facturas
		{
			get
			{
				return this._Facturas;
			}
			set
			{
				this._Facturas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_EstadosSolicitud", Storage="_Personas", ThisKey="PER_Id_Modificacion", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas Personas
		{
			get
			{
				return this._Personas.Entity;
			}
			set
			{
				Personas previousValue = this._Personas.Entity;
				if (((previousValue != value) 
							|| (this._Personas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personas.Entity = null;
						previousValue.EstadosSolicitud.Remove(this);
					}
					this._Personas.Entity = value;
					if ((value != null))
					{
						value.EstadosSolicitud.Add(this);
						this._PER_Id_Modificacion = value.PER_Id;
					}
					else
					{
						this._PER_Id_Modificacion = default(int);
					}
					this.SendPropertyChanged("Personas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EstadosSolicitud_Idioma(EstadosSolicitud_Idioma entity)
		{
			this.SendPropertyChanging();
			entity.EstadosSolicitud = this;
		}
		
		private void detach_EstadosSolicitud_Idioma(EstadosSolicitud_Idioma entity)
		{
			this.SendPropertyChanging();
			entity.EstadosSolicitud = null;
		}
		
		private void attach_Tareas_Empresas(Tareas_Empresas entity)
		{
			this.SendPropertyChanging();
			entity.EstadosSolicitud = this;
		}
		
		private void detach_Tareas_Empresas(Tareas_Empresas entity)
		{
			this.SendPropertyChanging();
			entity.EstadosSolicitud = null;
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo(Tareas_Empresas_LineasEsfuerzo entity)
		{
			this.SendPropertyChanging();
			entity.EstadosSolicitud = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo(Tareas_Empresas_LineasEsfuerzo entity)
		{
			this.SendPropertyChanging();
			entity.EstadosSolicitud = null;
		}
		
		private void attach_Facturas(Facturas entity)
		{
			this.SendPropertyChanging();
			entity.EstadosSolicitud = this;
		}
		
		private void detach_Facturas(Facturas entity)
		{
			this.SendPropertyChanging();
			entity.EstadosSolicitud = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EstadosSolicitud_Idioma")]
	public partial class EstadosSolicitud_Idioma : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ESI_ESO_Id;
		
		private int _ESI_IDI_Id;
		
		private string _ESI_Nombre;
		
		private EntityRef<EstadosSolicitud> _EstadosSolicitud;
		
		private EntityRef<Idiomas> _Idiomas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnESI_ESO_IdChanging(int value);
    partial void OnESI_ESO_IdChanged();
    partial void OnESI_IDI_IdChanging(int value);
    partial void OnESI_IDI_IdChanged();
    partial void OnESI_NombreChanging(string value);
    partial void OnESI_NombreChanged();
    #endregion
		
		public EstadosSolicitud_Idioma()
		{
			this._EstadosSolicitud = default(EntityRef<EstadosSolicitud>);
			this._Idiomas = default(EntityRef<Idiomas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESI_ESO_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ESI_ESO_Id
		{
			get
			{
				return this._ESI_ESO_Id;
			}
			set
			{
				if ((this._ESI_ESO_Id != value))
				{
					if (this._EstadosSolicitud.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnESI_ESO_IdChanging(value);
					this.SendPropertyChanging();
					this._ESI_ESO_Id = value;
					this.SendPropertyChanged("ESI_ESO_Id");
					this.OnESI_ESO_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESI_IDI_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ESI_IDI_Id
		{
			get
			{
				return this._ESI_IDI_Id;
			}
			set
			{
				if ((this._ESI_IDI_Id != value))
				{
					if (this._Idiomas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnESI_IDI_IdChanging(value);
					this.SendPropertyChanging();
					this._ESI_IDI_Id = value;
					this.SendPropertyChanged("ESI_IDI_Id");
					this.OnESI_IDI_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESI_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ESI_Nombre
		{
			get
			{
				return this._ESI_Nombre;
			}
			set
			{
				if ((this._ESI_Nombre != value))
				{
					this.OnESI_NombreChanging(value);
					this.SendPropertyChanging();
					this._ESI_Nombre = value;
					this.SendPropertyChanged("ESI_Nombre");
					this.OnESI_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstadosSolicitud_EstadosSolicitud_Idioma", Storage="_EstadosSolicitud", ThisKey="ESI_ESO_Id", OtherKey="ESO_Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EstadosSolicitud EstadosSolicitud
		{
			get
			{
				return this._EstadosSolicitud.Entity;
			}
			set
			{
				EstadosSolicitud previousValue = this._EstadosSolicitud.Entity;
				if (((previousValue != value) 
							|| (this._EstadosSolicitud.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstadosSolicitud.Entity = null;
						previousValue.EstadosSolicitud_Idioma.Remove(this);
					}
					this._EstadosSolicitud.Entity = value;
					if ((value != null))
					{
						value.EstadosSolicitud_Idioma.Add(this);
						this._ESI_ESO_Id = value.ESO_Id;
					}
					else
					{
						this._ESI_ESO_Id = default(int);
					}
					this.SendPropertyChanged("EstadosSolicitud");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Idiomas_EstadosSolicitud_Idioma", Storage="_Idiomas", ThisKey="ESI_IDI_Id", OtherKey="IDI_Id", IsForeignKey=true)]
		public Idiomas Idiomas
		{
			get
			{
				return this._Idiomas.Entity;
			}
			set
			{
				Idiomas previousValue = this._Idiomas.Entity;
				if (((previousValue != value) 
							|| (this._Idiomas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Idiomas.Entity = null;
						previousValue.EstadosSolicitud_Idioma.Remove(this);
					}
					this._Idiomas.Entity = value;
					if ((value != null))
					{
						value.EstadosSolicitud_Idioma.Add(this);
						this._ESI_IDI_Id = value.IDI_Id;
					}
					else
					{
						this._ESI_IDI_Id = default(int);
					}
					this.SendPropertyChanged("Idiomas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Facturas_Tareas_LineasEsfuerzo")]
	public partial class Facturas_Tareas_LineasEsfuerzo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FLE_FAC_Id;
		
		private int _FLE_TLE_Id;
		
		private EntityRef<Tareas_Empresas_LineasEsfuerzo> _Tareas_Empresas_LineasEsfuerzo;
		
		private EntityRef<Facturas> _Facturas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFLE_FAC_IdChanging(int value);
    partial void OnFLE_FAC_IdChanged();
    partial void OnFLE_TLE_IdChanging(int value);
    partial void OnFLE_TLE_IdChanged();
    #endregion
		
		public Facturas_Tareas_LineasEsfuerzo()
		{
			this._Tareas_Empresas_LineasEsfuerzo = default(EntityRef<Tareas_Empresas_LineasEsfuerzo>);
			this._Facturas = default(EntityRef<Facturas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FLE_FAC_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FLE_FAC_Id
		{
			get
			{
				return this._FLE_FAC_Id;
			}
			set
			{
				if ((this._FLE_FAC_Id != value))
				{
					if (this._Facturas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFLE_FAC_IdChanging(value);
					this.SendPropertyChanging();
					this._FLE_FAC_Id = value;
					this.SendPropertyChanged("FLE_FAC_Id");
					this.OnFLE_FAC_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FLE_TLE_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FLE_TLE_Id
		{
			get
			{
				return this._FLE_TLE_Id;
			}
			set
			{
				if ((this._FLE_TLE_Id != value))
				{
					if (this._Tareas_Empresas_LineasEsfuerzo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFLE_TLE_IdChanging(value);
					this.SendPropertyChanging();
					this._FLE_TLE_Id = value;
					this.SendPropertyChanged("FLE_TLE_Id");
					this.OnFLE_TLE_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Empresas_LineasEsfuerzo_Facturas_Tareas_LineasEsfuerzo", Storage="_Tareas_Empresas_LineasEsfuerzo", ThisKey="FLE_TLE_Id", OtherKey="TLE_Id", IsForeignKey=true)]
		public Tareas_Empresas_LineasEsfuerzo Tareas_Empresas_LineasEsfuerzo
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo.Entity;
			}
			set
			{
				Tareas_Empresas_LineasEsfuerzo previousValue = this._Tareas_Empresas_LineasEsfuerzo.Entity;
				if (((previousValue != value) 
							|| (this._Tareas_Empresas_LineasEsfuerzo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tareas_Empresas_LineasEsfuerzo.Entity = null;
						previousValue.Facturas_Tareas_LineasEsfuerzo.Remove(this);
					}
					this._Tareas_Empresas_LineasEsfuerzo.Entity = value;
					if ((value != null))
					{
						value.Facturas_Tareas_LineasEsfuerzo.Add(this);
						this._FLE_TLE_Id = value.TLE_Id;
					}
					else
					{
						this._FLE_TLE_Id = default(int);
					}
					this.SendPropertyChanged("Tareas_Empresas_LineasEsfuerzo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Facturas_Facturas_Tareas_LineasEsfuerzo", Storage="_Facturas", ThisKey="FLE_FAC_Id", OtherKey="FAC_Id", IsForeignKey=true)]
		public Facturas Facturas
		{
			get
			{
				return this._Facturas.Entity;
			}
			set
			{
				Facturas previousValue = this._Facturas.Entity;
				if (((previousValue != value) 
							|| (this._Facturas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Facturas.Entity = null;
						previousValue.Facturas_Tareas_LineasEsfuerzo.Remove(this);
					}
					this._Facturas.Entity = value;
					if ((value != null))
					{
						value.Facturas_Tareas_LineasEsfuerzo.Add(this);
						this._FLE_FAC_Id = value.FAC_Id;
					}
					else
					{
						this._FLE_FAC_Id = default(int);
					}
					this.SendPropertyChanged("Facturas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Idiomas")]
	public partial class Idiomas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDI_Id;
		
		private int _IDI_IDCultura;
		
		private string _IDI_Descripcion;
		
		private EntitySet<EstadosSolicitud_Idioma> _EstadosSolicitud_Idioma;
		
		private EntitySet<LineasNegocio_Idioma> _LineasNegocio_Idioma;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDI_IdChanging(int value);
    partial void OnIDI_IdChanged();
    partial void OnIDI_IDCulturaChanging(int value);
    partial void OnIDI_IDCulturaChanged();
    partial void OnIDI_DescripcionChanging(string value);
    partial void OnIDI_DescripcionChanged();
    #endregion
		
		public Idiomas()
		{
			this._EstadosSolicitud_Idioma = new EntitySet<EstadosSolicitud_Idioma>(new Action<EstadosSolicitud_Idioma>(this.attach_EstadosSolicitud_Idioma), new Action<EstadosSolicitud_Idioma>(this.detach_EstadosSolicitud_Idioma));
			this._LineasNegocio_Idioma = new EntitySet<LineasNegocio_Idioma>(new Action<LineasNegocio_Idioma>(this.attach_LineasNegocio_Idioma), new Action<LineasNegocio_Idioma>(this.detach_LineasNegocio_Idioma));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDI_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDI_Id
		{
			get
			{
				return this._IDI_Id;
			}
			set
			{
				if ((this._IDI_Id != value))
				{
					this.OnIDI_IdChanging(value);
					this.SendPropertyChanging();
					this._IDI_Id = value;
					this.SendPropertyChanged("IDI_Id");
					this.OnIDI_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDI_IDCultura", DbType="Int NOT NULL")]
		public int IDI_IDCultura
		{
			get
			{
				return this._IDI_IDCultura;
			}
			set
			{
				if ((this._IDI_IDCultura != value))
				{
					this.OnIDI_IDCulturaChanging(value);
					this.SendPropertyChanging();
					this._IDI_IDCultura = value;
					this.SendPropertyChanged("IDI_IDCultura");
					this.OnIDI_IDCulturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDI_Descripcion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string IDI_Descripcion
		{
			get
			{
				return this._IDI_Descripcion;
			}
			set
			{
				if ((this._IDI_Descripcion != value))
				{
					this.OnIDI_DescripcionChanging(value);
					this.SendPropertyChanging();
					this._IDI_Descripcion = value;
					this.SendPropertyChanged("IDI_Descripcion");
					this.OnIDI_DescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Idiomas_EstadosSolicitud_Idioma", Storage="_EstadosSolicitud_Idioma", ThisKey="IDI_Id", OtherKey="ESI_IDI_Id")]
		public EntitySet<EstadosSolicitud_Idioma> EstadosSolicitud_Idioma
		{
			get
			{
				return this._EstadosSolicitud_Idioma;
			}
			set
			{
				this._EstadosSolicitud_Idioma.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Idiomas_LineasNegocio_Idioma", Storage="_LineasNegocio_Idioma", ThisKey="IDI_Id", OtherKey="LNI_IDI_Id")]
		public EntitySet<LineasNegocio_Idioma> LineasNegocio_Idioma
		{
			get
			{
				return this._LineasNegocio_Idioma;
			}
			set
			{
				this._LineasNegocio_Idioma.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EstadosSolicitud_Idioma(EstadosSolicitud_Idioma entity)
		{
			this.SendPropertyChanging();
			entity.Idiomas = this;
		}
		
		private void detach_EstadosSolicitud_Idioma(EstadosSolicitud_Idioma entity)
		{
			this.SendPropertyChanging();
			entity.Idiomas = null;
		}
		
		private void attach_LineasNegocio_Idioma(LineasNegocio_Idioma entity)
		{
			this.SendPropertyChanging();
			entity.Idiomas = this;
		}
		
		private void detach_LineasNegocio_Idioma(LineasNegocio_Idioma entity)
		{
			this.SendPropertyChanging();
			entity.Idiomas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LineasNegocio")]
	public partial class LineasNegocio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LNE_Id;
		
		private System.DateTime _FechaAlta;
		
		private System.DateTime _FechaModificacion;
		
		private int _PER_Id_Modificacion;
		
		private EntitySet<Empresas> _Empresas;
		
		private EntitySet<LineasNegocio_Idioma> _LineasNegocio_Idioma;
		
		private EntityRef<Personas> _Personas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLNE_IdChanging(int value);
    partial void OnLNE_IdChanged();
    partial void OnFechaAltaChanging(System.DateTime value);
    partial void OnFechaAltaChanged();
    partial void OnFechaModificacionChanging(System.DateTime value);
    partial void OnFechaModificacionChanged();
    partial void OnPER_Id_ModificacionChanging(int value);
    partial void OnPER_Id_ModificacionChanged();
    #endregion
		
		public LineasNegocio()
		{
			this._Empresas = new EntitySet<Empresas>(new Action<Empresas>(this.attach_Empresas), new Action<Empresas>(this.detach_Empresas));
			this._LineasNegocio_Idioma = new EntitySet<LineasNegocio_Idioma>(new Action<LineasNegocio_Idioma>(this.attach_LineasNegocio_Idioma), new Action<LineasNegocio_Idioma>(this.detach_LineasNegocio_Idioma));
			this._Personas = default(EntityRef<Personas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LNE_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LNE_Id
		{
			get
			{
				return this._LNE_Id;
			}
			set
			{
				if ((this._LNE_Id != value))
				{
					this.OnLNE_IdChanging(value);
					this.SendPropertyChanging();
					this._LNE_Id = value;
					this.SendPropertyChanged("LNE_Id");
					this.OnLNE_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAlta", DbType="DateTime NOT NULL")]
		public System.DateTime FechaAlta
		{
			get
			{
				return this._FechaAlta;
			}
			set
			{
				if ((this._FechaAlta != value))
				{
					this.OnFechaAltaChanging(value);
					this.SendPropertyChanging();
					this._FechaAlta = value;
					this.SendPropertyChanged("FechaAlta");
					this.OnFechaAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaModificacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaModificacion
		{
			get
			{
				return this._FechaModificacion;
			}
			set
			{
				if ((this._FechaModificacion != value))
				{
					this.OnFechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._FechaModificacion = value;
					this.SendPropertyChanged("FechaModificacion");
					this.OnFechaModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Id_Modificacion", DbType="Int NOT NULL")]
		public int PER_Id_Modificacion
		{
			get
			{
				return this._PER_Id_Modificacion;
			}
			set
			{
				if ((this._PER_Id_Modificacion != value))
				{
					if (this._Personas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPER_Id_ModificacionChanging(value);
					this.SendPropertyChanging();
					this._PER_Id_Modificacion = value;
					this.SendPropertyChanged("PER_Id_Modificacion");
					this.OnPER_Id_ModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LineasNegocio_Empresas", Storage="_Empresas", ThisKey="LNE_Id", OtherKey="EMP_LNE_Id")]
		public EntitySet<Empresas> Empresas
		{
			get
			{
				return this._Empresas;
			}
			set
			{
				this._Empresas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LineasNegocio_LineasNegocio_Idioma", Storage="_LineasNegocio_Idioma", ThisKey="LNE_Id", OtherKey="LNI_LNE_Id")]
		public EntitySet<LineasNegocio_Idioma> LineasNegocio_Idioma
		{
			get
			{
				return this._LineasNegocio_Idioma;
			}
			set
			{
				this._LineasNegocio_Idioma.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_LineasNegocio", Storage="_Personas", ThisKey="PER_Id_Modificacion", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas Personas
		{
			get
			{
				return this._Personas.Entity;
			}
			set
			{
				Personas previousValue = this._Personas.Entity;
				if (((previousValue != value) 
							|| (this._Personas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personas.Entity = null;
						previousValue.LineasNegocio.Remove(this);
					}
					this._Personas.Entity = value;
					if ((value != null))
					{
						value.LineasNegocio.Add(this);
						this._PER_Id_Modificacion = value.PER_Id;
					}
					else
					{
						this._PER_Id_Modificacion = default(int);
					}
					this.SendPropertyChanged("Personas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Empresas(Empresas entity)
		{
			this.SendPropertyChanging();
			entity.LineasNegocio = this;
		}
		
		private void detach_Empresas(Empresas entity)
		{
			this.SendPropertyChanging();
			entity.LineasNegocio = null;
		}
		
		private void attach_LineasNegocio_Idioma(LineasNegocio_Idioma entity)
		{
			this.SendPropertyChanging();
			entity.LineasNegocio = this;
		}
		
		private void detach_LineasNegocio_Idioma(LineasNegocio_Idioma entity)
		{
			this.SendPropertyChanging();
			entity.LineasNegocio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LineasNegocio_Idioma")]
	public partial class LineasNegocio_Idioma : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LNI_LNE_Id;
		
		private int _LNI_IDI_Id;
		
		private string _LNI_Nombre;
		
		private string _LNI_Descripcion;
		
		private EntityRef<Idiomas> _Idiomas;
		
		private EntityRef<LineasNegocio> _LineasNegocio;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLNI_LNE_IdChanging(int value);
    partial void OnLNI_LNE_IdChanged();
    partial void OnLNI_IDI_IdChanging(int value);
    partial void OnLNI_IDI_IdChanged();
    partial void OnLNI_NombreChanging(string value);
    partial void OnLNI_NombreChanged();
    partial void OnLNI_DescripcionChanging(string value);
    partial void OnLNI_DescripcionChanged();
    #endregion
		
		public LineasNegocio_Idioma()
		{
			this._Idiomas = default(EntityRef<Idiomas>);
			this._LineasNegocio = default(EntityRef<LineasNegocio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LNI_LNE_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LNI_LNE_Id
		{
			get
			{
				return this._LNI_LNE_Id;
			}
			set
			{
				if ((this._LNI_LNE_Id != value))
				{
					if (this._LineasNegocio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLNI_LNE_IdChanging(value);
					this.SendPropertyChanging();
					this._LNI_LNE_Id = value;
					this.SendPropertyChanged("LNI_LNE_Id");
					this.OnLNI_LNE_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LNI_IDI_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LNI_IDI_Id
		{
			get
			{
				return this._LNI_IDI_Id;
			}
			set
			{
				if ((this._LNI_IDI_Id != value))
				{
					if (this._Idiomas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLNI_IDI_IdChanging(value);
					this.SendPropertyChanging();
					this._LNI_IDI_Id = value;
					this.SendPropertyChanged("LNI_IDI_Id");
					this.OnLNI_IDI_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LNI_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string LNI_Nombre
		{
			get
			{
				return this._LNI_Nombre;
			}
			set
			{
				if ((this._LNI_Nombre != value))
				{
					this.OnLNI_NombreChanging(value);
					this.SendPropertyChanging();
					this._LNI_Nombre = value;
					this.SendPropertyChanged("LNI_Nombre");
					this.OnLNI_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LNI_Descripcion", DbType="VarChar(100)")]
		public string LNI_Descripcion
		{
			get
			{
				return this._LNI_Descripcion;
			}
			set
			{
				if ((this._LNI_Descripcion != value))
				{
					this.OnLNI_DescripcionChanging(value);
					this.SendPropertyChanging();
					this._LNI_Descripcion = value;
					this.SendPropertyChanged("LNI_Descripcion");
					this.OnLNI_DescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Idiomas_LineasNegocio_Idioma", Storage="_Idiomas", ThisKey="LNI_IDI_Id", OtherKey="IDI_Id", IsForeignKey=true)]
		public Idiomas Idiomas
		{
			get
			{
				return this._Idiomas.Entity;
			}
			set
			{
				Idiomas previousValue = this._Idiomas.Entity;
				if (((previousValue != value) 
							|| (this._Idiomas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Idiomas.Entity = null;
						previousValue.LineasNegocio_Idioma.Remove(this);
					}
					this._Idiomas.Entity = value;
					if ((value != null))
					{
						value.LineasNegocio_Idioma.Add(this);
						this._LNI_IDI_Id = value.IDI_Id;
					}
					else
					{
						this._LNI_IDI_Id = default(int);
					}
					this.SendPropertyChanged("Idiomas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LineasNegocio_LineasNegocio_Idioma", Storage="_LineasNegocio", ThisKey="LNI_LNE_Id", OtherKey="LNE_Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public LineasNegocio LineasNegocio
		{
			get
			{
				return this._LineasNegocio.Entity;
			}
			set
			{
				LineasNegocio previousValue = this._LineasNegocio.Entity;
				if (((previousValue != value) 
							|| (this._LineasNegocio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LineasNegocio.Entity = null;
						previousValue.LineasNegocio_Idioma.Remove(this);
					}
					this._LineasNegocio.Entity = value;
					if ((value != null))
					{
						value.LineasNegocio_Idioma.Add(this);
						this._LNI_LNE_Id = value.LNE_Id;
					}
					else
					{
						this._LNI_LNE_Id = default(int);
					}
					this.SendPropertyChanged("LineasNegocio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Personas")]
	public partial class Personas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PER_Id;
		
		private string _PER_Nombre;
		
		private string _PER_Apellido1;
		
		private string _PER_Apellido2;
		
		private System.Nullable<int> _PER_DEP_Id;
		
		private string _PER_Email;
		
		private System.DateTime _FechaAlta;
		
		private System.DateTime _FechaModificacion;
		
		private int _PER_Id_Modificacion;
		
		private bool _PER_Activo;
		
		private EntitySet<Departamentos> _Departamentos;
		
		private EntitySet<Departamentos> _Departamentos1;
		
		private EntitySet<Usuarios> _Usuarios;
		
		private EntitySet<Usuarios> _Usuarios1;
		
		private EntitySet<Empresas> _Empresas;
		
		private EntitySet<Empresas> _Empresas1;
		
		private EntitySet<Empresas_Aprobadores> _Empresas_Aprobadores;
		
		private EntitySet<EstadosSolicitud> _EstadosSolicitud;
		
		private EntitySet<LineasNegocio> _LineasNegocio;
		
		private EntitySet<Personas> _Personas2;
		
		private EntitySet<Personas_Secciones> _Personas_Secciones;
		
		private EntitySet<Secciones> _Secciones;
		
		private EntitySet<Seguridad_Opciones> _Seguridad_Opciones;
		
		private EntitySet<Seguridad_Perfiles> _Seguridad_Perfiles;
		
		private EntitySet<Tareas> _Tareas;
		
		private EntitySet<Tareas_Empresas> _Tareas_Empresas;
		
		private EntitySet<Tareas_Empresas> _Tareas_Empresas1;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo> _Tareas_Empresas_LineasEsfuerzo;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo> _Tareas_Empresas_LineasEsfuerzo1;
		
		private EntitySet<TiposTarea> _TiposTarea;
		
		private EntitySet<Facturas> _Facturas;
		
		private EntitySet<Facturas> _Facturas1;
		
		private EntitySet<EnlacesContables> _EnlacesContables;
		
		private EntitySet<ItemNumbersD365> _ItemNumbersD365;
		
		private EntitySet<ProductosD365> _ProductosD365;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo_Tickets> _Tareas_Empresas_LineasEsfuerzo_Tickets;
		
		private EntitySet<Proyectos_Partes> _Proyectos_Partes;
		
		private EntityRef<Departamentos> _Departamentos2;
		
		private EntityRef<Personas> _Personas1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPER_IdChanging(int value);
    partial void OnPER_IdChanged();
    partial void OnPER_NombreChanging(string value);
    partial void OnPER_NombreChanged();
    partial void OnPER_Apellido1Changing(string value);
    partial void OnPER_Apellido1Changed();
    partial void OnPER_Apellido2Changing(string value);
    partial void OnPER_Apellido2Changed();
    partial void OnPER_DEP_IdChanging(System.Nullable<int> value);
    partial void OnPER_DEP_IdChanged();
    partial void OnPER_EmailChanging(string value);
    partial void OnPER_EmailChanged();
    partial void OnFechaAltaChanging(System.DateTime value);
    partial void OnFechaAltaChanged();
    partial void OnFechaModificacionChanging(System.DateTime value);
    partial void OnFechaModificacionChanged();
    partial void OnPER_Id_ModificacionChanging(int value);
    partial void OnPER_Id_ModificacionChanged();
    partial void OnPER_ActivoChanging(bool value);
    partial void OnPER_ActivoChanged();
    #endregion
		
		public Personas()
		{
			this._Departamentos = new EntitySet<Departamentos>(new Action<Departamentos>(this.attach_Departamentos), new Action<Departamentos>(this.detach_Departamentos));
			this._Departamentos1 = new EntitySet<Departamentos>(new Action<Departamentos>(this.attach_Departamentos1), new Action<Departamentos>(this.detach_Departamentos1));
			this._Usuarios = new EntitySet<Usuarios>(new Action<Usuarios>(this.attach_Usuarios), new Action<Usuarios>(this.detach_Usuarios));
			this._Usuarios1 = new EntitySet<Usuarios>(new Action<Usuarios>(this.attach_Usuarios1), new Action<Usuarios>(this.detach_Usuarios1));
			this._Empresas = new EntitySet<Empresas>(new Action<Empresas>(this.attach_Empresas), new Action<Empresas>(this.detach_Empresas));
			this._Empresas1 = new EntitySet<Empresas>(new Action<Empresas>(this.attach_Empresas1), new Action<Empresas>(this.detach_Empresas1));
			this._Empresas_Aprobadores = new EntitySet<Empresas_Aprobadores>(new Action<Empresas_Aprobadores>(this.attach_Empresas_Aprobadores), new Action<Empresas_Aprobadores>(this.detach_Empresas_Aprobadores));
			this._EstadosSolicitud = new EntitySet<EstadosSolicitud>(new Action<EstadosSolicitud>(this.attach_EstadosSolicitud), new Action<EstadosSolicitud>(this.detach_EstadosSolicitud));
			this._LineasNegocio = new EntitySet<LineasNegocio>(new Action<LineasNegocio>(this.attach_LineasNegocio), new Action<LineasNegocio>(this.detach_LineasNegocio));
			this._Personas2 = new EntitySet<Personas>(new Action<Personas>(this.attach_Personas2), new Action<Personas>(this.detach_Personas2));
			this._Personas_Secciones = new EntitySet<Personas_Secciones>(new Action<Personas_Secciones>(this.attach_Personas_Secciones), new Action<Personas_Secciones>(this.detach_Personas_Secciones));
			this._Secciones = new EntitySet<Secciones>(new Action<Secciones>(this.attach_Secciones), new Action<Secciones>(this.detach_Secciones));
			this._Seguridad_Opciones = new EntitySet<Seguridad_Opciones>(new Action<Seguridad_Opciones>(this.attach_Seguridad_Opciones), new Action<Seguridad_Opciones>(this.detach_Seguridad_Opciones));
			this._Seguridad_Perfiles = new EntitySet<Seguridad_Perfiles>(new Action<Seguridad_Perfiles>(this.attach_Seguridad_Perfiles), new Action<Seguridad_Perfiles>(this.detach_Seguridad_Perfiles));
			this._Tareas = new EntitySet<Tareas>(new Action<Tareas>(this.attach_Tareas), new Action<Tareas>(this.detach_Tareas));
			this._Tareas_Empresas = new EntitySet<Tareas_Empresas>(new Action<Tareas_Empresas>(this.attach_Tareas_Empresas), new Action<Tareas_Empresas>(this.detach_Tareas_Empresas));
			this._Tareas_Empresas1 = new EntitySet<Tareas_Empresas>(new Action<Tareas_Empresas>(this.attach_Tareas_Empresas1), new Action<Tareas_Empresas>(this.detach_Tareas_Empresas1));
			this._Tareas_Empresas_LineasEsfuerzo = new EntitySet<Tareas_Empresas_LineasEsfuerzo>(new Action<Tareas_Empresas_LineasEsfuerzo>(this.attach_Tareas_Empresas_LineasEsfuerzo), new Action<Tareas_Empresas_LineasEsfuerzo>(this.detach_Tareas_Empresas_LineasEsfuerzo));
			this._Tareas_Empresas_LineasEsfuerzo1 = new EntitySet<Tareas_Empresas_LineasEsfuerzo>(new Action<Tareas_Empresas_LineasEsfuerzo>(this.attach_Tareas_Empresas_LineasEsfuerzo1), new Action<Tareas_Empresas_LineasEsfuerzo>(this.detach_Tareas_Empresas_LineasEsfuerzo1));
			this._TiposTarea = new EntitySet<TiposTarea>(new Action<TiposTarea>(this.attach_TiposTarea), new Action<TiposTarea>(this.detach_TiposTarea));
			this._Facturas = new EntitySet<Facturas>(new Action<Facturas>(this.attach_Facturas), new Action<Facturas>(this.detach_Facturas));
			this._Facturas1 = new EntitySet<Facturas>(new Action<Facturas>(this.attach_Facturas1), new Action<Facturas>(this.detach_Facturas1));
			this._EnlacesContables = new EntitySet<EnlacesContables>(new Action<EnlacesContables>(this.attach_EnlacesContables), new Action<EnlacesContables>(this.detach_EnlacesContables));
			this._ItemNumbersD365 = new EntitySet<ItemNumbersD365>(new Action<ItemNumbersD365>(this.attach_ItemNumbersD365), new Action<ItemNumbersD365>(this.detach_ItemNumbersD365));
			this._ProductosD365 = new EntitySet<ProductosD365>(new Action<ProductosD365>(this.attach_ProductosD365), new Action<ProductosD365>(this.detach_ProductosD365));
			this._Tareas_Empresas_LineasEsfuerzo_Tickets = new EntitySet<Tareas_Empresas_LineasEsfuerzo_Tickets>(new Action<Tareas_Empresas_LineasEsfuerzo_Tickets>(this.attach_Tareas_Empresas_LineasEsfuerzo_Tickets), new Action<Tareas_Empresas_LineasEsfuerzo_Tickets>(this.detach_Tareas_Empresas_LineasEsfuerzo_Tickets));
			this._Proyectos_Partes = new EntitySet<Proyectos_Partes>(new Action<Proyectos_Partes>(this.attach_Proyectos_Partes), new Action<Proyectos_Partes>(this.detach_Proyectos_Partes));
			this._Departamentos2 = default(EntityRef<Departamentos>);
			this._Personas1 = default(EntityRef<Personas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PER_Id
		{
			get
			{
				return this._PER_Id;
			}
			set
			{
				if ((this._PER_Id != value))
				{
					this.OnPER_IdChanging(value);
					this.SendPropertyChanging();
					this._PER_Id = value;
					this.SendPropertyChanged("PER_Id");
					this.OnPER_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PER_Nombre
		{
			get
			{
				return this._PER_Nombre;
			}
			set
			{
				if ((this._PER_Nombre != value))
				{
					this.OnPER_NombreChanging(value);
					this.SendPropertyChanging();
					this._PER_Nombre = value;
					this.SendPropertyChanged("PER_Nombre");
					this.OnPER_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Apellido1", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PER_Apellido1
		{
			get
			{
				return this._PER_Apellido1;
			}
			set
			{
				if ((this._PER_Apellido1 != value))
				{
					this.OnPER_Apellido1Changing(value);
					this.SendPropertyChanging();
					this._PER_Apellido1 = value;
					this.SendPropertyChanged("PER_Apellido1");
					this.OnPER_Apellido1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Apellido2", DbType="VarChar(100)")]
		public string PER_Apellido2
		{
			get
			{
				return this._PER_Apellido2;
			}
			set
			{
				if ((this._PER_Apellido2 != value))
				{
					this.OnPER_Apellido2Changing(value);
					this.SendPropertyChanging();
					this._PER_Apellido2 = value;
					this.SendPropertyChanged("PER_Apellido2");
					this.OnPER_Apellido2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_DEP_Id", DbType="Int")]
		public System.Nullable<int> PER_DEP_Id
		{
			get
			{
				return this._PER_DEP_Id;
			}
			set
			{
				if ((this._PER_DEP_Id != value))
				{
					if (this._Departamentos2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPER_DEP_IdChanging(value);
					this.SendPropertyChanging();
					this._PER_DEP_Id = value;
					this.SendPropertyChanged("PER_DEP_Id");
					this.OnPER_DEP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Email", DbType="VarChar(100)")]
		public string PER_Email
		{
			get
			{
				return this._PER_Email;
			}
			set
			{
				if ((this._PER_Email != value))
				{
					this.OnPER_EmailChanging(value);
					this.SendPropertyChanging();
					this._PER_Email = value;
					this.SendPropertyChanged("PER_Email");
					this.OnPER_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAlta", DbType="DateTime NOT NULL")]
		public System.DateTime FechaAlta
		{
			get
			{
				return this._FechaAlta;
			}
			set
			{
				if ((this._FechaAlta != value))
				{
					this.OnFechaAltaChanging(value);
					this.SendPropertyChanging();
					this._FechaAlta = value;
					this.SendPropertyChanged("FechaAlta");
					this.OnFechaAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaModificacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaModificacion
		{
			get
			{
				return this._FechaModificacion;
			}
			set
			{
				if ((this._FechaModificacion != value))
				{
					this.OnFechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._FechaModificacion = value;
					this.SendPropertyChanged("FechaModificacion");
					this.OnFechaModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Id_Modificacion", DbType="Int NOT NULL")]
		public int PER_Id_Modificacion
		{
			get
			{
				return this._PER_Id_Modificacion;
			}
			set
			{
				if ((this._PER_Id_Modificacion != value))
				{
					if (this._Personas1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPER_Id_ModificacionChanging(value);
					this.SendPropertyChanging();
					this._PER_Id_Modificacion = value;
					this.SendPropertyChanged("PER_Id_Modificacion");
					this.OnPER_Id_ModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Activo")]
		public bool PER_Activo
		{
			get
			{
				return this._PER_Activo;
			}
			set
			{
				if ((this._PER_Activo != value))
				{
					this.OnPER_ActivoChanging(value);
					this.SendPropertyChanging();
					this._PER_Activo = value;
					this.SendPropertyChanged("PER_Activo");
					this.OnPER_ActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Departamentos", Storage="_Departamentos", ThisKey="PER_Id", OtherKey="PER_Id_Modificacion")]
		public EntitySet<Departamentos> Departamentos
		{
			get
			{
				return this._Departamentos;
			}
			set
			{
				this._Departamentos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Departamentos1", Storage="_Departamentos1", ThisKey="PER_Id", OtherKey="DEP_PER_Id_Responsable")]
		public EntitySet<Departamentos> Departamentos1
		{
			get
			{
				return this._Departamentos1;
			}
			set
			{
				this._Departamentos1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Usuarios", Storage="_Usuarios", ThisKey="PER_Id", OtherKey="PER_Id_Modificacion")]
		public EntitySet<Usuarios> Usuarios
		{
			get
			{
				return this._Usuarios;
			}
			set
			{
				this._Usuarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Usuarios1", Storage="_Usuarios1", ThisKey="PER_Id", OtherKey="USU_PER_Id")]
		public EntitySet<Usuarios> Usuarios1
		{
			get
			{
				return this._Usuarios1;
			}
			set
			{
				this._Usuarios1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Empresas", Storage="_Empresas", ThisKey="PER_Id", OtherKey="EMP_PER_Id_AprobadorDefault")]
		public EntitySet<Empresas> Empresas
		{
			get
			{
				return this._Empresas;
			}
			set
			{
				this._Empresas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Empresas1", Storage="_Empresas1", ThisKey="PER_Id", OtherKey="PER_Id_Modificacion")]
		public EntitySet<Empresas> Empresas1
		{
			get
			{
				return this._Empresas1;
			}
			set
			{
				this._Empresas1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Empresas_Aprobadores", Storage="_Empresas_Aprobadores", ThisKey="PER_Id", OtherKey="EMA_PER_Id")]
		public EntitySet<Empresas_Aprobadores> Empresas_Aprobadores
		{
			get
			{
				return this._Empresas_Aprobadores;
			}
			set
			{
				this._Empresas_Aprobadores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_EstadosSolicitud", Storage="_EstadosSolicitud", ThisKey="PER_Id", OtherKey="PER_Id_Modificacion")]
		public EntitySet<EstadosSolicitud> EstadosSolicitud
		{
			get
			{
				return this._EstadosSolicitud;
			}
			set
			{
				this._EstadosSolicitud.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_LineasNegocio", Storage="_LineasNegocio", ThisKey="PER_Id", OtherKey="PER_Id_Modificacion")]
		public EntitySet<LineasNegocio> LineasNegocio
		{
			get
			{
				return this._LineasNegocio;
			}
			set
			{
				this._LineasNegocio.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Personas", Storage="_Personas2", ThisKey="PER_Id", OtherKey="PER_Id_Modificacion")]
		public EntitySet<Personas> Personas2
		{
			get
			{
				return this._Personas2;
			}
			set
			{
				this._Personas2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Personas_Secciones", Storage="_Personas_Secciones", ThisKey="PER_Id", OtherKey="PDE_PER_Id")]
		public EntitySet<Personas_Secciones> Personas_Secciones
		{
			get
			{
				return this._Personas_Secciones;
			}
			set
			{
				this._Personas_Secciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Secciones", Storage="_Secciones", ThisKey="PER_Id", OtherKey="PER_Id_Modificacion")]
		public EntitySet<Secciones> Secciones
		{
			get
			{
				return this._Secciones;
			}
			set
			{
				this._Secciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Seguridad_Opciones", Storage="_Seguridad_Opciones", ThisKey="PER_Id", OtherKey="PER_Id_Modificacion")]
		public EntitySet<Seguridad_Opciones> Seguridad_Opciones
		{
			get
			{
				return this._Seguridad_Opciones;
			}
			set
			{
				this._Seguridad_Opciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Seguridad_Perfiles", Storage="_Seguridad_Perfiles", ThisKey="PER_Id", OtherKey="PER_Id_Modificacion")]
		public EntitySet<Seguridad_Perfiles> Seguridad_Perfiles
		{
			get
			{
				return this._Seguridad_Perfiles;
			}
			set
			{
				this._Seguridad_Perfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Tareas", Storage="_Tareas", ThisKey="PER_Id", OtherKey="PER_Id_Modificacion")]
		public EntitySet<Tareas> Tareas
		{
			get
			{
				return this._Tareas;
			}
			set
			{
				this._Tareas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Tareas_Empresas", Storage="_Tareas_Empresas", ThisKey="PER_Id", OtherKey="TEM_PER_Id_Aprobador")]
		public EntitySet<Tareas_Empresas> Tareas_Empresas
		{
			get
			{
				return this._Tareas_Empresas;
			}
			set
			{
				this._Tareas_Empresas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Tareas_Empresas1", Storage="_Tareas_Empresas1", ThisKey="PER_Id", OtherKey="PER_Id_Modificacion")]
		public EntitySet<Tareas_Empresas> Tareas_Empresas1
		{
			get
			{
				return this._Tareas_Empresas1;
			}
			set
			{
				this._Tareas_Empresas1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Tareas_Empresas_LineasEsfuerzo", Storage="_Tareas_Empresas_LineasEsfuerzo", ThisKey="PER_Id", OtherKey="TLE_PER_Id_Aprobador")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo> Tareas_Empresas_LineasEsfuerzo
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Tareas_Empresas_LineasEsfuerzo1", Storage="_Tareas_Empresas_LineasEsfuerzo1", ThisKey="PER_Id", OtherKey="PER_Id_Modificacion")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo> Tareas_Empresas_LineasEsfuerzo1
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo1;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_TiposTarea", Storage="_TiposTarea", ThisKey="PER_Id", OtherKey="PER_Id_Modificacion")]
		public EntitySet<TiposTarea> TiposTarea
		{
			get
			{
				return this._TiposTarea;
			}
			set
			{
				this._TiposTarea.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Facturas", Storage="_Facturas", ThisKey="PER_Id", OtherKey="FAC_PER_Id_Aprobador")]
		public EntitySet<Facturas> Facturas
		{
			get
			{
				return this._Facturas;
			}
			set
			{
				this._Facturas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Facturas1", Storage="_Facturas1", ThisKey="PER_Id", OtherKey="PER_Id_Modificacion")]
		public EntitySet<Facturas> Facturas1
		{
			get
			{
				return this._Facturas1;
			}
			set
			{
				this._Facturas1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_EnlacesContables", Storage="_EnlacesContables", ThisKey="PER_Id", OtherKey="ECO_PER_Id")]
		public EntitySet<EnlacesContables> EnlacesContables
		{
			get
			{
				return this._EnlacesContables;
			}
			set
			{
				this._EnlacesContables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_ItemNumbersD365", Storage="_ItemNumbersD365", ThisKey="PER_Id", OtherKey="PER_Id_Modificacion")]
		public EntitySet<ItemNumbersD365> ItemNumbersD365
		{
			get
			{
				return this._ItemNumbersD365;
			}
			set
			{
				this._ItemNumbersD365.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_ProductosD365", Storage="_ProductosD365", ThisKey="PER_Id", OtherKey="PER_Id_Modificacion")]
		public EntitySet<ProductosD365> ProductosD365
		{
			get
			{
				return this._ProductosD365;
			}
			set
			{
				this._ProductosD365.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Tareas_Empresas_LineasEsfuerzo_Tickets", Storage="_Tareas_Empresas_LineasEsfuerzo_Tickets", ThisKey="PER_Id", OtherKey="TCT_PER_Id")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo_Tickets> Tareas_Empresas_LineasEsfuerzo_Tickets
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo_Tickets;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo_Tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Proyectos_Partes", Storage="_Proyectos_Partes", ThisKey="PER_Id", OtherKey="PPA_PER_Id")]
		public EntitySet<Proyectos_Partes> Proyectos_Partes
		{
			get
			{
				return this._Proyectos_Partes;
			}
			set
			{
				this._Proyectos_Partes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departamentos_Personas", Storage="_Departamentos2", ThisKey="PER_DEP_Id", OtherKey="DEP_Id", IsForeignKey=true)]
		public Departamentos Departamentos2
		{
			get
			{
				return this._Departamentos2.Entity;
			}
			set
			{
				Departamentos previousValue = this._Departamentos2.Entity;
				if (((previousValue != value) 
							|| (this._Departamentos2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Departamentos2.Entity = null;
						previousValue.Personas2.Remove(this);
					}
					this._Departamentos2.Entity = value;
					if ((value != null))
					{
						value.Personas2.Add(this);
						this._PER_DEP_Id = value.DEP_Id;
					}
					else
					{
						this._PER_DEP_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Departamentos2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Personas", Storage="_Personas1", ThisKey="PER_Id_Modificacion", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas Personas1
		{
			get
			{
				return this._Personas1.Entity;
			}
			set
			{
				Personas previousValue = this._Personas1.Entity;
				if (((previousValue != value) 
							|| (this._Personas1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personas1.Entity = null;
						previousValue.Personas2.Remove(this);
					}
					this._Personas1.Entity = value;
					if ((value != null))
					{
						value.Personas2.Add(this);
						this._PER_Id_Modificacion = value.PER_Id;
					}
					else
					{
						this._PER_Id_Modificacion = default(int);
					}
					this.SendPropertyChanged("Personas1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Departamentos(Departamentos entity)
		{
			this.SendPropertyChanging();
			entity.Personas = this;
		}
		
		private void detach_Departamentos(Departamentos entity)
		{
			this.SendPropertyChanging();
			entity.Personas = null;
		}
		
		private void attach_Departamentos1(Departamentos entity)
		{
			this.SendPropertyChanging();
			entity.Personas1 = this;
		}
		
		private void detach_Departamentos1(Departamentos entity)
		{
			this.SendPropertyChanging();
			entity.Personas1 = null;
		}
		
		private void attach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.PersonaModificacion = this;
		}
		
		private void detach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.PersonaModificacion = null;
		}
		
		private void attach_Usuarios1(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.PersonaUsuario = this;
		}
		
		private void detach_Usuarios1(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.PersonaUsuario = null;
		}
		
		private void attach_Empresas(Empresas entity)
		{
			this.SendPropertyChanging();
			entity.Personas = this;
		}
		
		private void detach_Empresas(Empresas entity)
		{
			this.SendPropertyChanging();
			entity.Personas = null;
		}
		
		private void attach_Empresas1(Empresas entity)
		{
			this.SendPropertyChanging();
			entity.Personas1 = this;
		}
		
		private void detach_Empresas1(Empresas entity)
		{
			this.SendPropertyChanging();
			entity.Personas1 = null;
		}
		
		private void attach_Empresas_Aprobadores(Empresas_Aprobadores entity)
		{
			this.SendPropertyChanging();
			entity.Personas = this;
		}
		
		private void detach_Empresas_Aprobadores(Empresas_Aprobadores entity)
		{
			this.SendPropertyChanging();
			entity.Personas = null;
		}
		
		private void attach_EstadosSolicitud(EstadosSolicitud entity)
		{
			this.SendPropertyChanging();
			entity.Personas = this;
		}
		
		private void detach_EstadosSolicitud(EstadosSolicitud entity)
		{
			this.SendPropertyChanging();
			entity.Personas = null;
		}
		
		private void attach_LineasNegocio(LineasNegocio entity)
		{
			this.SendPropertyChanging();
			entity.Personas = this;
		}
		
		private void detach_LineasNegocio(LineasNegocio entity)
		{
			this.SendPropertyChanging();
			entity.Personas = null;
		}
		
		private void attach_Personas2(Personas entity)
		{
			this.SendPropertyChanging();
			entity.Personas1 = this;
		}
		
		private void detach_Personas2(Personas entity)
		{
			this.SendPropertyChanging();
			entity.Personas1 = null;
		}
		
		private void attach_Personas_Secciones(Personas_Secciones entity)
		{
			this.SendPropertyChanging();
			entity.Personas = this;
		}
		
		private void detach_Personas_Secciones(Personas_Secciones entity)
		{
			this.SendPropertyChanging();
			entity.Personas = null;
		}
		
		private void attach_Secciones(Secciones entity)
		{
			this.SendPropertyChanging();
			entity.Personas = this;
		}
		
		private void detach_Secciones(Secciones entity)
		{
			this.SendPropertyChanging();
			entity.Personas = null;
		}
		
		private void attach_Seguridad_Opciones(Seguridad_Opciones entity)
		{
			this.SendPropertyChanging();
			entity.Personas = this;
		}
		
		private void detach_Seguridad_Opciones(Seguridad_Opciones entity)
		{
			this.SendPropertyChanging();
			entity.Personas = null;
		}
		
		private void attach_Seguridad_Perfiles(Seguridad_Perfiles entity)
		{
			this.SendPropertyChanging();
			entity.Personas = this;
		}
		
		private void detach_Seguridad_Perfiles(Seguridad_Perfiles entity)
		{
			this.SendPropertyChanging();
			entity.Personas = null;
		}
		
		private void attach_Tareas(Tareas entity)
		{
			this.SendPropertyChanging();
			entity.Personas = this;
		}
		
		private void detach_Tareas(Tareas entity)
		{
			this.SendPropertyChanging();
			entity.Personas = null;
		}
		
		private void attach_Tareas_Empresas(Tareas_Empresas entity)
		{
			this.SendPropertyChanging();
			entity.Personas = this;
		}
		
		private void detach_Tareas_Empresas(Tareas_Empresas entity)
		{
			this.SendPropertyChanging();
			entity.Personas = null;
		}
		
		private void attach_Tareas_Empresas1(Tareas_Empresas entity)
		{
			this.SendPropertyChanging();
			entity.Personas1 = this;
		}
		
		private void detach_Tareas_Empresas1(Tareas_Empresas entity)
		{
			this.SendPropertyChanging();
			entity.Personas1 = null;
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo(Tareas_Empresas_LineasEsfuerzo entity)
		{
			this.SendPropertyChanging();
			entity.PersonaAprobador = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo(Tareas_Empresas_LineasEsfuerzo entity)
		{
			this.SendPropertyChanging();
			entity.PersonaAprobador = null;
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo1(Tareas_Empresas_LineasEsfuerzo entity)
		{
			this.SendPropertyChanging();
			entity.PersonaModificacion = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo1(Tareas_Empresas_LineasEsfuerzo entity)
		{
			this.SendPropertyChanging();
			entity.PersonaModificacion = null;
		}
		
		private void attach_TiposTarea(TiposTarea entity)
		{
			this.SendPropertyChanging();
			entity.Personas = this;
		}
		
		private void detach_TiposTarea(TiposTarea entity)
		{
			this.SendPropertyChanging();
			entity.Personas = null;
		}
		
		private void attach_Facturas(Facturas entity)
		{
			this.SendPropertyChanging();
			entity.PersonaAprobador = this;
		}
		
		private void detach_Facturas(Facturas entity)
		{
			this.SendPropertyChanging();
			entity.PersonaAprobador = null;
		}
		
		private void attach_Facturas1(Facturas entity)
		{
			this.SendPropertyChanging();
			entity.PersonaModificacion = this;
		}
		
		private void detach_Facturas1(Facturas entity)
		{
			this.SendPropertyChanging();
			entity.PersonaModificacion = null;
		}
		
		private void attach_EnlacesContables(EnlacesContables entity)
		{
			this.SendPropertyChanging();
			entity.Personas = this;
		}
		
		private void detach_EnlacesContables(EnlacesContables entity)
		{
			this.SendPropertyChanging();
			entity.Personas = null;
		}
		
		private void attach_ItemNumbersD365(ItemNumbersD365 entity)
		{
			this.SendPropertyChanging();
			entity.Personas = this;
		}
		
		private void detach_ItemNumbersD365(ItemNumbersD365 entity)
		{
			this.SendPropertyChanging();
			entity.Personas = null;
		}
		
		private void attach_ProductosD365(ProductosD365 entity)
		{
			this.SendPropertyChanging();
			entity.Personas = this;
		}
		
		private void detach_ProductosD365(ProductosD365 entity)
		{
			this.SendPropertyChanging();
			entity.Personas = null;
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo_Tickets(Tareas_Empresas_LineasEsfuerzo_Tickets entity)
		{
			this.SendPropertyChanging();
			entity.Personas = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo_Tickets(Tareas_Empresas_LineasEsfuerzo_Tickets entity)
		{
			this.SendPropertyChanging();
			entity.Personas = null;
		}
		
		private void attach_Proyectos_Partes(Proyectos_Partes entity)
		{
			this.SendPropertyChanging();
			entity.Personas = this;
		}
		
		private void detach_Proyectos_Partes(Proyectos_Partes entity)
		{
			this.SendPropertyChanging();
			entity.Personas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Personas_Secciones")]
	public partial class Personas_Secciones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PDE_PER_Id;
		
		private int _PDE_SEC_Id;
		
		private EntityRef<Personas> _Personas;
		
		private EntityRef<Secciones> _Secciones;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPDE_PER_IdChanging(int value);
    partial void OnPDE_PER_IdChanged();
    partial void OnPDE_SEC_IdChanging(int value);
    partial void OnPDE_SEC_IdChanged();
    #endregion
		
		public Personas_Secciones()
		{
			this._Personas = default(EntityRef<Personas>);
			this._Secciones = default(EntityRef<Secciones>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDE_PER_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PDE_PER_Id
		{
			get
			{
				return this._PDE_PER_Id;
			}
			set
			{
				if ((this._PDE_PER_Id != value))
				{
					if (this._Personas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPDE_PER_IdChanging(value);
					this.SendPropertyChanging();
					this._PDE_PER_Id = value;
					this.SendPropertyChanged("PDE_PER_Id");
					this.OnPDE_PER_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDE_SEC_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PDE_SEC_Id
		{
			get
			{
				return this._PDE_SEC_Id;
			}
			set
			{
				if ((this._PDE_SEC_Id != value))
				{
					if (this._Secciones.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPDE_SEC_IdChanging(value);
					this.SendPropertyChanging();
					this._PDE_SEC_Id = value;
					this.SendPropertyChanged("PDE_SEC_Id");
					this.OnPDE_SEC_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Personas_Secciones", Storage="_Personas", ThisKey="PDE_PER_Id", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas Personas
		{
			get
			{
				return this._Personas.Entity;
			}
			set
			{
				Personas previousValue = this._Personas.Entity;
				if (((previousValue != value) 
							|| (this._Personas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personas.Entity = null;
						previousValue.Personas_Secciones.Remove(this);
					}
					this._Personas.Entity = value;
					if ((value != null))
					{
						value.Personas_Secciones.Add(this);
						this._PDE_PER_Id = value.PER_Id;
					}
					else
					{
						this._PDE_PER_Id = default(int);
					}
					this.SendPropertyChanged("Personas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Secciones_Personas_Secciones", Storage="_Secciones", ThisKey="PDE_SEC_Id", OtherKey="SEC_Id", IsForeignKey=true)]
		public Secciones Secciones
		{
			get
			{
				return this._Secciones.Entity;
			}
			set
			{
				Secciones previousValue = this._Secciones.Entity;
				if (((previousValue != value) 
							|| (this._Secciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Secciones.Entity = null;
						previousValue.Personas_Secciones.Remove(this);
					}
					this._Secciones.Entity = value;
					if ((value != null))
					{
						value.Personas_Secciones.Add(this);
						this._PDE_SEC_Id = value.SEC_Id;
					}
					else
					{
						this._PDE_SEC_Id = default(int);
					}
					this.SendPropertyChanged("Secciones");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Secciones")]
	public partial class Secciones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SEC_Id;
		
		private string _SEC_Codigo;
		
		private string _SEC_Nombre;
		
		private int _SEC_DEP_Id;
		
		private bool _SEC_Ficticia;
		
		private System.DateTime _FechaAlta;
		
		private System.DateTime _FechaModificacion;
		
		private int _PER_Id_Modificacion;
		
		private EntitySet<Personas_Secciones> _Personas_Secciones;
		
		private EntitySet<Tareas> _Tareas;
		
		private EntityRef<Departamentos> _Departamentos;
		
		private EntityRef<Personas> _Personas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSEC_IdChanging(int value);
    partial void OnSEC_IdChanged();
    partial void OnSEC_CodigoChanging(string value);
    partial void OnSEC_CodigoChanged();
    partial void OnSEC_NombreChanging(string value);
    partial void OnSEC_NombreChanged();
    partial void OnSEC_DEP_IdChanging(int value);
    partial void OnSEC_DEP_IdChanged();
    partial void OnSEC_FicticiaChanging(bool value);
    partial void OnSEC_FicticiaChanged();
    partial void OnFechaAltaChanging(System.DateTime value);
    partial void OnFechaAltaChanged();
    partial void OnFechaModificacionChanging(System.DateTime value);
    partial void OnFechaModificacionChanged();
    partial void OnPER_Id_ModificacionChanging(int value);
    partial void OnPER_Id_ModificacionChanged();
    #endregion
		
		public Secciones()
		{
			this._Personas_Secciones = new EntitySet<Personas_Secciones>(new Action<Personas_Secciones>(this.attach_Personas_Secciones), new Action<Personas_Secciones>(this.detach_Personas_Secciones));
			this._Tareas = new EntitySet<Tareas>(new Action<Tareas>(this.attach_Tareas), new Action<Tareas>(this.detach_Tareas));
			this._Departamentos = default(EntityRef<Departamentos>);
			this._Personas = default(EntityRef<Personas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEC_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SEC_Id
		{
			get
			{
				return this._SEC_Id;
			}
			set
			{
				if ((this._SEC_Id != value))
				{
					this.OnSEC_IdChanging(value);
					this.SendPropertyChanging();
					this._SEC_Id = value;
					this.SendPropertyChanged("SEC_Id");
					this.OnSEC_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEC_Codigo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string SEC_Codigo
		{
			get
			{
				return this._SEC_Codigo;
			}
			set
			{
				if ((this._SEC_Codigo != value))
				{
					this.OnSEC_CodigoChanging(value);
					this.SendPropertyChanging();
					this._SEC_Codigo = value;
					this.SendPropertyChanged("SEC_Codigo");
					this.OnSEC_CodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEC_Nombre", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string SEC_Nombre
		{
			get
			{
				return this._SEC_Nombre;
			}
			set
			{
				if ((this._SEC_Nombre != value))
				{
					this.OnSEC_NombreChanging(value);
					this.SendPropertyChanging();
					this._SEC_Nombre = value;
					this.SendPropertyChanged("SEC_Nombre");
					this.OnSEC_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEC_DEP_Id", DbType="Int NOT NULL")]
		public int SEC_DEP_Id
		{
			get
			{
				return this._SEC_DEP_Id;
			}
			set
			{
				if ((this._SEC_DEP_Id != value))
				{
					if (this._Departamentos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSEC_DEP_IdChanging(value);
					this.SendPropertyChanging();
					this._SEC_DEP_Id = value;
					this.SendPropertyChanged("SEC_DEP_Id");
					this.OnSEC_DEP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEC_Ficticia", DbType="Bit NOT NULL")]
		public bool SEC_Ficticia
		{
			get
			{
				return this._SEC_Ficticia;
			}
			set
			{
				if ((this._SEC_Ficticia != value))
				{
					this.OnSEC_FicticiaChanging(value);
					this.SendPropertyChanging();
					this._SEC_Ficticia = value;
					this.SendPropertyChanged("SEC_Ficticia");
					this.OnSEC_FicticiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAlta", DbType="DateTime NOT NULL")]
		public System.DateTime FechaAlta
		{
			get
			{
				return this._FechaAlta;
			}
			set
			{
				if ((this._FechaAlta != value))
				{
					this.OnFechaAltaChanging(value);
					this.SendPropertyChanging();
					this._FechaAlta = value;
					this.SendPropertyChanged("FechaAlta");
					this.OnFechaAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaModificacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaModificacion
		{
			get
			{
				return this._FechaModificacion;
			}
			set
			{
				if ((this._FechaModificacion != value))
				{
					this.OnFechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._FechaModificacion = value;
					this.SendPropertyChanged("FechaModificacion");
					this.OnFechaModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Id_Modificacion", DbType="Int NOT NULL")]
		public int PER_Id_Modificacion
		{
			get
			{
				return this._PER_Id_Modificacion;
			}
			set
			{
				if ((this._PER_Id_Modificacion != value))
				{
					if (this._Personas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPER_Id_ModificacionChanging(value);
					this.SendPropertyChanging();
					this._PER_Id_Modificacion = value;
					this.SendPropertyChanged("PER_Id_Modificacion");
					this.OnPER_Id_ModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Secciones_Personas_Secciones", Storage="_Personas_Secciones", ThisKey="SEC_Id", OtherKey="PDE_SEC_Id")]
		public EntitySet<Personas_Secciones> Personas_Secciones
		{
			get
			{
				return this._Personas_Secciones;
			}
			set
			{
				this._Personas_Secciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Secciones_Tareas", Storage="_Tareas", ThisKey="SEC_Id", OtherKey="TAR_SEC_Id")]
		public EntitySet<Tareas> Tareas
		{
			get
			{
				return this._Tareas;
			}
			set
			{
				this._Tareas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departamentos_Secciones", Storage="_Departamentos", ThisKey="SEC_DEP_Id", OtherKey="DEP_Id", IsForeignKey=true)]
		public Departamentos Departamentos
		{
			get
			{
				return this._Departamentos.Entity;
			}
			set
			{
				Departamentos previousValue = this._Departamentos.Entity;
				if (((previousValue != value) 
							|| (this._Departamentos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Departamentos.Entity = null;
						previousValue.Secciones.Remove(this);
					}
					this._Departamentos.Entity = value;
					if ((value != null))
					{
						value.Secciones.Add(this);
						this._SEC_DEP_Id = value.DEP_Id;
					}
					else
					{
						this._SEC_DEP_Id = default(int);
					}
					this.SendPropertyChanged("Departamentos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Secciones", Storage="_Personas", ThisKey="PER_Id_Modificacion", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas Personas
		{
			get
			{
				return this._Personas.Entity;
			}
			set
			{
				Personas previousValue = this._Personas.Entity;
				if (((previousValue != value) 
							|| (this._Personas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personas.Entity = null;
						previousValue.Secciones.Remove(this);
					}
					this._Personas.Entity = value;
					if ((value != null))
					{
						value.Secciones.Add(this);
						this._PER_Id_Modificacion = value.PER_Id;
					}
					else
					{
						this._PER_Id_Modificacion = default(int);
					}
					this.SendPropertyChanged("Personas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Personas_Secciones(Personas_Secciones entity)
		{
			this.SendPropertyChanging();
			entity.Secciones = this;
		}
		
		private void detach_Personas_Secciones(Personas_Secciones entity)
		{
			this.SendPropertyChanging();
			entity.Secciones = null;
		}
		
		private void attach_Tareas(Tareas entity)
		{
			this.SendPropertyChanging();
			entity.Secciones = this;
		}
		
		private void detach_Tareas(Tareas entity)
		{
			this.SendPropertyChanging();
			entity.Secciones = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Seguridad_Opciones")]
	public partial class Seguridad_Opciones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SOP_Id;
		
		private string _SOP_SOP_Id_Padre;
		
		private System.DateTime _FechaAlta;
		
		private System.DateTime _FechaModificacion;
		
		private int _PER_Id_Modificacion;
		
		private string _SOP_Nombre;
		
		private EntitySet<Seguridad_Opciones> _Seguridad_Opciones2;
		
		private EntitySet<Seguridad_Perfiles_Opciones> _Seguridad_Perfiles_Opciones;
		
		private EntityRef<Personas> _Personas;
		
		private EntityRef<Seguridad_Opciones> _Seguridad_Opciones1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSOP_IdChanging(string value);
    partial void OnSOP_IdChanged();
    partial void OnSOP_SOP_Id_PadreChanging(string value);
    partial void OnSOP_SOP_Id_PadreChanged();
    partial void OnFechaAltaChanging(System.DateTime value);
    partial void OnFechaAltaChanged();
    partial void OnFechaModificacionChanging(System.DateTime value);
    partial void OnFechaModificacionChanged();
    partial void OnPER_Id_ModificacionChanging(int value);
    partial void OnPER_Id_ModificacionChanged();
    partial void OnSOP_NombreChanging(string value);
    partial void OnSOP_NombreChanged();
    #endregion
		
		public Seguridad_Opciones()
		{
			this._Seguridad_Opciones2 = new EntitySet<Seguridad_Opciones>(new Action<Seguridad_Opciones>(this.attach_Seguridad_Opciones2), new Action<Seguridad_Opciones>(this.detach_Seguridad_Opciones2));
			this._Seguridad_Perfiles_Opciones = new EntitySet<Seguridad_Perfiles_Opciones>(new Action<Seguridad_Perfiles_Opciones>(this.attach_Seguridad_Perfiles_Opciones), new Action<Seguridad_Perfiles_Opciones>(this.detach_Seguridad_Perfiles_Opciones));
			this._Personas = default(EntityRef<Personas>);
			this._Seguridad_Opciones1 = default(EntityRef<Seguridad_Opciones>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOP_Id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SOP_Id
		{
			get
			{
				return this._SOP_Id;
			}
			set
			{
				if ((this._SOP_Id != value))
				{
					this.OnSOP_IdChanging(value);
					this.SendPropertyChanging();
					this._SOP_Id = value;
					this.SendPropertyChanged("SOP_Id");
					this.OnSOP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOP_SOP_Id_Padre", DbType="VarChar(50)")]
		public string SOP_SOP_Id_Padre
		{
			get
			{
				return this._SOP_SOP_Id_Padre;
			}
			set
			{
				if ((this._SOP_SOP_Id_Padre != value))
				{
					if (this._Seguridad_Opciones1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSOP_SOP_Id_PadreChanging(value);
					this.SendPropertyChanging();
					this._SOP_SOP_Id_Padre = value;
					this.SendPropertyChanged("SOP_SOP_Id_Padre");
					this.OnSOP_SOP_Id_PadreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAlta", DbType="DateTime NOT NULL")]
		public System.DateTime FechaAlta
		{
			get
			{
				return this._FechaAlta;
			}
			set
			{
				if ((this._FechaAlta != value))
				{
					this.OnFechaAltaChanging(value);
					this.SendPropertyChanging();
					this._FechaAlta = value;
					this.SendPropertyChanged("FechaAlta");
					this.OnFechaAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaModificacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaModificacion
		{
			get
			{
				return this._FechaModificacion;
			}
			set
			{
				if ((this._FechaModificacion != value))
				{
					this.OnFechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._FechaModificacion = value;
					this.SendPropertyChanged("FechaModificacion");
					this.OnFechaModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Id_Modificacion", DbType="Int NOT NULL")]
		public int PER_Id_Modificacion
		{
			get
			{
				return this._PER_Id_Modificacion;
			}
			set
			{
				if ((this._PER_Id_Modificacion != value))
				{
					if (this._Personas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPER_Id_ModificacionChanging(value);
					this.SendPropertyChanging();
					this._PER_Id_Modificacion = value;
					this.SendPropertyChanged("PER_Id_Modificacion");
					this.OnPER_Id_ModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOP_Nombre", CanBeNull=false)]
		public string SOP_Nombre
		{
			get
			{
				return this._SOP_Nombre;
			}
			set
			{
				if ((this._SOP_Nombre != value))
				{
					this.OnSOP_NombreChanging(value);
					this.SendPropertyChanging();
					this._SOP_Nombre = value;
					this.SendPropertyChanged("SOP_Nombre");
					this.OnSOP_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seguridad_Opciones_Seguridad_Opciones", Storage="_Seguridad_Opciones2", ThisKey="SOP_Id", OtherKey="SOP_SOP_Id_Padre")]
		public EntitySet<Seguridad_Opciones> Seguridad_Opciones2
		{
			get
			{
				return this._Seguridad_Opciones2;
			}
			set
			{
				this._Seguridad_Opciones2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seguridad_Opciones_Seguridad_Perfiles_Opciones", Storage="_Seguridad_Perfiles_Opciones", ThisKey="SOP_Id", OtherKey="SPO_SOP_Id")]
		public EntitySet<Seguridad_Perfiles_Opciones> Seguridad_Perfiles_Opciones
		{
			get
			{
				return this._Seguridad_Perfiles_Opciones;
			}
			set
			{
				this._Seguridad_Perfiles_Opciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Seguridad_Opciones", Storage="_Personas", ThisKey="PER_Id_Modificacion", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas Personas
		{
			get
			{
				return this._Personas.Entity;
			}
			set
			{
				Personas previousValue = this._Personas.Entity;
				if (((previousValue != value) 
							|| (this._Personas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personas.Entity = null;
						previousValue.Seguridad_Opciones.Remove(this);
					}
					this._Personas.Entity = value;
					if ((value != null))
					{
						value.Seguridad_Opciones.Add(this);
						this._PER_Id_Modificacion = value.PER_Id;
					}
					else
					{
						this._PER_Id_Modificacion = default(int);
					}
					this.SendPropertyChanged("Personas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seguridad_Opciones_Seguridad_Opciones", Storage="_Seguridad_Opciones1", ThisKey="SOP_SOP_Id_Padre", OtherKey="SOP_Id", IsForeignKey=true)]
		public Seguridad_Opciones Seguridad_Opciones1
		{
			get
			{
				return this._Seguridad_Opciones1.Entity;
			}
			set
			{
				Seguridad_Opciones previousValue = this._Seguridad_Opciones1.Entity;
				if (((previousValue != value) 
							|| (this._Seguridad_Opciones1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Seguridad_Opciones1.Entity = null;
						previousValue.Seguridad_Opciones2.Remove(this);
					}
					this._Seguridad_Opciones1.Entity = value;
					if ((value != null))
					{
						value.Seguridad_Opciones2.Add(this);
						this._SOP_SOP_Id_Padre = value.SOP_Id;
					}
					else
					{
						this._SOP_SOP_Id_Padre = default(string);
					}
					this.SendPropertyChanged("Seguridad_Opciones1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Seguridad_Opciones2(Seguridad_Opciones entity)
		{
			this.SendPropertyChanging();
			entity.Seguridad_Opciones1 = this;
		}
		
		private void detach_Seguridad_Opciones2(Seguridad_Opciones entity)
		{
			this.SendPropertyChanging();
			entity.Seguridad_Opciones1 = null;
		}
		
		private void attach_Seguridad_Perfiles_Opciones(Seguridad_Perfiles_Opciones entity)
		{
			this.SendPropertyChanging();
			entity.Seguridad_Opciones = this;
		}
		
		private void detach_Seguridad_Perfiles_Opciones(Seguridad_Perfiles_Opciones entity)
		{
			this.SendPropertyChanging();
			entity.Seguridad_Opciones = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Seguridad_Perfiles")]
	public partial class Seguridad_Perfiles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SPE_Id;
		
		private string _SPE_Nombre;
		
		private System.DateTime _FechaAlta;
		
		private System.DateTime _FechaModificacion;
		
		private int _PER_Id_Modificacion;
		
		private EntitySet<Usuarios> _Usuarios;
		
		private EntitySet<Seguridad_Perfiles_Opciones> _Seguridad_Perfiles_Opciones;
		
		private EntityRef<Personas> _Personas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSPE_IdChanging(int value);
    partial void OnSPE_IdChanged();
    partial void OnSPE_NombreChanging(string value);
    partial void OnSPE_NombreChanged();
    partial void OnFechaAltaChanging(System.DateTime value);
    partial void OnFechaAltaChanged();
    partial void OnFechaModificacionChanging(System.DateTime value);
    partial void OnFechaModificacionChanged();
    partial void OnPER_Id_ModificacionChanging(int value);
    partial void OnPER_Id_ModificacionChanged();
    #endregion
		
		public Seguridad_Perfiles()
		{
			this._Usuarios = new EntitySet<Usuarios>(new Action<Usuarios>(this.attach_Usuarios), new Action<Usuarios>(this.detach_Usuarios));
			this._Seguridad_Perfiles_Opciones = new EntitySet<Seguridad_Perfiles_Opciones>(new Action<Seguridad_Perfiles_Opciones>(this.attach_Seguridad_Perfiles_Opciones), new Action<Seguridad_Perfiles_Opciones>(this.detach_Seguridad_Perfiles_Opciones));
			this._Personas = default(EntityRef<Personas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPE_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SPE_Id
		{
			get
			{
				return this._SPE_Id;
			}
			set
			{
				if ((this._SPE_Id != value))
				{
					this.OnSPE_IdChanging(value);
					this.SendPropertyChanging();
					this._SPE_Id = value;
					this.SendPropertyChanged("SPE_Id");
					this.OnSPE_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPE_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SPE_Nombre
		{
			get
			{
				return this._SPE_Nombre;
			}
			set
			{
				if ((this._SPE_Nombre != value))
				{
					this.OnSPE_NombreChanging(value);
					this.SendPropertyChanging();
					this._SPE_Nombre = value;
					this.SendPropertyChanged("SPE_Nombre");
					this.OnSPE_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAlta", DbType="DateTime NOT NULL")]
		public System.DateTime FechaAlta
		{
			get
			{
				return this._FechaAlta;
			}
			set
			{
				if ((this._FechaAlta != value))
				{
					this.OnFechaAltaChanging(value);
					this.SendPropertyChanging();
					this._FechaAlta = value;
					this.SendPropertyChanged("FechaAlta");
					this.OnFechaAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaModificacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaModificacion
		{
			get
			{
				return this._FechaModificacion;
			}
			set
			{
				if ((this._FechaModificacion != value))
				{
					this.OnFechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._FechaModificacion = value;
					this.SendPropertyChanged("FechaModificacion");
					this.OnFechaModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Id_Modificacion", DbType="Int NOT NULL")]
		public int PER_Id_Modificacion
		{
			get
			{
				return this._PER_Id_Modificacion;
			}
			set
			{
				if ((this._PER_Id_Modificacion != value))
				{
					if (this._Personas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPER_Id_ModificacionChanging(value);
					this.SendPropertyChanging();
					this._PER_Id_Modificacion = value;
					this.SendPropertyChanged("PER_Id_Modificacion");
					this.OnPER_Id_ModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seguridad_Perfiles_Usuarios", Storage="_Usuarios", ThisKey="SPE_Id", OtherKey="USU_SPE_Id")]
		public EntitySet<Usuarios> Usuarios
		{
			get
			{
				return this._Usuarios;
			}
			set
			{
				this._Usuarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seguridad_Perfiles_Seguridad_Perfiles_Opciones", Storage="_Seguridad_Perfiles_Opciones", ThisKey="SPE_Id", OtherKey="SPO_SPE_Id")]
		public EntitySet<Seguridad_Perfiles_Opciones> Seguridad_Perfiles_Opciones
		{
			get
			{
				return this._Seguridad_Perfiles_Opciones;
			}
			set
			{
				this._Seguridad_Perfiles_Opciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Seguridad_Perfiles", Storage="_Personas", ThisKey="PER_Id_Modificacion", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas Personas
		{
			get
			{
				return this._Personas.Entity;
			}
			set
			{
				Personas previousValue = this._Personas.Entity;
				if (((previousValue != value) 
							|| (this._Personas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personas.Entity = null;
						previousValue.Seguridad_Perfiles.Remove(this);
					}
					this._Personas.Entity = value;
					if ((value != null))
					{
						value.Seguridad_Perfiles.Add(this);
						this._PER_Id_Modificacion = value.PER_Id;
					}
					else
					{
						this._PER_Id_Modificacion = default(int);
					}
					this.SendPropertyChanged("Personas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.Seguridad_Perfiles = this;
		}
		
		private void detach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.Seguridad_Perfiles = null;
		}
		
		private void attach_Seguridad_Perfiles_Opciones(Seguridad_Perfiles_Opciones entity)
		{
			this.SendPropertyChanging();
			entity.Seguridad_Perfiles = this;
		}
		
		private void detach_Seguridad_Perfiles_Opciones(Seguridad_Perfiles_Opciones entity)
		{
			this.SendPropertyChanging();
			entity.Seguridad_Perfiles = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Seguridad_Perfiles_Opciones")]
	public partial class Seguridad_Perfiles_Opciones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SPO_SPE_Id;
		
		private string _SPO_SOP_Id;
		
		private bool _SPO_Escritura;
		
		private EntityRef<Seguridad_Opciones> _Seguridad_Opciones;
		
		private EntityRef<Seguridad_Perfiles> _Seguridad_Perfiles;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSPO_SPE_IdChanging(int value);
    partial void OnSPO_SPE_IdChanged();
    partial void OnSPO_SOP_IdChanging(string value);
    partial void OnSPO_SOP_IdChanged();
    partial void OnSPO_EscrituraChanging(bool value);
    partial void OnSPO_EscrituraChanged();
    #endregion
		
		public Seguridad_Perfiles_Opciones()
		{
			this._Seguridad_Opciones = default(EntityRef<Seguridad_Opciones>);
			this._Seguridad_Perfiles = default(EntityRef<Seguridad_Perfiles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPO_SPE_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SPO_SPE_Id
		{
			get
			{
				return this._SPO_SPE_Id;
			}
			set
			{
				if ((this._SPO_SPE_Id != value))
				{
					if (this._Seguridad_Perfiles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSPO_SPE_IdChanging(value);
					this.SendPropertyChanging();
					this._SPO_SPE_Id = value;
					this.SendPropertyChanged("SPO_SPE_Id");
					this.OnSPO_SPE_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPO_SOP_Id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SPO_SOP_Id
		{
			get
			{
				return this._SPO_SOP_Id;
			}
			set
			{
				if ((this._SPO_SOP_Id != value))
				{
					if (this._Seguridad_Opciones.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSPO_SOP_IdChanging(value);
					this.SendPropertyChanging();
					this._SPO_SOP_Id = value;
					this.SendPropertyChanged("SPO_SOP_Id");
					this.OnSPO_SOP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPO_Escritura", DbType="Bit NOT NULL")]
		public bool SPO_Escritura
		{
			get
			{
				return this._SPO_Escritura;
			}
			set
			{
				if ((this._SPO_Escritura != value))
				{
					this.OnSPO_EscrituraChanging(value);
					this.SendPropertyChanging();
					this._SPO_Escritura = value;
					this.SendPropertyChanged("SPO_Escritura");
					this.OnSPO_EscrituraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seguridad_Opciones_Seguridad_Perfiles_Opciones", Storage="_Seguridad_Opciones", ThisKey="SPO_SOP_Id", OtherKey="SOP_Id", IsForeignKey=true)]
		public Seguridad_Opciones Seguridad_Opciones
		{
			get
			{
				return this._Seguridad_Opciones.Entity;
			}
			set
			{
				Seguridad_Opciones previousValue = this._Seguridad_Opciones.Entity;
				if (((previousValue != value) 
							|| (this._Seguridad_Opciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Seguridad_Opciones.Entity = null;
						previousValue.Seguridad_Perfiles_Opciones.Remove(this);
					}
					this._Seguridad_Opciones.Entity = value;
					if ((value != null))
					{
						value.Seguridad_Perfiles_Opciones.Add(this);
						this._SPO_SOP_Id = value.SOP_Id;
					}
					else
					{
						this._SPO_SOP_Id = default(string);
					}
					this.SendPropertyChanged("Seguridad_Opciones");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Seguridad_Perfiles_Seguridad_Perfiles_Opciones", Storage="_Seguridad_Perfiles", ThisKey="SPO_SPE_Id", OtherKey="SPE_Id", IsForeignKey=true)]
		public Seguridad_Perfiles Seguridad_Perfiles
		{
			get
			{
				return this._Seguridad_Perfiles.Entity;
			}
			set
			{
				Seguridad_Perfiles previousValue = this._Seguridad_Perfiles.Entity;
				if (((previousValue != value) 
							|| (this._Seguridad_Perfiles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Seguridad_Perfiles.Entity = null;
						previousValue.Seguridad_Perfiles_Opciones.Remove(this);
					}
					this._Seguridad_Perfiles.Entity = value;
					if ((value != null))
					{
						value.Seguridad_Perfiles_Opciones.Add(this);
						this._SPO_SPE_Id = value.SPE_Id;
					}
					else
					{
						this._SPO_SPE_Id = default(int);
					}
					this.SendPropertyChanged("Seguridad_Perfiles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tareas")]
	public partial class Tareas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TAR_Id;
		
		private int _TAR_SEC_Id;
		
		private string _TAR_Nombre;
		
		private int _TAR_TTA_Id;
		
		private System.Nullable<decimal> _TAR_ImporteUnitario;
		
		private System.Nullable<int> _TAR_UTA_Id;
		
		private int _TAR_TipoIva;
		
		private System.Nullable<int> _TAR_CFA_Id;
		
		private int _TAR_PR3_Id;
		
		private int _TAR_IN3_Id;
		
		private bool _TAR_Activo;
		
		private System.DateTime _FechaAlta;
		
		private System.DateTime _FechaModificacion;
		
		private int _PER_Id_Modificacion;
		
		private EntitySet<Tareas_Empresas> _Tareas_Empresas;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo> _Tareas_Empresas_LineasEsfuerzo;
		
		private EntitySet<Proveedores> _Proveedores;
		
		private EntitySet<Licencias> _Licencias;
		
		private EntitySet<Licencias> _Licencias1;
		
		private EntitySet<Licencias> _Licencias2;
		
		private EntitySet<Licencias> _Licencias3;
		
		private EntitySet<ContratosCAU> _ContratosCAU;
		
		private EntitySet<ContratosCAU> _ContratosCAU1;
		
		private EntitySet<ContratosCAU> _ContratosCAU2;
		
		private EntitySet<ContratosCAU> _ContratosCAU3;
		
		private EntitySet<Proyectos> _Proyectos;
		
		private EntitySet<Aplicaciones> _Aplicaciones;
		
		private EntitySet<Aplicaciones_Modulos> _Aplicaciones_Modulos;
		
		private EntitySet<LicenciasAnuales> _LicenciasAnuales;
		
		private EntityRef<Personas> _Personas;
		
		private EntityRef<Secciones> _Secciones;
		
		private EntityRef<TiposTarea> _TiposTarea;
		
		private EntityRef<ProductosD365> _ProductosD365;
		
		private EntityRef<ItemNumbersD365> _ItemNumbersD365;
		
		private EntityRef<UnidadesTarea> _UnidadesTarea;
		
		private EntityRef<ConceptosFacturacion> _ConceptosFacturacion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTAR_IdChanging(int value);
    partial void OnTAR_IdChanged();
    partial void OnTAR_SEC_IdChanging(int value);
    partial void OnTAR_SEC_IdChanged();
    partial void OnTAR_NombreChanging(string value);
    partial void OnTAR_NombreChanged();
    partial void OnTAR_TTA_IdChanging(int value);
    partial void OnTAR_TTA_IdChanged();
    partial void OnTAR_ImporteUnitarioChanging(System.Nullable<decimal> value);
    partial void OnTAR_ImporteUnitarioChanged();
    partial void OnTAR_UTA_IdChanging(System.Nullable<int> value);
    partial void OnTAR_UTA_IdChanged();
    partial void OnTAR_TipoIvaChanging(int value);
    partial void OnTAR_TipoIvaChanged();
    partial void OnTAR_CFA_IdChanging(System.Nullable<int> value);
    partial void OnTAR_CFA_IdChanged();
    partial void OnTAR_PR3_IdChanging(int value);
    partial void OnTAR_PR3_IdChanged();
    partial void OnTAR_IN3_IdChanging(int value);
    partial void OnTAR_IN3_IdChanged();
    partial void OnTAR_ActivoChanging(bool value);
    partial void OnTAR_ActivoChanged();
    partial void OnFechaAltaChanging(System.DateTime value);
    partial void OnFechaAltaChanged();
    partial void OnFechaModificacionChanging(System.DateTime value);
    partial void OnFechaModificacionChanged();
    partial void OnPER_Id_ModificacionChanging(int value);
    partial void OnPER_Id_ModificacionChanged();
    #endregion
		
		public Tareas()
		{
			this._Tareas_Empresas = new EntitySet<Tareas_Empresas>(new Action<Tareas_Empresas>(this.attach_Tareas_Empresas), new Action<Tareas_Empresas>(this.detach_Tareas_Empresas));
			this._Tareas_Empresas_LineasEsfuerzo = new EntitySet<Tareas_Empresas_LineasEsfuerzo>(new Action<Tareas_Empresas_LineasEsfuerzo>(this.attach_Tareas_Empresas_LineasEsfuerzo), new Action<Tareas_Empresas_LineasEsfuerzo>(this.detach_Tareas_Empresas_LineasEsfuerzo));
			this._Proveedores = new EntitySet<Proveedores>(new Action<Proveedores>(this.attach_Proveedores), new Action<Proveedores>(this.detach_Proveedores));
			this._Licencias = new EntitySet<Licencias>(new Action<Licencias>(this.attach_Licencias), new Action<Licencias>(this.detach_Licencias));
			this._Licencias1 = new EntitySet<Licencias>(new Action<Licencias>(this.attach_Licencias1), new Action<Licencias>(this.detach_Licencias1));
			this._Licencias2 = new EntitySet<Licencias>(new Action<Licencias>(this.attach_Licencias2), new Action<Licencias>(this.detach_Licencias2));
			this._Licencias3 = new EntitySet<Licencias>(new Action<Licencias>(this.attach_Licencias3), new Action<Licencias>(this.detach_Licencias3));
			this._ContratosCAU = new EntitySet<ContratosCAU>(new Action<ContratosCAU>(this.attach_ContratosCAU), new Action<ContratosCAU>(this.detach_ContratosCAU));
			this._ContratosCAU1 = new EntitySet<ContratosCAU>(new Action<ContratosCAU>(this.attach_ContratosCAU1), new Action<ContratosCAU>(this.detach_ContratosCAU1));
			this._ContratosCAU2 = new EntitySet<ContratosCAU>(new Action<ContratosCAU>(this.attach_ContratosCAU2), new Action<ContratosCAU>(this.detach_ContratosCAU2));
			this._ContratosCAU3 = new EntitySet<ContratosCAU>(new Action<ContratosCAU>(this.attach_ContratosCAU3), new Action<ContratosCAU>(this.detach_ContratosCAU3));
			this._Proyectos = new EntitySet<Proyectos>(new Action<Proyectos>(this.attach_Proyectos), new Action<Proyectos>(this.detach_Proyectos));
			this._Aplicaciones = new EntitySet<Aplicaciones>(new Action<Aplicaciones>(this.attach_Aplicaciones), new Action<Aplicaciones>(this.detach_Aplicaciones));
			this._Aplicaciones_Modulos = new EntitySet<Aplicaciones_Modulos>(new Action<Aplicaciones_Modulos>(this.attach_Aplicaciones_Modulos), new Action<Aplicaciones_Modulos>(this.detach_Aplicaciones_Modulos));
			this._LicenciasAnuales = new EntitySet<LicenciasAnuales>(new Action<LicenciasAnuales>(this.attach_LicenciasAnuales), new Action<LicenciasAnuales>(this.detach_LicenciasAnuales));
			this._Personas = default(EntityRef<Personas>);
			this._Secciones = default(EntityRef<Secciones>);
			this._TiposTarea = default(EntityRef<TiposTarea>);
			this._ProductosD365 = default(EntityRef<ProductosD365>);
			this._ItemNumbersD365 = default(EntityRef<ItemNumbersD365>);
			this._UnidadesTarea = default(EntityRef<UnidadesTarea>);
			this._ConceptosFacturacion = default(EntityRef<ConceptosFacturacion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAR_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TAR_Id
		{
			get
			{
				return this._TAR_Id;
			}
			set
			{
				if ((this._TAR_Id != value))
				{
					this.OnTAR_IdChanging(value);
					this.SendPropertyChanging();
					this._TAR_Id = value;
					this.SendPropertyChanged("TAR_Id");
					this.OnTAR_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAR_SEC_Id", DbType="Int NOT NULL")]
		public int TAR_SEC_Id
		{
			get
			{
				return this._TAR_SEC_Id;
			}
			set
			{
				if ((this._TAR_SEC_Id != value))
				{
					if (this._Secciones.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTAR_SEC_IdChanging(value);
					this.SendPropertyChanging();
					this._TAR_SEC_Id = value;
					this.SendPropertyChanged("TAR_SEC_Id");
					this.OnTAR_SEC_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAR_Nombre", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TAR_Nombre
		{
			get
			{
				return this._TAR_Nombre;
			}
			set
			{
				if ((this._TAR_Nombre != value))
				{
					this.OnTAR_NombreChanging(value);
					this.SendPropertyChanging();
					this._TAR_Nombre = value;
					this.SendPropertyChanged("TAR_Nombre");
					this.OnTAR_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAR_TTA_Id", DbType="Int NOT NULL")]
		public int TAR_TTA_Id
		{
			get
			{
				return this._TAR_TTA_Id;
			}
			set
			{
				if ((this._TAR_TTA_Id != value))
				{
					if (this._TiposTarea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTAR_TTA_IdChanging(value);
					this.SendPropertyChanging();
					this._TAR_TTA_Id = value;
					this.SendPropertyChanged("TAR_TTA_Id");
					this.OnTAR_TTA_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAR_ImporteUnitario", DbType="Decimal(19,9)")]
		public System.Nullable<decimal> TAR_ImporteUnitario
		{
			get
			{
				return this._TAR_ImporteUnitario;
			}
			set
			{
				if ((this._TAR_ImporteUnitario != value))
				{
					this.OnTAR_ImporteUnitarioChanging(value);
					this.SendPropertyChanging();
					this._TAR_ImporteUnitario = value;
					this.SendPropertyChanged("TAR_ImporteUnitario");
					this.OnTAR_ImporteUnitarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAR_UTA_Id", DbType="Int")]
		public System.Nullable<int> TAR_UTA_Id
		{
			get
			{
				return this._TAR_UTA_Id;
			}
			set
			{
				if ((this._TAR_UTA_Id != value))
				{
					if (this._UnidadesTarea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTAR_UTA_IdChanging(value);
					this.SendPropertyChanging();
					this._TAR_UTA_Id = value;
					this.SendPropertyChanged("TAR_UTA_Id");
					this.OnTAR_UTA_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAR_TipoIva", DbType="Int NOT NULL")]
		public int TAR_TipoIva
		{
			get
			{
				return this._TAR_TipoIva;
			}
			set
			{
				if ((this._TAR_TipoIva != value))
				{
					this.OnTAR_TipoIvaChanging(value);
					this.SendPropertyChanging();
					this._TAR_TipoIva = value;
					this.SendPropertyChanged("TAR_TipoIva");
					this.OnTAR_TipoIvaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAR_CFA_Id", DbType="Int")]
		public System.Nullable<int> TAR_CFA_Id
		{
			get
			{
				return this._TAR_CFA_Id;
			}
			set
			{
				if ((this._TAR_CFA_Id != value))
				{
					if (this._ConceptosFacturacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTAR_CFA_IdChanging(value);
					this.SendPropertyChanging();
					this._TAR_CFA_Id = value;
					this.SendPropertyChanged("TAR_CFA_Id");
					this.OnTAR_CFA_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAR_PR3_Id", DbType="Int NOT NULL")]
		public int TAR_PR3_Id
		{
			get
			{
				return this._TAR_PR3_Id;
			}
			set
			{
				if ((this._TAR_PR3_Id != value))
				{
					if (this._ProductosD365.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTAR_PR3_IdChanging(value);
					this.SendPropertyChanging();
					this._TAR_PR3_Id = value;
					this.SendPropertyChanged("TAR_PR3_Id");
					this.OnTAR_PR3_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAR_IN3_Id", DbType="Int NOT NULL")]
		public int TAR_IN3_Id
		{
			get
			{
				return this._TAR_IN3_Id;
			}
			set
			{
				if ((this._TAR_IN3_Id != value))
				{
					if (this._ItemNumbersD365.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTAR_IN3_IdChanging(value);
					this.SendPropertyChanging();
					this._TAR_IN3_Id = value;
					this.SendPropertyChanged("TAR_IN3_Id");
					this.OnTAR_IN3_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAR_Activo", DbType="Bit NOT NULL")]
		public bool TAR_Activo
		{
			get
			{
				return this._TAR_Activo;
			}
			set
			{
				if ((this._TAR_Activo != value))
				{
					this.OnTAR_ActivoChanging(value);
					this.SendPropertyChanging();
					this._TAR_Activo = value;
					this.SendPropertyChanged("TAR_Activo");
					this.OnTAR_ActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAlta", DbType="DateTime NOT NULL")]
		public System.DateTime FechaAlta
		{
			get
			{
				return this._FechaAlta;
			}
			set
			{
				if ((this._FechaAlta != value))
				{
					this.OnFechaAltaChanging(value);
					this.SendPropertyChanging();
					this._FechaAlta = value;
					this.SendPropertyChanged("FechaAlta");
					this.OnFechaAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaModificacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaModificacion
		{
			get
			{
				return this._FechaModificacion;
			}
			set
			{
				if ((this._FechaModificacion != value))
				{
					this.OnFechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._FechaModificacion = value;
					this.SendPropertyChanged("FechaModificacion");
					this.OnFechaModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Id_Modificacion", DbType="Int NOT NULL")]
		public int PER_Id_Modificacion
		{
			get
			{
				return this._PER_Id_Modificacion;
			}
			set
			{
				if ((this._PER_Id_Modificacion != value))
				{
					if (this._Personas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPER_Id_ModificacionChanging(value);
					this.SendPropertyChanging();
					this._PER_Id_Modificacion = value;
					this.SendPropertyChanged("PER_Id_Modificacion");
					this.OnPER_Id_ModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Tareas_Empresas", Storage="_Tareas_Empresas", ThisKey="TAR_Id", OtherKey="TEM_TAR_Id")]
		public EntitySet<Tareas_Empresas> Tareas_Empresas
		{
			get
			{
				return this._Tareas_Empresas;
			}
			set
			{
				this._Tareas_Empresas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Tareas_Empresas_LineasEsfuerzo", Storage="_Tareas_Empresas_LineasEsfuerzo", ThisKey="TAR_Id", OtherKey="TLE_TAR_Id")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo> Tareas_Empresas_LineasEsfuerzo
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Proveedores", Storage="_Proveedores", ThisKey="TAR_Id", OtherKey="PRV_TAR_Id_Soporte")]
		public EntitySet<Proveedores> Proveedores
		{
			get
			{
				return this._Proveedores;
			}
			set
			{
				this._Proveedores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Licencias", Storage="_Licencias", ThisKey="TAR_Id", OtherKey="LIC_TAR_Id_SW")]
		public EntitySet<Licencias> Licencias
		{
			get
			{
				return this._Licencias;
			}
			set
			{
				this._Licencias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Licencias1", Storage="_Licencias1", ThisKey="TAR_Id", OtherKey="LIC_TAR_Id_SW")]
		public EntitySet<Licencias> Licencias1
		{
			get
			{
				return this._Licencias1;
			}
			set
			{
				this._Licencias1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Licencias2", Storage="_Licencias2", ThisKey="TAR_Id", OtherKey="LIC_TAR_Id_Antivirus")]
		public EntitySet<Licencias> Licencias2
		{
			get
			{
				return this._Licencias2;
			}
			set
			{
				this._Licencias2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Licencias3", Storage="_Licencias3", ThisKey="TAR_Id", OtherKey="LIC_TAR_Id_Backup")]
		public EntitySet<Licencias> Licencias3
		{
			get
			{
				return this._Licencias3;
			}
			set
			{
				this._Licencias3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_ContratosCAU", Storage="_ContratosCAU", ThisKey="TAR_Id", OtherKey="CCA_TAR_Id_F")]
		public EntitySet<ContratosCAU> ContratosCAU
		{
			get
			{
				return this._ContratosCAU;
			}
			set
			{
				this._ContratosCAU.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_ContratosCAU1", Storage="_ContratosCAU1", ThisKey="TAR_Id", OtherKey="CCA_TAR_Id_D")]
		public EntitySet<ContratosCAU> ContratosCAU1
		{
			get
			{
				return this._ContratosCAU1;
			}
			set
			{
				this._ContratosCAU1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_ContratosCAU2", Storage="_ContratosCAU2", ThisKey="TAR_Id", OtherKey="CCA_TAR_Id_G")]
		public EntitySet<ContratosCAU> ContratosCAU2
		{
			get
			{
				return this._ContratosCAU2;
			}
			set
			{
				this._ContratosCAU2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_ContratosCAU3", Storage="_ContratosCAU3", ThisKey="TAR_Id", OtherKey="CCA_TAR_Id_S")]
		public EntitySet<ContratosCAU> ContratosCAU3
		{
			get
			{
				return this._ContratosCAU3;
			}
			set
			{
				this._ContratosCAU3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Proyectos", Storage="_Proyectos", ThisKey="TAR_Id", OtherKey="PRY_TAR_Id")]
		public EntitySet<Proyectos> Proyectos
		{
			get
			{
				return this._Proyectos;
			}
			set
			{
				this._Proyectos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Aplicaciones", Storage="_Aplicaciones", ThisKey="TAR_Id", OtherKey="APP_TAR_Id")]
		public EntitySet<Aplicaciones> Aplicaciones
		{
			get
			{
				return this._Aplicaciones;
			}
			set
			{
				this._Aplicaciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Aplicaciones_Modulos", Storage="_Aplicaciones_Modulos", ThisKey="TAR_Id", OtherKey="APM_TAR_Id")]
		public EntitySet<Aplicaciones_Modulos> Aplicaciones_Modulos
		{
			get
			{
				return this._Aplicaciones_Modulos;
			}
			set
			{
				this._Aplicaciones_Modulos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_LicenciasAnuales", Storage="_LicenciasAnuales", ThisKey="TAR_Id", OtherKey="LAN_TAR_Id")]
		public EntitySet<LicenciasAnuales> LicenciasAnuales
		{
			get
			{
				return this._LicenciasAnuales;
			}
			set
			{
				this._LicenciasAnuales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Tareas", Storage="_Personas", ThisKey="PER_Id_Modificacion", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas Personas
		{
			get
			{
				return this._Personas.Entity;
			}
			set
			{
				Personas previousValue = this._Personas.Entity;
				if (((previousValue != value) 
							|| (this._Personas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personas.Entity = null;
						previousValue.Tareas.Remove(this);
					}
					this._Personas.Entity = value;
					if ((value != null))
					{
						value.Tareas.Add(this);
						this._PER_Id_Modificacion = value.PER_Id;
					}
					else
					{
						this._PER_Id_Modificacion = default(int);
					}
					this.SendPropertyChanged("Personas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Secciones_Tareas", Storage="_Secciones", ThisKey="TAR_SEC_Id", OtherKey="SEC_Id", IsForeignKey=true)]
		public Secciones Secciones
		{
			get
			{
				return this._Secciones.Entity;
			}
			set
			{
				Secciones previousValue = this._Secciones.Entity;
				if (((previousValue != value) 
							|| (this._Secciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Secciones.Entity = null;
						previousValue.Tareas.Remove(this);
					}
					this._Secciones.Entity = value;
					if ((value != null))
					{
						value.Tareas.Add(this);
						this._TAR_SEC_Id = value.SEC_Id;
					}
					else
					{
						this._TAR_SEC_Id = default(int);
					}
					this.SendPropertyChanged("Secciones");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TiposTarea_Tareas", Storage="_TiposTarea", ThisKey="TAR_TTA_Id", OtherKey="TTA_Id", IsForeignKey=true)]
		public TiposTarea TiposTarea
		{
			get
			{
				return this._TiposTarea.Entity;
			}
			set
			{
				TiposTarea previousValue = this._TiposTarea.Entity;
				if (((previousValue != value) 
							|| (this._TiposTarea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TiposTarea.Entity = null;
						previousValue.Tareas.Remove(this);
					}
					this._TiposTarea.Entity = value;
					if ((value != null))
					{
						value.Tareas.Add(this);
						this._TAR_TTA_Id = value.TTA_Id;
					}
					else
					{
						this._TAR_TTA_Id = default(int);
					}
					this.SendPropertyChanged("TiposTarea");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductosD365_Tareas", Storage="_ProductosD365", ThisKey="TAR_PR3_Id", OtherKey="PR3_Id", IsForeignKey=true)]
		public ProductosD365 ProductosD365
		{
			get
			{
				return this._ProductosD365.Entity;
			}
			set
			{
				ProductosD365 previousValue = this._ProductosD365.Entity;
				if (((previousValue != value) 
							|| (this._ProductosD365.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductosD365.Entity = null;
						previousValue.Tareas.Remove(this);
					}
					this._ProductosD365.Entity = value;
					if ((value != null))
					{
						value.Tareas.Add(this);
						this._TAR_PR3_Id = value.PR3_Id;
					}
					else
					{
						this._TAR_PR3_Id = default(int);
					}
					this.SendPropertyChanged("ProductosD365");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemNumbersD365_Tareas", Storage="_ItemNumbersD365", ThisKey="TAR_IN3_Id", OtherKey="IN3_Id", IsForeignKey=true)]
		public ItemNumbersD365 ItemNumbersD365
		{
			get
			{
				return this._ItemNumbersD365.Entity;
			}
			set
			{
				ItemNumbersD365 previousValue = this._ItemNumbersD365.Entity;
				if (((previousValue != value) 
							|| (this._ItemNumbersD365.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemNumbersD365.Entity = null;
						previousValue.Tareas.Remove(this);
					}
					this._ItemNumbersD365.Entity = value;
					if ((value != null))
					{
						value.Tareas.Add(this);
						this._TAR_IN3_Id = value.IN3_Id;
					}
					else
					{
						this._TAR_IN3_Id = default(int);
					}
					this.SendPropertyChanged("ItemNumbersD365");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnidadesTarea_Tareas", Storage="_UnidadesTarea", ThisKey="TAR_UTA_Id", OtherKey="UTA_Id", IsForeignKey=true)]
		public UnidadesTarea UnidadesTarea
		{
			get
			{
				return this._UnidadesTarea.Entity;
			}
			set
			{
				UnidadesTarea previousValue = this._UnidadesTarea.Entity;
				if (((previousValue != value) 
							|| (this._UnidadesTarea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnidadesTarea.Entity = null;
						previousValue.Tareas.Remove(this);
					}
					this._UnidadesTarea.Entity = value;
					if ((value != null))
					{
						value.Tareas.Add(this);
						this._TAR_UTA_Id = value.UTA_Id;
					}
					else
					{
						this._TAR_UTA_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("UnidadesTarea");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConceptosFacturacion_Tareas", Storage="_ConceptosFacturacion", ThisKey="TAR_CFA_Id", OtherKey="CFA_Id", IsForeignKey=true)]
		public ConceptosFacturacion ConceptosFacturacion
		{
			get
			{
				return this._ConceptosFacturacion.Entity;
			}
			set
			{
				ConceptosFacturacion previousValue = this._ConceptosFacturacion.Entity;
				if (((previousValue != value) 
							|| (this._ConceptosFacturacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConceptosFacturacion.Entity = null;
						previousValue.Tareas.Remove(this);
					}
					this._ConceptosFacturacion.Entity = value;
					if ((value != null))
					{
						value.Tareas.Add(this);
						this._TAR_CFA_Id = value.CFA_Id;
					}
					else
					{
						this._TAR_CFA_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("ConceptosFacturacion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tareas_Empresas(Tareas_Empresas entity)
		{
			this.SendPropertyChanging();
			entity.Tareas = this;
		}
		
		private void detach_Tareas_Empresas(Tareas_Empresas entity)
		{
			this.SendPropertyChanging();
			entity.Tareas = null;
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo(Tareas_Empresas_LineasEsfuerzo entity)
		{
			this.SendPropertyChanging();
			entity.Tareas = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo(Tareas_Empresas_LineasEsfuerzo entity)
		{
			this.SendPropertyChanging();
			entity.Tareas = null;
		}
		
		private void attach_Proveedores(Proveedores entity)
		{
			this.SendPropertyChanging();
			entity.Tareas = this;
		}
		
		private void detach_Proveedores(Proveedores entity)
		{
			this.SendPropertyChanging();
			entity.Tareas = null;
		}
		
		private void attach_Licencias(Licencias entity)
		{
			this.SendPropertyChanging();
			entity.Tareas = this;
		}
		
		private void detach_Licencias(Licencias entity)
		{
			this.SendPropertyChanging();
			entity.Tareas = null;
		}
		
		private void attach_Licencias1(Licencias entity)
		{
			this.SendPropertyChanging();
			entity.Tareas1 = this;
		}
		
		private void detach_Licencias1(Licencias entity)
		{
			this.SendPropertyChanging();
			entity.Tareas1 = null;
		}
		
		private void attach_Licencias2(Licencias entity)
		{
			this.SendPropertyChanging();
			entity.Tareas2 = this;
		}
		
		private void detach_Licencias2(Licencias entity)
		{
			this.SendPropertyChanging();
			entity.Tareas2 = null;
		}
		
		private void attach_Licencias3(Licencias entity)
		{
			this.SendPropertyChanging();
			entity.Tareas3 = this;
		}
		
		private void detach_Licencias3(Licencias entity)
		{
			this.SendPropertyChanging();
			entity.Tareas3 = null;
		}
		
		private void attach_ContratosCAU(ContratosCAU entity)
		{
			this.SendPropertyChanging();
			entity.Tareas = this;
		}
		
		private void detach_ContratosCAU(ContratosCAU entity)
		{
			this.SendPropertyChanging();
			entity.Tareas = null;
		}
		
		private void attach_ContratosCAU1(ContratosCAU entity)
		{
			this.SendPropertyChanging();
			entity.Tareas1 = this;
		}
		
		private void detach_ContratosCAU1(ContratosCAU entity)
		{
			this.SendPropertyChanging();
			entity.Tareas1 = null;
		}
		
		private void attach_ContratosCAU2(ContratosCAU entity)
		{
			this.SendPropertyChanging();
			entity.Tareas2 = this;
		}
		
		private void detach_ContratosCAU2(ContratosCAU entity)
		{
			this.SendPropertyChanging();
			entity.Tareas2 = null;
		}
		
		private void attach_ContratosCAU3(ContratosCAU entity)
		{
			this.SendPropertyChanging();
			entity.Tareas3 = this;
		}
		
		private void detach_ContratosCAU3(ContratosCAU entity)
		{
			this.SendPropertyChanging();
			entity.Tareas3 = null;
		}
		
		private void attach_Proyectos(Proyectos entity)
		{
			this.SendPropertyChanging();
			entity.Tareas = this;
		}
		
		private void detach_Proyectos(Proyectos entity)
		{
			this.SendPropertyChanging();
			entity.Tareas = null;
		}
		
		private void attach_Aplicaciones(Aplicaciones entity)
		{
			this.SendPropertyChanging();
			entity.Tareas = this;
		}
		
		private void detach_Aplicaciones(Aplicaciones entity)
		{
			this.SendPropertyChanging();
			entity.Tareas = null;
		}
		
		private void attach_Aplicaciones_Modulos(Aplicaciones_Modulos entity)
		{
			this.SendPropertyChanging();
			entity.Tareas = this;
		}
		
		private void detach_Aplicaciones_Modulos(Aplicaciones_Modulos entity)
		{
			this.SendPropertyChanging();
			entity.Tareas = null;
		}
		
		private void attach_LicenciasAnuales(LicenciasAnuales entity)
		{
			this.SendPropertyChanging();
			entity.Tareas = this;
		}
		
		private void detach_LicenciasAnuales(LicenciasAnuales entity)
		{
			this.SendPropertyChanging();
			entity.Tareas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tareas_Empresas")]
	public partial class Tareas_Empresas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TEM_TAR_Id;
		
		private int _TEM_EMP_Id;
		
		private int _TEM_Anyo;
		
		private decimal _TEM_Elementos;
		
		private decimal _TEM_Presupuesto;
		
		private bool _TEM_Vigente;
		
		private int _TEM_ESO_Id;
		
		private System.Nullable<int> _TEM_PER_Id_Aprobador;
		
		private System.Nullable<System.DateTime> _TEM_FechaAprobacion;
		
		private string _TEM_ComentarioAprobacion;
		
		private System.DateTime _FechaAlta;
		
		private System.DateTime _FechaModificacion;
		
		private int _PER_Id_Modificacion;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo> _Tareas_Empresas_LineasEsfuerzo;
		
		private EntityRef<Empresas> _Empresas;
		
		private EntityRef<EstadosSolicitud> _EstadosSolicitud;
		
		private EntityRef<Personas> _Personas;
		
		private EntityRef<Personas> _Personas1;
		
		private EntityRef<Tareas> _Tareas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTEM_TAR_IdChanging(int value);
    partial void OnTEM_TAR_IdChanged();
    partial void OnTEM_EMP_IdChanging(int value);
    partial void OnTEM_EMP_IdChanged();
    partial void OnTEM_AnyoChanging(int value);
    partial void OnTEM_AnyoChanged();
    partial void OnTEM_ElementosChanging(decimal value);
    partial void OnTEM_ElementosChanged();
    partial void OnTEM_PresupuestoChanging(decimal value);
    partial void OnTEM_PresupuestoChanged();
    partial void OnTEM_VigenteChanging(bool value);
    partial void OnTEM_VigenteChanged();
    partial void OnTEM_ESO_IdChanging(int value);
    partial void OnTEM_ESO_IdChanged();
    partial void OnTEM_PER_Id_AprobadorChanging(System.Nullable<int> value);
    partial void OnTEM_PER_Id_AprobadorChanged();
    partial void OnTEM_FechaAprobacionChanging(System.Nullable<System.DateTime> value);
    partial void OnTEM_FechaAprobacionChanged();
    partial void OnTEM_ComentarioAprobacionChanging(string value);
    partial void OnTEM_ComentarioAprobacionChanged();
    partial void OnFechaAltaChanging(System.DateTime value);
    partial void OnFechaAltaChanged();
    partial void OnFechaModificacionChanging(System.DateTime value);
    partial void OnFechaModificacionChanged();
    partial void OnPER_Id_ModificacionChanging(int value);
    partial void OnPER_Id_ModificacionChanged();
    #endregion
		
		public Tareas_Empresas()
		{
			this._Tareas_Empresas_LineasEsfuerzo = new EntitySet<Tareas_Empresas_LineasEsfuerzo>(new Action<Tareas_Empresas_LineasEsfuerzo>(this.attach_Tareas_Empresas_LineasEsfuerzo), new Action<Tareas_Empresas_LineasEsfuerzo>(this.detach_Tareas_Empresas_LineasEsfuerzo));
			this._Empresas = default(EntityRef<Empresas>);
			this._EstadosSolicitud = default(EntityRef<EstadosSolicitud>);
			this._Personas = default(EntityRef<Personas>);
			this._Personas1 = default(EntityRef<Personas>);
			this._Tareas = default(EntityRef<Tareas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEM_TAR_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TEM_TAR_Id
		{
			get
			{
				return this._TEM_TAR_Id;
			}
			set
			{
				if ((this._TEM_TAR_Id != value))
				{
					if (this._Tareas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTEM_TAR_IdChanging(value);
					this.SendPropertyChanging();
					this._TEM_TAR_Id = value;
					this.SendPropertyChanged("TEM_TAR_Id");
					this.OnTEM_TAR_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEM_EMP_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TEM_EMP_Id
		{
			get
			{
				return this._TEM_EMP_Id;
			}
			set
			{
				if ((this._TEM_EMP_Id != value))
				{
					if (this._Empresas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTEM_EMP_IdChanging(value);
					this.SendPropertyChanging();
					this._TEM_EMP_Id = value;
					this.SendPropertyChanged("TEM_EMP_Id");
					this.OnTEM_EMP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEM_Anyo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TEM_Anyo
		{
			get
			{
				return this._TEM_Anyo;
			}
			set
			{
				if ((this._TEM_Anyo != value))
				{
					this.OnTEM_AnyoChanging(value);
					this.SendPropertyChanging();
					this._TEM_Anyo = value;
					this.SendPropertyChanged("TEM_Anyo");
					this.OnTEM_AnyoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEM_Elementos", DbType="Decimal(19,9) NOT NULL")]
		public decimal TEM_Elementos
		{
			get
			{
				return this._TEM_Elementos;
			}
			set
			{
				if ((this._TEM_Elementos != value))
				{
					this.OnTEM_ElementosChanging(value);
					this.SendPropertyChanging();
					this._TEM_Elementos = value;
					this.SendPropertyChanged("TEM_Elementos");
					this.OnTEM_ElementosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEM_Presupuesto", DbType="Decimal(19,9) NOT NULL")]
		public decimal TEM_Presupuesto
		{
			get
			{
				return this._TEM_Presupuesto;
			}
			set
			{
				if ((this._TEM_Presupuesto != value))
				{
					this.OnTEM_PresupuestoChanging(value);
					this.SendPropertyChanging();
					this._TEM_Presupuesto = value;
					this.SendPropertyChanged("TEM_Presupuesto");
					this.OnTEM_PresupuestoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEM_Vigente", DbType="Bit NOT NULL")]
		public bool TEM_Vigente
		{
			get
			{
				return this._TEM_Vigente;
			}
			set
			{
				if ((this._TEM_Vigente != value))
				{
					this.OnTEM_VigenteChanging(value);
					this.SendPropertyChanging();
					this._TEM_Vigente = value;
					this.SendPropertyChanged("TEM_Vigente");
					this.OnTEM_VigenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEM_ESO_Id", DbType="Int NOT NULL")]
		public int TEM_ESO_Id
		{
			get
			{
				return this._TEM_ESO_Id;
			}
			set
			{
				if ((this._TEM_ESO_Id != value))
				{
					if (this._EstadosSolicitud.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTEM_ESO_IdChanging(value);
					this.SendPropertyChanging();
					this._TEM_ESO_Id = value;
					this.SendPropertyChanged("TEM_ESO_Id");
					this.OnTEM_ESO_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEM_PER_Id_Aprobador", DbType="Int")]
		public System.Nullable<int> TEM_PER_Id_Aprobador
		{
			get
			{
				return this._TEM_PER_Id_Aprobador;
			}
			set
			{
				if ((this._TEM_PER_Id_Aprobador != value))
				{
					if (this._Personas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTEM_PER_Id_AprobadorChanging(value);
					this.SendPropertyChanging();
					this._TEM_PER_Id_Aprobador = value;
					this.SendPropertyChanged("TEM_PER_Id_Aprobador");
					this.OnTEM_PER_Id_AprobadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEM_FechaAprobacion", DbType="DateTime")]
		public System.Nullable<System.DateTime> TEM_FechaAprobacion
		{
			get
			{
				return this._TEM_FechaAprobacion;
			}
			set
			{
				if ((this._TEM_FechaAprobacion != value))
				{
					this.OnTEM_FechaAprobacionChanging(value);
					this.SendPropertyChanging();
					this._TEM_FechaAprobacion = value;
					this.SendPropertyChanged("TEM_FechaAprobacion");
					this.OnTEM_FechaAprobacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEM_ComentarioAprobacion", DbType="VarChar(MAX)")]
		public string TEM_ComentarioAprobacion
		{
			get
			{
				return this._TEM_ComentarioAprobacion;
			}
			set
			{
				if ((this._TEM_ComentarioAprobacion != value))
				{
					this.OnTEM_ComentarioAprobacionChanging(value);
					this.SendPropertyChanging();
					this._TEM_ComentarioAprobacion = value;
					this.SendPropertyChanged("TEM_ComentarioAprobacion");
					this.OnTEM_ComentarioAprobacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAlta", DbType="DateTime NOT NULL")]
		public System.DateTime FechaAlta
		{
			get
			{
				return this._FechaAlta;
			}
			set
			{
				if ((this._FechaAlta != value))
				{
					this.OnFechaAltaChanging(value);
					this.SendPropertyChanging();
					this._FechaAlta = value;
					this.SendPropertyChanged("FechaAlta");
					this.OnFechaAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaModificacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaModificacion
		{
			get
			{
				return this._FechaModificacion;
			}
			set
			{
				if ((this._FechaModificacion != value))
				{
					this.OnFechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._FechaModificacion = value;
					this.SendPropertyChanged("FechaModificacion");
					this.OnFechaModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Id_Modificacion", DbType="Int NOT NULL")]
		public int PER_Id_Modificacion
		{
			get
			{
				return this._PER_Id_Modificacion;
			}
			set
			{
				if ((this._PER_Id_Modificacion != value))
				{
					if (this._Personas1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPER_Id_ModificacionChanging(value);
					this.SendPropertyChanging();
					this._PER_Id_Modificacion = value;
					this.SendPropertyChanged("PER_Id_Modificacion");
					this.OnPER_Id_ModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Empresas_Tareas_Empresas_LineasEsfuerzo", Storage="_Tareas_Empresas_LineasEsfuerzo", ThisKey="TEM_TAR_Id,TEM_EMP_Id,TEM_Anyo", OtherKey="TLE_TAR_Id,TLE_EMP_Id,TLE_Anyo")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo> Tareas_Empresas_LineasEsfuerzo
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Tareas_Empresas", Storage="_Empresas", ThisKey="TEM_EMP_Id", OtherKey="EMP_Id", IsForeignKey=true)]
		public Empresas Empresas
		{
			get
			{
				return this._Empresas.Entity;
			}
			set
			{
				Empresas previousValue = this._Empresas.Entity;
				if (((previousValue != value) 
							|| (this._Empresas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresas.Entity = null;
						previousValue.Tareas_Empresas.Remove(this);
					}
					this._Empresas.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas.Add(this);
						this._TEM_EMP_Id = value.EMP_Id;
					}
					else
					{
						this._TEM_EMP_Id = default(int);
					}
					this.SendPropertyChanged("Empresas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstadosSolicitud_Tareas_Empresas", Storage="_EstadosSolicitud", ThisKey="TEM_ESO_Id", OtherKey="ESO_Id", IsForeignKey=true)]
		public EstadosSolicitud EstadosSolicitud
		{
			get
			{
				return this._EstadosSolicitud.Entity;
			}
			set
			{
				EstadosSolicitud previousValue = this._EstadosSolicitud.Entity;
				if (((previousValue != value) 
							|| (this._EstadosSolicitud.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstadosSolicitud.Entity = null;
						previousValue.Tareas_Empresas.Remove(this);
					}
					this._EstadosSolicitud.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas.Add(this);
						this._TEM_ESO_Id = value.ESO_Id;
					}
					else
					{
						this._TEM_ESO_Id = default(int);
					}
					this.SendPropertyChanged("EstadosSolicitud");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Tareas_Empresas", Storage="_Personas", ThisKey="TEM_PER_Id_Aprobador", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas Personas
		{
			get
			{
				return this._Personas.Entity;
			}
			set
			{
				Personas previousValue = this._Personas.Entity;
				if (((previousValue != value) 
							|| (this._Personas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personas.Entity = null;
						previousValue.Tareas_Empresas.Remove(this);
					}
					this._Personas.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas.Add(this);
						this._TEM_PER_Id_Aprobador = value.PER_Id;
					}
					else
					{
						this._TEM_PER_Id_Aprobador = default(Nullable<int>);
					}
					this.SendPropertyChanged("Personas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Tareas_Empresas1", Storage="_Personas1", ThisKey="PER_Id_Modificacion", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas Personas1
		{
			get
			{
				return this._Personas1.Entity;
			}
			set
			{
				Personas previousValue = this._Personas1.Entity;
				if (((previousValue != value) 
							|| (this._Personas1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personas1.Entity = null;
						previousValue.Tareas_Empresas1.Remove(this);
					}
					this._Personas1.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas1.Add(this);
						this._PER_Id_Modificacion = value.PER_Id;
					}
					else
					{
						this._PER_Id_Modificacion = default(int);
					}
					this.SendPropertyChanged("Personas1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Tareas_Empresas", Storage="_Tareas", ThisKey="TEM_TAR_Id", OtherKey="TAR_Id", IsForeignKey=true)]
		public Tareas Tareas
		{
			get
			{
				return this._Tareas.Entity;
			}
			set
			{
				Tareas previousValue = this._Tareas.Entity;
				if (((previousValue != value) 
							|| (this._Tareas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tareas.Entity = null;
						previousValue.Tareas_Empresas.Remove(this);
					}
					this._Tareas.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas.Add(this);
						this._TEM_TAR_Id = value.TAR_Id;
					}
					else
					{
						this._TEM_TAR_Id = default(int);
					}
					this.SendPropertyChanged("Tareas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo(Tareas_Empresas_LineasEsfuerzo entity)
		{
			this.SendPropertyChanging();
			entity.Tareas_Empresas = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo(Tareas_Empresas_LineasEsfuerzo entity)
		{
			this.SendPropertyChanging();
			entity.Tareas_Empresas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tareas_Empresas_LineasEsfuerzo")]
	public partial class Tareas_Empresas_LineasEsfuerzo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TLE_Id;
		
		private int _TLE_TAR_Id;
		
		private int _TLE_EMP_Id;
		
		private int _TLE_Anyo;
		
		private int _TLE_Mes;
		
		private System.Nullable<int> _TLE_FAP_Id;
		
		private decimal _TLE_Cantidad;
		
		private string _TLE_Descripcion;
		
		private int _TLE_ESO_Id;
		
		private System.Nullable<int> _TLE_PER_Id_Aprobador;
		
		private System.Nullable<System.DateTime> _TLE_FechaAprobacion;
		
		private string _TLE_ComentarioAprobacion;
		
		private System.DateTime _FechaAlta;
		
		private System.DateTime _FechaModificacion;
		
		private int _PER_Id_Modificacion;
		
		private bool _TLE_Inversion;
		
		private EntitySet<Facturas_Tareas_LineasEsfuerzo> _Facturas_Tareas_LineasEsfuerzo;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo_LicenciasMS> _Tareas_Empresas_LineasEsfuerzo_LicenciasMS;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo_Tickets> _Tareas_Empresas_LineasEsfuerzo_Tickets;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo_Partes> _Tareas_Empresas_LineasEsfuerzo_Partes;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo_Aplicaciones> _Tareas_Empresas_LineasEsfuerzo_Aplicaciones;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo_Modulos> _Tareas_Empresas_LineasEsfuerzo_Modulos;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo_Asuntos> _Tareas_Empresas_LineasEsfuerzo_Asuntos;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales> _Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales;
		
		private EntityRef<EstadosSolicitud> _EstadosSolicitud;
		
		private EntityRef<Personas> _PersonaAprobador;
		
		private EntityRef<Personas> _PersonaModificacion;
		
		private EntityRef<Tareas_Empresas> _Tareas_Empresas;
		
		private EntityRef<Tareas> _Tareas;
		
		private EntityRef<Empresas> _Empresas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTLE_IdChanging(int value);
    partial void OnTLE_IdChanged();
    partial void OnTLE_TAR_IdChanging(int value);
    partial void OnTLE_TAR_IdChanged();
    partial void OnTLE_EMP_IdChanging(int value);
    partial void OnTLE_EMP_IdChanged();
    partial void OnTLE_AnyoChanging(int value);
    partial void OnTLE_AnyoChanged();
    partial void OnTLE_MesChanging(int value);
    partial void OnTLE_MesChanged();
    partial void OnTLE_FAP_IdChanging(System.Nullable<int> value);
    partial void OnTLE_FAP_IdChanged();
    partial void OnTLE_CantidadChanging(decimal value);
    partial void OnTLE_CantidadChanged();
    partial void OnTLE_DescripcionChanging(string value);
    partial void OnTLE_DescripcionChanged();
    partial void OnTLE_ESO_IdChanging(int value);
    partial void OnTLE_ESO_IdChanged();
    partial void OnTLE_PER_Id_AprobadorChanging(System.Nullable<int> value);
    partial void OnTLE_PER_Id_AprobadorChanged();
    partial void OnTLE_FechaAprobacionChanging(System.Nullable<System.DateTime> value);
    partial void OnTLE_FechaAprobacionChanged();
    partial void OnTLE_ComentarioAprobacionChanging(string value);
    partial void OnTLE_ComentarioAprobacionChanged();
    partial void OnFechaAltaChanging(System.DateTime value);
    partial void OnFechaAltaChanged();
    partial void OnFechaModificacionChanging(System.DateTime value);
    partial void OnFechaModificacionChanged();
    partial void OnPER_Id_ModificacionChanging(int value);
    partial void OnPER_Id_ModificacionChanged();
    partial void OnTLE_InversionChanging(bool value);
    partial void OnTLE_InversionChanged();
    #endregion
		
		public Tareas_Empresas_LineasEsfuerzo()
		{
			this._Facturas_Tareas_LineasEsfuerzo = new EntitySet<Facturas_Tareas_LineasEsfuerzo>(new Action<Facturas_Tareas_LineasEsfuerzo>(this.attach_Facturas_Tareas_LineasEsfuerzo), new Action<Facturas_Tareas_LineasEsfuerzo>(this.detach_Facturas_Tareas_LineasEsfuerzo));
			this._Tareas_Empresas_LineasEsfuerzo_LicenciasMS = new EntitySet<Tareas_Empresas_LineasEsfuerzo_LicenciasMS>(new Action<Tareas_Empresas_LineasEsfuerzo_LicenciasMS>(this.attach_Tareas_Empresas_LineasEsfuerzo_LicenciasMS), new Action<Tareas_Empresas_LineasEsfuerzo_LicenciasMS>(this.detach_Tareas_Empresas_LineasEsfuerzo_LicenciasMS));
			this._Tareas_Empresas_LineasEsfuerzo_Tickets = new EntitySet<Tareas_Empresas_LineasEsfuerzo_Tickets>(new Action<Tareas_Empresas_LineasEsfuerzo_Tickets>(this.attach_Tareas_Empresas_LineasEsfuerzo_Tickets), new Action<Tareas_Empresas_LineasEsfuerzo_Tickets>(this.detach_Tareas_Empresas_LineasEsfuerzo_Tickets));
			this._Tareas_Empresas_LineasEsfuerzo_Partes = new EntitySet<Tareas_Empresas_LineasEsfuerzo_Partes>(new Action<Tareas_Empresas_LineasEsfuerzo_Partes>(this.attach_Tareas_Empresas_LineasEsfuerzo_Partes), new Action<Tareas_Empresas_LineasEsfuerzo_Partes>(this.detach_Tareas_Empresas_LineasEsfuerzo_Partes));
			this._Tareas_Empresas_LineasEsfuerzo_Aplicaciones = new EntitySet<Tareas_Empresas_LineasEsfuerzo_Aplicaciones>(new Action<Tareas_Empresas_LineasEsfuerzo_Aplicaciones>(this.attach_Tareas_Empresas_LineasEsfuerzo_Aplicaciones), new Action<Tareas_Empresas_LineasEsfuerzo_Aplicaciones>(this.detach_Tareas_Empresas_LineasEsfuerzo_Aplicaciones));
			this._Tareas_Empresas_LineasEsfuerzo_Modulos = new EntitySet<Tareas_Empresas_LineasEsfuerzo_Modulos>(new Action<Tareas_Empresas_LineasEsfuerzo_Modulos>(this.attach_Tareas_Empresas_LineasEsfuerzo_Modulos), new Action<Tareas_Empresas_LineasEsfuerzo_Modulos>(this.detach_Tareas_Empresas_LineasEsfuerzo_Modulos));
			this._Tareas_Empresas_LineasEsfuerzo_Asuntos = new EntitySet<Tareas_Empresas_LineasEsfuerzo_Asuntos>(new Action<Tareas_Empresas_LineasEsfuerzo_Asuntos>(this.attach_Tareas_Empresas_LineasEsfuerzo_Asuntos), new Action<Tareas_Empresas_LineasEsfuerzo_Asuntos>(this.detach_Tareas_Empresas_LineasEsfuerzo_Asuntos));
			this._Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales = new EntitySet<Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales>(new Action<Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales>(this.attach_Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales), new Action<Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales>(this.detach_Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales));
			this._EstadosSolicitud = default(EntityRef<EstadosSolicitud>);
			this._PersonaAprobador = default(EntityRef<Personas>);
			this._PersonaModificacion = default(EntityRef<Personas>);
			this._Tareas_Empresas = default(EntityRef<Tareas_Empresas>);
			this._Tareas = default(EntityRef<Tareas>);
			this._Empresas = default(EntityRef<Empresas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLE_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TLE_Id
		{
			get
			{
				return this._TLE_Id;
			}
			set
			{
				if ((this._TLE_Id != value))
				{
					this.OnTLE_IdChanging(value);
					this.SendPropertyChanging();
					this._TLE_Id = value;
					this.SendPropertyChanged("TLE_Id");
					this.OnTLE_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLE_TAR_Id", DbType="Int NOT NULL")]
		public int TLE_TAR_Id
		{
			get
			{
				return this._TLE_TAR_Id;
			}
			set
			{
				if ((this._TLE_TAR_Id != value))
				{
					if ((this._Tareas_Empresas.HasLoadedOrAssignedValue || this._Tareas.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTLE_TAR_IdChanging(value);
					this.SendPropertyChanging();
					this._TLE_TAR_Id = value;
					this.SendPropertyChanged("TLE_TAR_Id");
					this.OnTLE_TAR_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLE_EMP_Id", DbType="Int NOT NULL")]
		public int TLE_EMP_Id
		{
			get
			{
				return this._TLE_EMP_Id;
			}
			set
			{
				if ((this._TLE_EMP_Id != value))
				{
					if ((this._Tareas_Empresas.HasLoadedOrAssignedValue || this._Empresas.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTLE_EMP_IdChanging(value);
					this.SendPropertyChanging();
					this._TLE_EMP_Id = value;
					this.SendPropertyChanged("TLE_EMP_Id");
					this.OnTLE_EMP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLE_Anyo", DbType="Int NOT NULL")]
		public int TLE_Anyo
		{
			get
			{
				return this._TLE_Anyo;
			}
			set
			{
				if ((this._TLE_Anyo != value))
				{
					if (this._Tareas_Empresas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTLE_AnyoChanging(value);
					this.SendPropertyChanging();
					this._TLE_Anyo = value;
					this.SendPropertyChanged("TLE_Anyo");
					this.OnTLE_AnyoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLE_Mes", DbType="Int NOT NULL")]
		public int TLE_Mes
		{
			get
			{
				return this._TLE_Mes;
			}
			set
			{
				if ((this._TLE_Mes != value))
				{
					this.OnTLE_MesChanging(value);
					this.SendPropertyChanging();
					this._TLE_Mes = value;
					this.SendPropertyChanged("TLE_Mes");
					this.OnTLE_MesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLE_FAP_Id", DbType="Int")]
		public System.Nullable<int> TLE_FAP_Id
		{
			get
			{
				return this._TLE_FAP_Id;
			}
			set
			{
				if ((this._TLE_FAP_Id != value))
				{
					this.OnTLE_FAP_IdChanging(value);
					this.SendPropertyChanging();
					this._TLE_FAP_Id = value;
					this.SendPropertyChanged("TLE_FAP_Id");
					this.OnTLE_FAP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLE_Cantidad", DbType="Decimal(19,9) NOT NULL")]
		public decimal TLE_Cantidad
		{
			get
			{
				return this._TLE_Cantidad;
			}
			set
			{
				if ((this._TLE_Cantidad != value))
				{
					this.OnTLE_CantidadChanging(value);
					this.SendPropertyChanging();
					this._TLE_Cantidad = value;
					this.SendPropertyChanged("TLE_Cantidad");
					this.OnTLE_CantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLE_Descripcion", DbType="VarChar(MAX)")]
		public string TLE_Descripcion
		{
			get
			{
				return this._TLE_Descripcion;
			}
			set
			{
				if ((this._TLE_Descripcion != value))
				{
					this.OnTLE_DescripcionChanging(value);
					this.SendPropertyChanging();
					this._TLE_Descripcion = value;
					this.SendPropertyChanged("TLE_Descripcion");
					this.OnTLE_DescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLE_ESO_Id", DbType="Int NOT NULL")]
		public int TLE_ESO_Id
		{
			get
			{
				return this._TLE_ESO_Id;
			}
			set
			{
				if ((this._TLE_ESO_Id != value))
				{
					if (this._EstadosSolicitud.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTLE_ESO_IdChanging(value);
					this.SendPropertyChanging();
					this._TLE_ESO_Id = value;
					this.SendPropertyChanged("TLE_ESO_Id");
					this.OnTLE_ESO_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLE_PER_Id_Aprobador", DbType="Int")]
		public System.Nullable<int> TLE_PER_Id_Aprobador
		{
			get
			{
				return this._TLE_PER_Id_Aprobador;
			}
			set
			{
				if ((this._TLE_PER_Id_Aprobador != value))
				{
					if (this._PersonaAprobador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTLE_PER_Id_AprobadorChanging(value);
					this.SendPropertyChanging();
					this._TLE_PER_Id_Aprobador = value;
					this.SendPropertyChanged("TLE_PER_Id_Aprobador");
					this.OnTLE_PER_Id_AprobadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLE_FechaAprobacion", DbType="DateTime")]
		public System.Nullable<System.DateTime> TLE_FechaAprobacion
		{
			get
			{
				return this._TLE_FechaAprobacion;
			}
			set
			{
				if ((this._TLE_FechaAprobacion != value))
				{
					this.OnTLE_FechaAprobacionChanging(value);
					this.SendPropertyChanging();
					this._TLE_FechaAprobacion = value;
					this.SendPropertyChanged("TLE_FechaAprobacion");
					this.OnTLE_FechaAprobacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLE_ComentarioAprobacion", DbType="VarChar(MAX)")]
		public string TLE_ComentarioAprobacion
		{
			get
			{
				return this._TLE_ComentarioAprobacion;
			}
			set
			{
				if ((this._TLE_ComentarioAprobacion != value))
				{
					this.OnTLE_ComentarioAprobacionChanging(value);
					this.SendPropertyChanging();
					this._TLE_ComentarioAprobacion = value;
					this.SendPropertyChanged("TLE_ComentarioAprobacion");
					this.OnTLE_ComentarioAprobacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAlta", DbType="DateTime NOT NULL")]
		public System.DateTime FechaAlta
		{
			get
			{
				return this._FechaAlta;
			}
			set
			{
				if ((this._FechaAlta != value))
				{
					this.OnFechaAltaChanging(value);
					this.SendPropertyChanging();
					this._FechaAlta = value;
					this.SendPropertyChanged("FechaAlta");
					this.OnFechaAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaModificacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaModificacion
		{
			get
			{
				return this._FechaModificacion;
			}
			set
			{
				if ((this._FechaModificacion != value))
				{
					this.OnFechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._FechaModificacion = value;
					this.SendPropertyChanged("FechaModificacion");
					this.OnFechaModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Id_Modificacion", DbType="Int NOT NULL")]
		public int PER_Id_Modificacion
		{
			get
			{
				return this._PER_Id_Modificacion;
			}
			set
			{
				if ((this._PER_Id_Modificacion != value))
				{
					if (this._PersonaModificacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPER_Id_ModificacionChanging(value);
					this.SendPropertyChanging();
					this._PER_Id_Modificacion = value;
					this.SendPropertyChanged("PER_Id_Modificacion");
					this.OnPER_Id_ModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLE_Inversion")]
		public bool TLE_Inversion
		{
			get
			{
				return this._TLE_Inversion;
			}
			set
			{
				if ((this._TLE_Inversion != value))
				{
					this.OnTLE_InversionChanging(value);
					this.SendPropertyChanging();
					this._TLE_Inversion = value;
					this.SendPropertyChanged("TLE_Inversion");
					this.OnTLE_InversionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Empresas_LineasEsfuerzo_Facturas_Tareas_LineasEsfuerzo", Storage="_Facturas_Tareas_LineasEsfuerzo", ThisKey="TLE_Id", OtherKey="FLE_TLE_Id")]
		public EntitySet<Facturas_Tareas_LineasEsfuerzo> Facturas_Tareas_LineasEsfuerzo
		{
			get
			{
				return this._Facturas_Tareas_LineasEsfuerzo;
			}
			set
			{
				this._Facturas_Tareas_LineasEsfuerzo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Empresas_LineasEsfuerzo_Tareas_Empresas_LineasEsfuerzo_LicenciasMS", Storage="_Tareas_Empresas_LineasEsfuerzo_LicenciasMS", ThisKey="TLE_Id", OtherKey="TCL_TLE_Id")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo_LicenciasMS> Tareas_Empresas_LineasEsfuerzo_LicenciasMS
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo_LicenciasMS;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo_LicenciasMS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Empresas_LineasEsfuerzo_Tareas_Empresas_LineasEsfuerzo_Tickets", Storage="_Tareas_Empresas_LineasEsfuerzo_Tickets", ThisKey="TLE_Id", OtherKey="TCT_TLE_Id")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo_Tickets> Tareas_Empresas_LineasEsfuerzo_Tickets
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo_Tickets;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo_Tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Empresas_LineasEsfuerzo_Tareas_Empresas_LineasEsfuerzo_Partes", Storage="_Tareas_Empresas_LineasEsfuerzo_Partes", ThisKey="TLE_Id", OtherKey="TCP_TLE_Id")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo_Partes> Tareas_Empresas_LineasEsfuerzo_Partes
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo_Partes;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo_Partes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Empresas_LineasEsfuerzo_Tareas_Empresas_LineasEsfuerzo_Aplicaciones", Storage="_Tareas_Empresas_LineasEsfuerzo_Aplicaciones", ThisKey="TLE_Id", OtherKey="TCA_TLE_Id")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo_Aplicaciones> Tareas_Empresas_LineasEsfuerzo_Aplicaciones
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo_Aplicaciones;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo_Aplicaciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Empresas_LineasEsfuerzo_Tareas_Empresas_LineasEsfuerzo_Modulos", Storage="_Tareas_Empresas_LineasEsfuerzo_Modulos", ThisKey="TLE_Id", OtherKey="TCM_TLE_Id")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo_Modulos> Tareas_Empresas_LineasEsfuerzo_Modulos
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo_Modulos;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo_Modulos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Empresas_LineasEsfuerzo_Tareas_Empresas_LineasEsfuerzo_Asuntos", Storage="_Tareas_Empresas_LineasEsfuerzo_Asuntos", ThisKey="TLE_Id", OtherKey="TCA_TLE_Id")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo_Asuntos> Tareas_Empresas_LineasEsfuerzo_Asuntos
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo_Asuntos;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo_Asuntos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Empresas_LineasEsfuerzo_Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales", Storage="_Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales", ThisKey="TLE_Id", OtherKey="TCL_TLE_Id")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales> Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstadosSolicitud_Tareas_Empresas_LineasEsfuerzo", Storage="_EstadosSolicitud", ThisKey="TLE_ESO_Id", OtherKey="ESO_Id", IsForeignKey=true)]
		public EstadosSolicitud EstadosSolicitud
		{
			get
			{
				return this._EstadosSolicitud.Entity;
			}
			set
			{
				EstadosSolicitud previousValue = this._EstadosSolicitud.Entity;
				if (((previousValue != value) 
							|| (this._EstadosSolicitud.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstadosSolicitud.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo.Remove(this);
					}
					this._EstadosSolicitud.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo.Add(this);
						this._TLE_ESO_Id = value.ESO_Id;
					}
					else
					{
						this._TLE_ESO_Id = default(int);
					}
					this.SendPropertyChanged("EstadosSolicitud");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Tareas_Empresas_LineasEsfuerzo", Storage="_PersonaAprobador", ThisKey="TLE_PER_Id_Aprobador", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas PersonaAprobador
		{
			get
			{
				return this._PersonaAprobador.Entity;
			}
			set
			{
				Personas previousValue = this._PersonaAprobador.Entity;
				if (((previousValue != value) 
							|| (this._PersonaAprobador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonaAprobador.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo.Remove(this);
					}
					this._PersonaAprobador.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo.Add(this);
						this._TLE_PER_Id_Aprobador = value.PER_Id;
					}
					else
					{
						this._TLE_PER_Id_Aprobador = default(Nullable<int>);
					}
					this.SendPropertyChanged("PersonaAprobador");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Tareas_Empresas_LineasEsfuerzo1", Storage="_PersonaModificacion", ThisKey="PER_Id_Modificacion", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas PersonaModificacion
		{
			get
			{
				return this._PersonaModificacion.Entity;
			}
			set
			{
				Personas previousValue = this._PersonaModificacion.Entity;
				if (((previousValue != value) 
							|| (this._PersonaModificacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonaModificacion.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo1.Remove(this);
					}
					this._PersonaModificacion.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo1.Add(this);
						this._PER_Id_Modificacion = value.PER_Id;
					}
					else
					{
						this._PER_Id_Modificacion = default(int);
					}
					this.SendPropertyChanged("PersonaModificacion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Empresas_Tareas_Empresas_LineasEsfuerzo", Storage="_Tareas_Empresas", ThisKey="TLE_TAR_Id,TLE_EMP_Id,TLE_Anyo", OtherKey="TEM_TAR_Id,TEM_EMP_Id,TEM_Anyo", IsForeignKey=true)]
		public Tareas_Empresas Tareas_Empresas
		{
			get
			{
				return this._Tareas_Empresas.Entity;
			}
			set
			{
				Tareas_Empresas previousValue = this._Tareas_Empresas.Entity;
				if (((previousValue != value) 
							|| (this._Tareas_Empresas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tareas_Empresas.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo.Remove(this);
					}
					this._Tareas_Empresas.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo.Add(this);
						this._TLE_TAR_Id = value.TEM_TAR_Id;
						this._TLE_EMP_Id = value.TEM_EMP_Id;
						this._TLE_Anyo = value.TEM_Anyo;
					}
					else
					{
						this._TLE_TAR_Id = default(int);
						this._TLE_EMP_Id = default(int);
						this._TLE_Anyo = default(int);
					}
					this.SendPropertyChanged("Tareas_Empresas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Tareas_Empresas_LineasEsfuerzo", Storage="_Tareas", ThisKey="TLE_TAR_Id", OtherKey="TAR_Id", IsForeignKey=true)]
		public Tareas Tareas
		{
			get
			{
				return this._Tareas.Entity;
			}
			set
			{
				Tareas previousValue = this._Tareas.Entity;
				if (((previousValue != value) 
							|| (this._Tareas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tareas.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo.Remove(this);
					}
					this._Tareas.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo.Add(this);
						this._TLE_TAR_Id = value.TAR_Id;
					}
					else
					{
						this._TLE_TAR_Id = default(int);
					}
					this.SendPropertyChanged("Tareas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Tareas_Empresas_LineasEsfuerzo", Storage="_Empresas", ThisKey="TLE_EMP_Id", OtherKey="EMP_Id", IsForeignKey=true)]
		public Empresas Empresas
		{
			get
			{
				return this._Empresas.Entity;
			}
			set
			{
				Empresas previousValue = this._Empresas.Entity;
				if (((previousValue != value) 
							|| (this._Empresas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresas.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo.Remove(this);
					}
					this._Empresas.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo.Add(this);
						this._TLE_EMP_Id = value.EMP_Id;
					}
					else
					{
						this._TLE_EMP_Id = default(int);
					}
					this.SendPropertyChanged("Empresas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Facturas_Tareas_LineasEsfuerzo(Facturas_Tareas_LineasEsfuerzo entity)
		{
			this.SendPropertyChanging();
			entity.Tareas_Empresas_LineasEsfuerzo = this;
		}
		
		private void detach_Facturas_Tareas_LineasEsfuerzo(Facturas_Tareas_LineasEsfuerzo entity)
		{
			this.SendPropertyChanging();
			entity.Tareas_Empresas_LineasEsfuerzo = null;
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo_LicenciasMS(Tareas_Empresas_LineasEsfuerzo_LicenciasMS entity)
		{
			this.SendPropertyChanging();
			entity.Tareas_Empresas_LineasEsfuerzo = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo_LicenciasMS(Tareas_Empresas_LineasEsfuerzo_LicenciasMS entity)
		{
			this.SendPropertyChanging();
			entity.Tareas_Empresas_LineasEsfuerzo = null;
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo_Tickets(Tareas_Empresas_LineasEsfuerzo_Tickets entity)
		{
			this.SendPropertyChanging();
			entity.Tareas_Empresas_LineasEsfuerzo = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo_Tickets(Tareas_Empresas_LineasEsfuerzo_Tickets entity)
		{
			this.SendPropertyChanging();
			entity.Tareas_Empresas_LineasEsfuerzo = null;
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo_Partes(Tareas_Empresas_LineasEsfuerzo_Partes entity)
		{
			this.SendPropertyChanging();
			entity.Tareas_Empresas_LineasEsfuerzo = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo_Partes(Tareas_Empresas_LineasEsfuerzo_Partes entity)
		{
			this.SendPropertyChanging();
			entity.Tareas_Empresas_LineasEsfuerzo = null;
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo_Aplicaciones(Tareas_Empresas_LineasEsfuerzo_Aplicaciones entity)
		{
			this.SendPropertyChanging();
			entity.Tareas_Empresas_LineasEsfuerzo = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo_Aplicaciones(Tareas_Empresas_LineasEsfuerzo_Aplicaciones entity)
		{
			this.SendPropertyChanging();
			entity.Tareas_Empresas_LineasEsfuerzo = null;
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo_Modulos(Tareas_Empresas_LineasEsfuerzo_Modulos entity)
		{
			this.SendPropertyChanging();
			entity.Tareas_Empresas_LineasEsfuerzo = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo_Modulos(Tareas_Empresas_LineasEsfuerzo_Modulos entity)
		{
			this.SendPropertyChanging();
			entity.Tareas_Empresas_LineasEsfuerzo = null;
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo_Asuntos(Tareas_Empresas_LineasEsfuerzo_Asuntos entity)
		{
			this.SendPropertyChanging();
			entity.Tareas_Empresas_LineasEsfuerzo = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo_Asuntos(Tareas_Empresas_LineasEsfuerzo_Asuntos entity)
		{
			this.SendPropertyChanging();
			entity.Tareas_Empresas_LineasEsfuerzo = null;
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales(Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales entity)
		{
			this.SendPropertyChanging();
			entity.Tareas_Empresas_LineasEsfuerzo = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales(Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales entity)
		{
			this.SendPropertyChanging();
			entity.Tareas_Empresas_LineasEsfuerzo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TiposTarea")]
	public partial class TiposTarea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TTA_Id;
		
		private System.DateTime _FechaAlta;
		
		private System.DateTime _FechaModificacion;
		
		private int _PER_Id_Modificacion;
		
		private string _TTA_Nombre;
		
		private EntitySet<Tareas> _Tareas;
		
		private EntityRef<Personas> _Personas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTTA_IdChanging(int value);
    partial void OnTTA_IdChanged();
    partial void OnFechaAltaChanging(System.DateTime value);
    partial void OnFechaAltaChanged();
    partial void OnFechaModificacionChanging(System.DateTime value);
    partial void OnFechaModificacionChanged();
    partial void OnPER_Id_ModificacionChanging(int value);
    partial void OnPER_Id_ModificacionChanged();
    partial void OnTTA_NombreChanging(string value);
    partial void OnTTA_NombreChanged();
    #endregion
		
		public TiposTarea()
		{
			this._Tareas = new EntitySet<Tareas>(new Action<Tareas>(this.attach_Tareas), new Action<Tareas>(this.detach_Tareas));
			this._Personas = default(EntityRef<Personas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TTA_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TTA_Id
		{
			get
			{
				return this._TTA_Id;
			}
			set
			{
				if ((this._TTA_Id != value))
				{
					this.OnTTA_IdChanging(value);
					this.SendPropertyChanging();
					this._TTA_Id = value;
					this.SendPropertyChanged("TTA_Id");
					this.OnTTA_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAlta", DbType="DateTime NOT NULL")]
		public System.DateTime FechaAlta
		{
			get
			{
				return this._FechaAlta;
			}
			set
			{
				if ((this._FechaAlta != value))
				{
					this.OnFechaAltaChanging(value);
					this.SendPropertyChanging();
					this._FechaAlta = value;
					this.SendPropertyChanged("FechaAlta");
					this.OnFechaAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaModificacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaModificacion
		{
			get
			{
				return this._FechaModificacion;
			}
			set
			{
				if ((this._FechaModificacion != value))
				{
					this.OnFechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._FechaModificacion = value;
					this.SendPropertyChanged("FechaModificacion");
					this.OnFechaModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Id_Modificacion", DbType="Int NOT NULL")]
		public int PER_Id_Modificacion
		{
			get
			{
				return this._PER_Id_Modificacion;
			}
			set
			{
				if ((this._PER_Id_Modificacion != value))
				{
					if (this._Personas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPER_Id_ModificacionChanging(value);
					this.SendPropertyChanging();
					this._PER_Id_Modificacion = value;
					this.SendPropertyChanged("PER_Id_Modificacion");
					this.OnPER_Id_ModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TTA_Nombre")]
		public string TTA_Nombre
		{
			get
			{
				return this._TTA_Nombre;
			}
			set
			{
				if ((this._TTA_Nombre != value))
				{
					this.OnTTA_NombreChanging(value);
					this.SendPropertyChanging();
					this._TTA_Nombre = value;
					this.SendPropertyChanged("TTA_Nombre");
					this.OnTTA_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TiposTarea_Tareas", Storage="_Tareas", ThisKey="TTA_Id", OtherKey="TAR_TTA_Id")]
		public EntitySet<Tareas> Tareas
		{
			get
			{
				return this._Tareas;
			}
			set
			{
				this._Tareas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_TiposTarea", Storage="_Personas", ThisKey="PER_Id_Modificacion", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas Personas
		{
			get
			{
				return this._Personas.Entity;
			}
			set
			{
				Personas previousValue = this._Personas.Entity;
				if (((previousValue != value) 
							|| (this._Personas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personas.Entity = null;
						previousValue.TiposTarea.Remove(this);
					}
					this._Personas.Entity = value;
					if ((value != null))
					{
						value.TiposTarea.Add(this);
						this._PER_Id_Modificacion = value.PER_Id;
					}
					else
					{
						this._PER_Id_Modificacion = default(int);
					}
					this.SendPropertyChanged("Personas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tareas(Tareas entity)
		{
			this.SendPropertyChanging();
			entity.TiposTarea = this;
		}
		
		private void detach_Tareas(Tareas entity)
		{
			this.SendPropertyChanging();
			entity.TiposTarea = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UnidadesTarea")]
	public partial class UnidadesTarea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UTA_Id;
		
		private System.DateTime _FechaAlta;
		
		private System.DateTime _FechaModificacion;
		
		private int _PER_Id_Modificacion;
		
		private EntitySet<Tareas> _Tareas;
		
		private EntitySet<UnidadesTarea_Idioma> _UnidadesTarea_Idioma;
		
		private EntityRef<Personas> _Personas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUTA_IdChanging(int value);
    partial void OnUTA_IdChanged();
    partial void OnFechaAltaChanging(System.DateTime value);
    partial void OnFechaAltaChanged();
    partial void OnFechaModificacionChanging(System.DateTime value);
    partial void OnFechaModificacionChanged();
    partial void OnPER_Id_ModificacionChanging(int value);
    partial void OnPER_Id_ModificacionChanged();
    #endregion
		
		public UnidadesTarea()
		{
			this._Tareas = new EntitySet<Tareas>(new Action<Tareas>(this.attach_Tareas), new Action<Tareas>(this.detach_Tareas));
			this._UnidadesTarea_Idioma = new EntitySet<UnidadesTarea_Idioma>(new Action<UnidadesTarea_Idioma>(this.attach_UnidadesTarea_Idioma), new Action<UnidadesTarea_Idioma>(this.detach_UnidadesTarea_Idioma));
			this._Personas = default(EntityRef<Personas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UTA_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UTA_Id
		{
			get
			{
				return this._UTA_Id;
			}
			set
			{
				if ((this._UTA_Id != value))
				{
					this.OnUTA_IdChanging(value);
					this.SendPropertyChanging();
					this._UTA_Id = value;
					this.SendPropertyChanged("UTA_Id");
					this.OnUTA_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAlta", DbType="DateTime NOT NULL")]
		public System.DateTime FechaAlta
		{
			get
			{
				return this._FechaAlta;
			}
			set
			{
				if ((this._FechaAlta != value))
				{
					this.OnFechaAltaChanging(value);
					this.SendPropertyChanging();
					this._FechaAlta = value;
					this.SendPropertyChanged("FechaAlta");
					this.OnFechaAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaModificacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaModificacion
		{
			get
			{
				return this._FechaModificacion;
			}
			set
			{
				if ((this._FechaModificacion != value))
				{
					this.OnFechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._FechaModificacion = value;
					this.SendPropertyChanged("FechaModificacion");
					this.OnFechaModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Id_Modificacion", DbType="Int NOT NULL")]
		public int PER_Id_Modificacion
		{
			get
			{
				return this._PER_Id_Modificacion;
			}
			set
			{
				if ((this._PER_Id_Modificacion != value))
				{
					if (this._Personas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPER_Id_ModificacionChanging(value);
					this.SendPropertyChanging();
					this._PER_Id_Modificacion = value;
					this.SendPropertyChanged("PER_Id_Modificacion");
					this.OnPER_Id_ModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnidadesTarea_Tareas", Storage="_Tareas", ThisKey="UTA_Id", OtherKey="TAR_UTA_Id")]
		public EntitySet<Tareas> Tareas
		{
			get
			{
				return this._Tareas;
			}
			set
			{
				this._Tareas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnidadesTarea_UnidadesTarea_Idioma", Storage="_UnidadesTarea_Idioma", ThisKey="UTA_Id", OtherKey="UTI_UTA_Id")]
		public EntitySet<UnidadesTarea_Idioma> UnidadesTarea_Idioma
		{
			get
			{
				return this._UnidadesTarea_Idioma;
			}
			set
			{
				this._UnidadesTarea_Idioma.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_UnidadesTarea", Storage="_Personas", ThisKey="PER_Id_Modificacion", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas Personas
		{
			get
			{
				return this._Personas.Entity;
			}
			set
			{
				if ((this._Personas.Entity != value))
				{
					this.SendPropertyChanging();
					this._Personas.Entity = value;
					this.SendPropertyChanged("Personas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tareas(Tareas entity)
		{
			this.SendPropertyChanging();
			entity.UnidadesTarea = this;
		}
		
		private void detach_Tareas(Tareas entity)
		{
			this.SendPropertyChanging();
			entity.UnidadesTarea = null;
		}
		
		private void attach_UnidadesTarea_Idioma(UnidadesTarea_Idioma entity)
		{
			this.SendPropertyChanging();
			entity.UnidadesTarea = this;
		}
		
		private void detach_UnidadesTarea_Idioma(UnidadesTarea_Idioma entity)
		{
			this.SendPropertyChanging();
			entity.UnidadesTarea = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UnidadesTarea_Idioma")]
	public partial class UnidadesTarea_Idioma : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UTI_UTA_Id;
		
		private int _UTI_IDI_Id;
		
		private string _UTI_Nombre;
		
		private EntityRef<Idiomas> _Idiomas;
		
		private EntityRef<UnidadesTarea> _UnidadesTarea;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUTI_UTA_IdChanging(int value);
    partial void OnUTI_UTA_IdChanged();
    partial void OnUTI_IDI_IdChanging(int value);
    partial void OnUTI_IDI_IdChanged();
    partial void OnUTI_NombreChanging(string value);
    partial void OnUTI_NombreChanged();
    #endregion
		
		public UnidadesTarea_Idioma()
		{
			this._Idiomas = default(EntityRef<Idiomas>);
			this._UnidadesTarea = default(EntityRef<UnidadesTarea>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UTI_UTA_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UTI_UTA_Id
		{
			get
			{
				return this._UTI_UTA_Id;
			}
			set
			{
				if ((this._UTI_UTA_Id != value))
				{
					if (this._UnidadesTarea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUTI_UTA_IdChanging(value);
					this.SendPropertyChanging();
					this._UTI_UTA_Id = value;
					this.SendPropertyChanged("UTI_UTA_Id");
					this.OnUTI_UTA_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UTI_IDI_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UTI_IDI_Id
		{
			get
			{
				return this._UTI_IDI_Id;
			}
			set
			{
				if ((this._UTI_IDI_Id != value))
				{
					if (this._Idiomas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUTI_IDI_IdChanging(value);
					this.SendPropertyChanging();
					this._UTI_IDI_Id = value;
					this.SendPropertyChanged("UTI_IDI_Id");
					this.OnUTI_IDI_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UTI_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string UTI_Nombre
		{
			get
			{
				return this._UTI_Nombre;
			}
			set
			{
				if ((this._UTI_Nombre != value))
				{
					this.OnUTI_NombreChanging(value);
					this.SendPropertyChanging();
					this._UTI_Nombre = value;
					this.SendPropertyChanged("UTI_Nombre");
					this.OnUTI_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Idiomas_UnidadesTarea_Idioma", Storage="_Idiomas", ThisKey="UTI_IDI_Id", OtherKey="IDI_Id", IsForeignKey=true)]
		public Idiomas Idiomas
		{
			get
			{
				return this._Idiomas.Entity;
			}
			set
			{
				if ((this._Idiomas.Entity != value))
				{
					this.SendPropertyChanging();
					this._Idiomas.Entity = value;
					this.SendPropertyChanged("Idiomas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnidadesTarea_UnidadesTarea_Idioma", Storage="_UnidadesTarea", ThisKey="UTI_UTA_Id", OtherKey="UTA_Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UnidadesTarea UnidadesTarea
		{
			get
			{
				return this._UnidadesTarea.Entity;
			}
			set
			{
				UnidadesTarea previousValue = this._UnidadesTarea.Entity;
				if (((previousValue != value) 
							|| (this._UnidadesTarea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnidadesTarea.Entity = null;
						previousValue.UnidadesTarea_Idioma.Remove(this);
					}
					this._UnidadesTarea.Entity = value;
					if ((value != null))
					{
						value.UnidadesTarea_Idioma.Add(this);
						this._UTI_UTA_Id = value.UTA_Id;
					}
					else
					{
						this._UTI_UTA_Id = default(int);
					}
					this.SendPropertyChanged("UnidadesTarea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Facturas")]
	public partial class Facturas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FAC_Id;
		
		private int _FAC_EMP_Id;
		
		private System.Nullable<int> _FAC_EMP_Id_Facturar;
		
		private System.Nullable<int> _FAC_CFA_Id;
		
		private string _FAC_NumFactura;
		
		private string _FAC_Contacto;
		
		private string _FAC_Direccion;
		
		private System.Nullable<System.DateTime> _FAC_FechaEmision;
		
		private System.Nullable<System.DateTime> _FAC_FechaVencimiento;
		
		private string _FAC_Expediente;
		
		private string _FAC_Documento;
		
		private System.Data.Linq.Binary _FAC_DocumentoBytes;
		
		private System.Nullable<decimal> _FAC_IVATotal;
		
		private System.Nullable<decimal> _FAC_ImporteTotal;
		
		private int _FAC_ESO_Id;
		
		private bool _FAC_RequiereAprobacion;
		
		private System.Nullable<int> _FAC_PER_Id_Aprobador;
		
		private System.Nullable<System.DateTime> _FAC_FechaAprobacion;
		
		private string _FAC_ComentarioAprobacion;
		
		private System.Nullable<int> _FAC_ECO_Id;
		
		private bool _FAC_Pedido;
		
		private System.DateTime _FechaAlta;
		
		private System.DateTime _FechaModificacion;
		
		private int _PER_Id_Modificacion;
		
		private EntitySet<Facturas_Tareas_LineasEsfuerzo> _Facturas_Tareas_LineasEsfuerzo;
		
		private EntityRef<Empresas> _Empresas;
		
		private EntityRef<Empresas> _EmpresaFacturar;
		
		private EntityRef<ConceptosFacturacion> _ConceptosFacturacion;
		
		private EntityRef<EstadosSolicitud> _EstadosSolicitud;
		
		private EntityRef<EnlacesContables> _EnlacesContables;
		
		private EntityRef<Personas> _PersonaAprobador;
		
		private EntityRef<Personas> _PersonaModificacion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFAC_IdChanging(int value);
    partial void OnFAC_IdChanged();
    partial void OnFAC_EMP_IdChanging(int value);
    partial void OnFAC_EMP_IdChanged();
    partial void OnFAC_EMP_Id_FacturarChanging(System.Nullable<int> value);
    partial void OnFAC_EMP_Id_FacturarChanged();
    partial void OnFAC_CFA_IdChanging(System.Nullable<int> value);
    partial void OnFAC_CFA_IdChanged();
    partial void OnFAC_NumFacturaChanging(string value);
    partial void OnFAC_NumFacturaChanged();
    partial void OnFAC_ContactoChanging(string value);
    partial void OnFAC_ContactoChanged();
    partial void OnFAC_DireccionChanging(string value);
    partial void OnFAC_DireccionChanged();
    partial void OnFAC_FechaEmisionChanging(System.Nullable<System.DateTime> value);
    partial void OnFAC_FechaEmisionChanged();
    partial void OnFAC_FechaVencimientoChanging(System.Nullable<System.DateTime> value);
    partial void OnFAC_FechaVencimientoChanged();
    partial void OnFAC_ExpedienteChanging(string value);
    partial void OnFAC_ExpedienteChanged();
    partial void OnFAC_DocumentoChanging(string value);
    partial void OnFAC_DocumentoChanged();
    partial void OnFAC_DocumentoBytesChanging(System.Data.Linq.Binary value);
    partial void OnFAC_DocumentoBytesChanged();
    partial void OnFAC_IVATotalChanging(System.Nullable<decimal> value);
    partial void OnFAC_IVATotalChanged();
    partial void OnFAC_ImporteTotalChanging(System.Nullable<decimal> value);
    partial void OnFAC_ImporteTotalChanged();
    partial void OnFAC_ESO_IdChanging(int value);
    partial void OnFAC_ESO_IdChanged();
    partial void OnFAC_RequiereAprobacionChanging(bool value);
    partial void OnFAC_RequiereAprobacionChanged();
    partial void OnFAC_PER_Id_AprobadorChanging(System.Nullable<int> value);
    partial void OnFAC_PER_Id_AprobadorChanged();
    partial void OnFAC_FechaAprobacionChanging(System.Nullable<System.DateTime> value);
    partial void OnFAC_FechaAprobacionChanged();
    partial void OnFAC_ComentarioAprobacionChanging(string value);
    partial void OnFAC_ComentarioAprobacionChanged();
    partial void OnFAC_ECO_IdChanging(System.Nullable<int> value);
    partial void OnFAC_ECO_IdChanged();
    partial void OnFAC_PedidoChanging(bool value);
    partial void OnFAC_PedidoChanged();
    partial void OnFechaAltaChanging(System.DateTime value);
    partial void OnFechaAltaChanged();
    partial void OnFechaModificacionChanging(System.DateTime value);
    partial void OnFechaModificacionChanged();
    partial void OnPER_Id_ModificacionChanging(int value);
    partial void OnPER_Id_ModificacionChanged();
    #endregion
		
		public Facturas()
		{
			this._Facturas_Tareas_LineasEsfuerzo = new EntitySet<Facturas_Tareas_LineasEsfuerzo>(new Action<Facturas_Tareas_LineasEsfuerzo>(this.attach_Facturas_Tareas_LineasEsfuerzo), new Action<Facturas_Tareas_LineasEsfuerzo>(this.detach_Facturas_Tareas_LineasEsfuerzo));
			this._Empresas = default(EntityRef<Empresas>);
			this._EmpresaFacturar = default(EntityRef<Empresas>);
			this._ConceptosFacturacion = default(EntityRef<ConceptosFacturacion>);
			this._EstadosSolicitud = default(EntityRef<EstadosSolicitud>);
			this._EnlacesContables = default(EntityRef<EnlacesContables>);
			this._PersonaAprobador = default(EntityRef<Personas>);
			this._PersonaModificacion = default(EntityRef<Personas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAC_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FAC_Id
		{
			get
			{
				return this._FAC_Id;
			}
			set
			{
				if ((this._FAC_Id != value))
				{
					this.OnFAC_IdChanging(value);
					this.SendPropertyChanging();
					this._FAC_Id = value;
					this.SendPropertyChanged("FAC_Id");
					this.OnFAC_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAC_EMP_Id", DbType="Int NOT NULL")]
		public int FAC_EMP_Id
		{
			get
			{
				return this._FAC_EMP_Id;
			}
			set
			{
				if ((this._FAC_EMP_Id != value))
				{
					if (this._Empresas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFAC_EMP_IdChanging(value);
					this.SendPropertyChanging();
					this._FAC_EMP_Id = value;
					this.SendPropertyChanged("FAC_EMP_Id");
					this.OnFAC_EMP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAC_EMP_Id_Facturar", DbType="Int")]
		public System.Nullable<int> FAC_EMP_Id_Facturar
		{
			get
			{
				return this._FAC_EMP_Id_Facturar;
			}
			set
			{
				if ((this._FAC_EMP_Id_Facturar != value))
				{
					if (this._EmpresaFacturar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFAC_EMP_Id_FacturarChanging(value);
					this.SendPropertyChanging();
					this._FAC_EMP_Id_Facturar = value;
					this.SendPropertyChanged("FAC_EMP_Id_Facturar");
					this.OnFAC_EMP_Id_FacturarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAC_CFA_Id", DbType="Int")]
		public System.Nullable<int> FAC_CFA_Id
		{
			get
			{
				return this._FAC_CFA_Id;
			}
			set
			{
				if ((this._FAC_CFA_Id != value))
				{
					if (this._ConceptosFacturacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFAC_CFA_IdChanging(value);
					this.SendPropertyChanging();
					this._FAC_CFA_Id = value;
					this.SendPropertyChanged("FAC_CFA_Id");
					this.OnFAC_CFA_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAC_NumFactura", DbType="VarChar(50)")]
		public string FAC_NumFactura
		{
			get
			{
				return this._FAC_NumFactura;
			}
			set
			{
				if ((this._FAC_NumFactura != value))
				{
					this.OnFAC_NumFacturaChanging(value);
					this.SendPropertyChanging();
					this._FAC_NumFactura = value;
					this.SendPropertyChanged("FAC_NumFactura");
					this.OnFAC_NumFacturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAC_Contacto", DbType="VarChar(100)")]
		public string FAC_Contacto
		{
			get
			{
				return this._FAC_Contacto;
			}
			set
			{
				if ((this._FAC_Contacto != value))
				{
					this.OnFAC_ContactoChanging(value);
					this.SendPropertyChanging();
					this._FAC_Contacto = value;
					this.SendPropertyChanged("FAC_Contacto");
					this.OnFAC_ContactoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAC_Direccion", DbType="VarChar(MAX)")]
		public string FAC_Direccion
		{
			get
			{
				return this._FAC_Direccion;
			}
			set
			{
				if ((this._FAC_Direccion != value))
				{
					this.OnFAC_DireccionChanging(value);
					this.SendPropertyChanging();
					this._FAC_Direccion = value;
					this.SendPropertyChanged("FAC_Direccion");
					this.OnFAC_DireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAC_FechaEmision", DbType="DateTime")]
		public System.Nullable<System.DateTime> FAC_FechaEmision
		{
			get
			{
				return this._FAC_FechaEmision;
			}
			set
			{
				if ((this._FAC_FechaEmision != value))
				{
					this.OnFAC_FechaEmisionChanging(value);
					this.SendPropertyChanging();
					this._FAC_FechaEmision = value;
					this.SendPropertyChanged("FAC_FechaEmision");
					this.OnFAC_FechaEmisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAC_FechaVencimiento", DbType="DateTime")]
		public System.Nullable<System.DateTime> FAC_FechaVencimiento
		{
			get
			{
				return this._FAC_FechaVencimiento;
			}
			set
			{
				if ((this._FAC_FechaVencimiento != value))
				{
					this.OnFAC_FechaVencimientoChanging(value);
					this.SendPropertyChanging();
					this._FAC_FechaVencimiento = value;
					this.SendPropertyChanged("FAC_FechaVencimiento");
					this.OnFAC_FechaVencimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAC_Expediente", DbType="VarChar(100)")]
		public string FAC_Expediente
		{
			get
			{
				return this._FAC_Expediente;
			}
			set
			{
				if ((this._FAC_Expediente != value))
				{
					this.OnFAC_ExpedienteChanging(value);
					this.SendPropertyChanging();
					this._FAC_Expediente = value;
					this.SendPropertyChanged("FAC_Expediente");
					this.OnFAC_ExpedienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAC_Documento", DbType="VarChar(260)")]
		public string FAC_Documento
		{
			get
			{
				return this._FAC_Documento;
			}
			set
			{
				if ((this._FAC_Documento != value))
				{
					this.OnFAC_DocumentoChanging(value);
					this.SendPropertyChanging();
					this._FAC_Documento = value;
					this.SendPropertyChanged("FAC_Documento");
					this.OnFAC_DocumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAC_DocumentoBytes", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary FAC_DocumentoBytes
		{
			get
			{
				return this._FAC_DocumentoBytes;
			}
			set
			{
				if ((this._FAC_DocumentoBytes != value))
				{
					this.OnFAC_DocumentoBytesChanging(value);
					this.SendPropertyChanging();
					this._FAC_DocumentoBytes = value;
					this.SendPropertyChanged("FAC_DocumentoBytes");
					this.OnFAC_DocumentoBytesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAC_IVATotal", DbType="Decimal(19,9)")]
		public System.Nullable<decimal> FAC_IVATotal
		{
			get
			{
				return this._FAC_IVATotal;
			}
			set
			{
				if ((this._FAC_IVATotal != value))
				{
					this.OnFAC_IVATotalChanging(value);
					this.SendPropertyChanging();
					this._FAC_IVATotal = value;
					this.SendPropertyChanged("FAC_IVATotal");
					this.OnFAC_IVATotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAC_ImporteTotal", DbType="Decimal(19,9)")]
		public System.Nullable<decimal> FAC_ImporteTotal
		{
			get
			{
				return this._FAC_ImporteTotal;
			}
			set
			{
				if ((this._FAC_ImporteTotal != value))
				{
					this.OnFAC_ImporteTotalChanging(value);
					this.SendPropertyChanging();
					this._FAC_ImporteTotal = value;
					this.SendPropertyChanged("FAC_ImporteTotal");
					this.OnFAC_ImporteTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAC_ESO_Id", DbType="Int NOT NULL")]
		public int FAC_ESO_Id
		{
			get
			{
				return this._FAC_ESO_Id;
			}
			set
			{
				if ((this._FAC_ESO_Id != value))
				{
					if (this._EstadosSolicitud.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFAC_ESO_IdChanging(value);
					this.SendPropertyChanging();
					this._FAC_ESO_Id = value;
					this.SendPropertyChanged("FAC_ESO_Id");
					this.OnFAC_ESO_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAC_RequiereAprobacion", DbType="Bit NOT NULL")]
		public bool FAC_RequiereAprobacion
		{
			get
			{
				return this._FAC_RequiereAprobacion;
			}
			set
			{
				if ((this._FAC_RequiereAprobacion != value))
				{
					this.OnFAC_RequiereAprobacionChanging(value);
					this.SendPropertyChanging();
					this._FAC_RequiereAprobacion = value;
					this.SendPropertyChanged("FAC_RequiereAprobacion");
					this.OnFAC_RequiereAprobacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAC_PER_Id_Aprobador", DbType="Int")]
		public System.Nullable<int> FAC_PER_Id_Aprobador
		{
			get
			{
				return this._FAC_PER_Id_Aprobador;
			}
			set
			{
				if ((this._FAC_PER_Id_Aprobador != value))
				{
					if (this._PersonaAprobador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFAC_PER_Id_AprobadorChanging(value);
					this.SendPropertyChanging();
					this._FAC_PER_Id_Aprobador = value;
					this.SendPropertyChanged("FAC_PER_Id_Aprobador");
					this.OnFAC_PER_Id_AprobadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAC_FechaAprobacion", DbType="DateTime")]
		public System.Nullable<System.DateTime> FAC_FechaAprobacion
		{
			get
			{
				return this._FAC_FechaAprobacion;
			}
			set
			{
				if ((this._FAC_FechaAprobacion != value))
				{
					this.OnFAC_FechaAprobacionChanging(value);
					this.SendPropertyChanging();
					this._FAC_FechaAprobacion = value;
					this.SendPropertyChanged("FAC_FechaAprobacion");
					this.OnFAC_FechaAprobacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAC_ComentarioAprobacion", DbType="VarChar(MAX)")]
		public string FAC_ComentarioAprobacion
		{
			get
			{
				return this._FAC_ComentarioAprobacion;
			}
			set
			{
				if ((this._FAC_ComentarioAprobacion != value))
				{
					this.OnFAC_ComentarioAprobacionChanging(value);
					this.SendPropertyChanging();
					this._FAC_ComentarioAprobacion = value;
					this.SendPropertyChanged("FAC_ComentarioAprobacion");
					this.OnFAC_ComentarioAprobacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAC_ECO_Id", DbType="Int")]
		public System.Nullable<int> FAC_ECO_Id
		{
			get
			{
				return this._FAC_ECO_Id;
			}
			set
			{
				if ((this._FAC_ECO_Id != value))
				{
					if (this._EnlacesContables.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFAC_ECO_IdChanging(value);
					this.SendPropertyChanging();
					this._FAC_ECO_Id = value;
					this.SendPropertyChanged("FAC_ECO_Id");
					this.OnFAC_ECO_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAC_Pedido", DbType="Bit NOT NULL")]
		public bool FAC_Pedido
		{
			get
			{
				return this._FAC_Pedido;
			}
			set
			{
				if ((this._FAC_Pedido != value))
				{
					this.OnFAC_PedidoChanging(value);
					this.SendPropertyChanging();
					this._FAC_Pedido = value;
					this.SendPropertyChanged("FAC_Pedido");
					this.OnFAC_PedidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAlta", DbType="DateTime NOT NULL")]
		public System.DateTime FechaAlta
		{
			get
			{
				return this._FechaAlta;
			}
			set
			{
				if ((this._FechaAlta != value))
				{
					this.OnFechaAltaChanging(value);
					this.SendPropertyChanging();
					this._FechaAlta = value;
					this.SendPropertyChanged("FechaAlta");
					this.OnFechaAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaModificacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaModificacion
		{
			get
			{
				return this._FechaModificacion;
			}
			set
			{
				if ((this._FechaModificacion != value))
				{
					this.OnFechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._FechaModificacion = value;
					this.SendPropertyChanged("FechaModificacion");
					this.OnFechaModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Id_Modificacion", DbType="Int NOT NULL")]
		public int PER_Id_Modificacion
		{
			get
			{
				return this._PER_Id_Modificacion;
			}
			set
			{
				if ((this._PER_Id_Modificacion != value))
				{
					if (this._PersonaModificacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPER_Id_ModificacionChanging(value);
					this.SendPropertyChanging();
					this._PER_Id_Modificacion = value;
					this.SendPropertyChanged("PER_Id_Modificacion");
					this.OnPER_Id_ModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Facturas_Facturas_Tareas_LineasEsfuerzo", Storage="_Facturas_Tareas_LineasEsfuerzo", ThisKey="FAC_Id", OtherKey="FLE_FAC_Id")]
		public EntitySet<Facturas_Tareas_LineasEsfuerzo> Facturas_Tareas_LineasEsfuerzo
		{
			get
			{
				return this._Facturas_Tareas_LineasEsfuerzo;
			}
			set
			{
				this._Facturas_Tareas_LineasEsfuerzo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Facturas", Storage="_Empresas", ThisKey="FAC_EMP_Id", OtherKey="EMP_Id", IsForeignKey=true)]
		public Empresas Empresas
		{
			get
			{
				return this._Empresas.Entity;
			}
			set
			{
				Empresas previousValue = this._Empresas.Entity;
				if (((previousValue != value) 
							|| (this._Empresas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresas.Entity = null;
						previousValue.Facturas.Remove(this);
					}
					this._Empresas.Entity = value;
					if ((value != null))
					{
						value.Facturas.Add(this);
						this._FAC_EMP_Id = value.EMP_Id;
					}
					else
					{
						this._FAC_EMP_Id = default(int);
					}
					this.SendPropertyChanged("Empresas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Facturas1", Storage="_EmpresaFacturar", ThisKey="FAC_EMP_Id_Facturar", OtherKey="EMP_Id", IsForeignKey=true)]
		public Empresas EmpresaFacturar
		{
			get
			{
				return this._EmpresaFacturar.Entity;
			}
			set
			{
				Empresas previousValue = this._EmpresaFacturar.Entity;
				if (((previousValue != value) 
							|| (this._EmpresaFacturar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmpresaFacturar.Entity = null;
						previousValue.FacturasEmpreaFacturar.Remove(this);
					}
					this._EmpresaFacturar.Entity = value;
					if ((value != null))
					{
						value.FacturasEmpreaFacturar.Add(this);
						this._FAC_EMP_Id_Facturar = value.EMP_Id;
					}
					else
					{
						this._FAC_EMP_Id_Facturar = default(Nullable<int>);
					}
					this.SendPropertyChanged("EmpresaFacturar");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConceptosFacturacion_Facturas", Storage="_ConceptosFacturacion", ThisKey="FAC_CFA_Id", OtherKey="CFA_Id", IsForeignKey=true)]
		public ConceptosFacturacion ConceptosFacturacion
		{
			get
			{
				return this._ConceptosFacturacion.Entity;
			}
			set
			{
				ConceptosFacturacion previousValue = this._ConceptosFacturacion.Entity;
				if (((previousValue != value) 
							|| (this._ConceptosFacturacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConceptosFacturacion.Entity = null;
						previousValue.Facturas.Remove(this);
					}
					this._ConceptosFacturacion.Entity = value;
					if ((value != null))
					{
						value.Facturas.Add(this);
						this._FAC_CFA_Id = value.CFA_Id;
					}
					else
					{
						this._FAC_CFA_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("ConceptosFacturacion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstadosSolicitud_Facturas", Storage="_EstadosSolicitud", ThisKey="FAC_ESO_Id", OtherKey="ESO_Id", IsForeignKey=true)]
		public EstadosSolicitud EstadosSolicitud
		{
			get
			{
				return this._EstadosSolicitud.Entity;
			}
			set
			{
				EstadosSolicitud previousValue = this._EstadosSolicitud.Entity;
				if (((previousValue != value) 
							|| (this._EstadosSolicitud.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstadosSolicitud.Entity = null;
						previousValue.Facturas.Remove(this);
					}
					this._EstadosSolicitud.Entity = value;
					if ((value != null))
					{
						value.Facturas.Add(this);
						this._FAC_ESO_Id = value.ESO_Id;
					}
					else
					{
						this._FAC_ESO_Id = default(int);
					}
					this.SendPropertyChanged("EstadosSolicitud");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnlacesContables_Facturas", Storage="_EnlacesContables", ThisKey="FAC_ECO_Id", OtherKey="ECO_Id", IsForeignKey=true)]
		public EnlacesContables EnlacesContables
		{
			get
			{
				return this._EnlacesContables.Entity;
			}
			set
			{
				EnlacesContables previousValue = this._EnlacesContables.Entity;
				if (((previousValue != value) 
							|| (this._EnlacesContables.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EnlacesContables.Entity = null;
						previousValue.Facturas.Remove(this);
					}
					this._EnlacesContables.Entity = value;
					if ((value != null))
					{
						value.Facturas.Add(this);
						this._FAC_ECO_Id = value.ECO_Id;
					}
					else
					{
						this._FAC_ECO_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("EnlacesContables");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Facturas", Storage="_PersonaAprobador", ThisKey="FAC_PER_Id_Aprobador", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas PersonaAprobador
		{
			get
			{
				return this._PersonaAprobador.Entity;
			}
			set
			{
				Personas previousValue = this._PersonaAprobador.Entity;
				if (((previousValue != value) 
							|| (this._PersonaAprobador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonaAprobador.Entity = null;
						previousValue.Facturas.Remove(this);
					}
					this._PersonaAprobador.Entity = value;
					if ((value != null))
					{
						value.Facturas.Add(this);
						this._FAC_PER_Id_Aprobador = value.PER_Id;
					}
					else
					{
						this._FAC_PER_Id_Aprobador = default(Nullable<int>);
					}
					this.SendPropertyChanged("PersonaAprobador");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Facturas1", Storage="_PersonaModificacion", ThisKey="PER_Id_Modificacion", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas PersonaModificacion
		{
			get
			{
				return this._PersonaModificacion.Entity;
			}
			set
			{
				Personas previousValue = this._PersonaModificacion.Entity;
				if (((previousValue != value) 
							|| (this._PersonaModificacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonaModificacion.Entity = null;
						previousValue.Facturas1.Remove(this);
					}
					this._PersonaModificacion.Entity = value;
					if ((value != null))
					{
						value.Facturas1.Add(this);
						this._PER_Id_Modificacion = value.PER_Id;
					}
					else
					{
						this._PER_Id_Modificacion = default(int);
					}
					this.SendPropertyChanged("PersonaModificacion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Facturas_Tareas_LineasEsfuerzo(Facturas_Tareas_LineasEsfuerzo entity)
		{
			this.SendPropertyChanging();
			entity.Facturas = this;
		}
		
		private void detach_Facturas_Tareas_LineasEsfuerzo(Facturas_Tareas_LineasEsfuerzo entity)
		{
			this.SendPropertyChanging();
			entity.Facturas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EnlacesContables")]
	public partial class EnlacesContables : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ECO_Id;
		
		private System.DateTime _ECO_Fecha;
		
		private int _ECO_PER_Id;
		
		private string _ECO_Documento;
		
		private System.Data.Linq.Binary _ECO_DocumentoBytes;
		
		private System.DateTime _FechaAlta;
		
		private EntitySet<Facturas> _Facturas;
		
		private EntityRef<Personas> _Personas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnECO_IdChanging(int value);
    partial void OnECO_IdChanged();
    partial void OnECO_FechaChanging(System.DateTime value);
    partial void OnECO_FechaChanged();
    partial void OnECO_PER_IdChanging(int value);
    partial void OnECO_PER_IdChanged();
    partial void OnECO_DocumentoChanging(string value);
    partial void OnECO_DocumentoChanged();
    partial void OnECO_DocumentoBytesChanging(System.Data.Linq.Binary value);
    partial void OnECO_DocumentoBytesChanged();
    partial void OnFechaAltaChanging(System.DateTime value);
    partial void OnFechaAltaChanged();
    #endregion
		
		public EnlacesContables()
		{
			this._Facturas = new EntitySet<Facturas>(new Action<Facturas>(this.attach_Facturas), new Action<Facturas>(this.detach_Facturas));
			this._Personas = default(EntityRef<Personas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ECO_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ECO_Id
		{
			get
			{
				return this._ECO_Id;
			}
			set
			{
				if ((this._ECO_Id != value))
				{
					this.OnECO_IdChanging(value);
					this.SendPropertyChanging();
					this._ECO_Id = value;
					this.SendPropertyChanged("ECO_Id");
					this.OnECO_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ECO_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime ECO_Fecha
		{
			get
			{
				return this._ECO_Fecha;
			}
			set
			{
				if ((this._ECO_Fecha != value))
				{
					this.OnECO_FechaChanging(value);
					this.SendPropertyChanging();
					this._ECO_Fecha = value;
					this.SendPropertyChanged("ECO_Fecha");
					this.OnECO_FechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ECO_PER_Id", DbType="Int NOT NULL")]
		public int ECO_PER_Id
		{
			get
			{
				return this._ECO_PER_Id;
			}
			set
			{
				if ((this._ECO_PER_Id != value))
				{
					if (this._Personas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnECO_PER_IdChanging(value);
					this.SendPropertyChanging();
					this._ECO_PER_Id = value;
					this.SendPropertyChanged("ECO_PER_Id");
					this.OnECO_PER_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ECO_Documento", DbType="VarChar(260)")]
		public string ECO_Documento
		{
			get
			{
				return this._ECO_Documento;
			}
			set
			{
				if ((this._ECO_Documento != value))
				{
					this.OnECO_DocumentoChanging(value);
					this.SendPropertyChanging();
					this._ECO_Documento = value;
					this.SendPropertyChanged("ECO_Documento");
					this.OnECO_DocumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ECO_DocumentoBytes", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ECO_DocumentoBytes
		{
			get
			{
				return this._ECO_DocumentoBytes;
			}
			set
			{
				if ((this._ECO_DocumentoBytes != value))
				{
					this.OnECO_DocumentoBytesChanging(value);
					this.SendPropertyChanging();
					this._ECO_DocumentoBytes = value;
					this.SendPropertyChanged("ECO_DocumentoBytes");
					this.OnECO_DocumentoBytesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAlta", DbType="DateTime NOT NULL")]
		public System.DateTime FechaAlta
		{
			get
			{
				return this._FechaAlta;
			}
			set
			{
				if ((this._FechaAlta != value))
				{
					this.OnFechaAltaChanging(value);
					this.SendPropertyChanging();
					this._FechaAlta = value;
					this.SendPropertyChanged("FechaAlta");
					this.OnFechaAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnlacesContables_Facturas", Storage="_Facturas", ThisKey="ECO_Id", OtherKey="FAC_ECO_Id")]
		public EntitySet<Facturas> Facturas
		{
			get
			{
				return this._Facturas;
			}
			set
			{
				this._Facturas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_EnlacesContables", Storage="_Personas", ThisKey="ECO_PER_Id", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas Personas
		{
			get
			{
				return this._Personas.Entity;
			}
			set
			{
				Personas previousValue = this._Personas.Entity;
				if (((previousValue != value) 
							|| (this._Personas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personas.Entity = null;
						previousValue.EnlacesContables.Remove(this);
					}
					this._Personas.Entity = value;
					if ((value != null))
					{
						value.EnlacesContables.Add(this);
						this._ECO_PER_Id = value.PER_Id;
					}
					else
					{
						this._ECO_PER_Id = default(int);
					}
					this.SendPropertyChanged("Personas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Facturas(Facturas entity)
		{
			this.SendPropertyChanging();
			entity.EnlacesContables = this;
		}
		
		private void detach_Facturas(Facturas entity)
		{
			this.SendPropertyChanging();
			entity.EnlacesContables = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConceptosFacturacion")]
	public partial class ConceptosFacturacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CFA_Id;
		
		private System.Nullable<int> _CFA_DEP_Id;
		
		private string _CFA_CodigoTK;
		
		private bool _CFA_PorHoras;
		
		private bool _CFA_PorUnidades;
		
		private bool _CFA_CantidadFija;
		
		private System.DateTime _FechaAlta;
		
		private System.DateTime _FechaModificacion;
		
		private int _PER_Id_Modificacion;
		
		private EntitySet<Tareas> _Tareas;
		
		private EntitySet<Facturas> _Facturas;
		
		private EntitySet<ConceptosFacturacion_Idioma> _ConceptosFacturacion_Idioma;
		
		private EntityRef<Personas> _Personas;
		
		private EntityRef<Departamentos> _Departamentos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCFA_IdChanging(int value);
    partial void OnCFA_IdChanged();
    partial void OnCFA_DEP_IdChanging(System.Nullable<int> value);
    partial void OnCFA_DEP_IdChanged();
    partial void OnCFA_CodigoTKChanging(string value);
    partial void OnCFA_CodigoTKChanged();
    partial void OnCFA_PorHorasChanging(bool value);
    partial void OnCFA_PorHorasChanged();
    partial void OnCFA_PorUnidadesChanging(bool value);
    partial void OnCFA_PorUnidadesChanged();
    partial void OnCFA_CantidadFijaChanging(bool value);
    partial void OnCFA_CantidadFijaChanged();
    partial void OnFechaAltaChanging(System.DateTime value);
    partial void OnFechaAltaChanged();
    partial void OnFechaModificacionChanging(System.DateTime value);
    partial void OnFechaModificacionChanged();
    partial void OnPER_Id_ModificacionChanging(int value);
    partial void OnPER_Id_ModificacionChanged();
    #endregion
		
		public ConceptosFacturacion()
		{
			this._Tareas = new EntitySet<Tareas>(new Action<Tareas>(this.attach_Tareas), new Action<Tareas>(this.detach_Tareas));
			this._Facturas = new EntitySet<Facturas>(new Action<Facturas>(this.attach_Facturas), new Action<Facturas>(this.detach_Facturas));
			this._ConceptosFacturacion_Idioma = new EntitySet<ConceptosFacturacion_Idioma>(new Action<ConceptosFacturacion_Idioma>(this.attach_ConceptosFacturacion_Idioma), new Action<ConceptosFacturacion_Idioma>(this.detach_ConceptosFacturacion_Idioma));
			this._Personas = default(EntityRef<Personas>);
			this._Departamentos = default(EntityRef<Departamentos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CFA_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CFA_Id
		{
			get
			{
				return this._CFA_Id;
			}
			set
			{
				if ((this._CFA_Id != value))
				{
					this.OnCFA_IdChanging(value);
					this.SendPropertyChanging();
					this._CFA_Id = value;
					this.SendPropertyChanged("CFA_Id");
					this.OnCFA_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CFA_DEP_Id", DbType="Int")]
		public System.Nullable<int> CFA_DEP_Id
		{
			get
			{
				return this._CFA_DEP_Id;
			}
			set
			{
				if ((this._CFA_DEP_Id != value))
				{
					if (this._Departamentos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCFA_DEP_IdChanging(value);
					this.SendPropertyChanging();
					this._CFA_DEP_Id = value;
					this.SendPropertyChanged("CFA_DEP_Id");
					this.OnCFA_DEP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CFA_CodigoTK", DbType="VarChar(50)")]
		public string CFA_CodigoTK
		{
			get
			{
				return this._CFA_CodigoTK;
			}
			set
			{
				if ((this._CFA_CodigoTK != value))
				{
					this.OnCFA_CodigoTKChanging(value);
					this.SendPropertyChanging();
					this._CFA_CodigoTK = value;
					this.SendPropertyChanged("CFA_CodigoTK");
					this.OnCFA_CodigoTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CFA_PorHoras", DbType="Bit NOT NULL")]
		public bool CFA_PorHoras
		{
			get
			{
				return this._CFA_PorHoras;
			}
			set
			{
				if ((this._CFA_PorHoras != value))
				{
					this.OnCFA_PorHorasChanging(value);
					this.SendPropertyChanging();
					this._CFA_PorHoras = value;
					this.SendPropertyChanged("CFA_PorHoras");
					this.OnCFA_PorHorasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CFA_PorUnidades", DbType="Bit NOT NULL")]
		public bool CFA_PorUnidades
		{
			get
			{
				return this._CFA_PorUnidades;
			}
			set
			{
				if ((this._CFA_PorUnidades != value))
				{
					this.OnCFA_PorUnidadesChanging(value);
					this.SendPropertyChanging();
					this._CFA_PorUnidades = value;
					this.SendPropertyChanged("CFA_PorUnidades");
					this.OnCFA_PorUnidadesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CFA_CantidadFija", DbType="Bit NOT NULL")]
		public bool CFA_CantidadFija
		{
			get
			{
				return this._CFA_CantidadFija;
			}
			set
			{
				if ((this._CFA_CantidadFija != value))
				{
					this.OnCFA_CantidadFijaChanging(value);
					this.SendPropertyChanging();
					this._CFA_CantidadFija = value;
					this.SendPropertyChanged("CFA_CantidadFija");
					this.OnCFA_CantidadFijaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAlta", DbType="DateTime NOT NULL")]
		public System.DateTime FechaAlta
		{
			get
			{
				return this._FechaAlta;
			}
			set
			{
				if ((this._FechaAlta != value))
				{
					this.OnFechaAltaChanging(value);
					this.SendPropertyChanging();
					this._FechaAlta = value;
					this.SendPropertyChanged("FechaAlta");
					this.OnFechaAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaModificacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaModificacion
		{
			get
			{
				return this._FechaModificacion;
			}
			set
			{
				if ((this._FechaModificacion != value))
				{
					this.OnFechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._FechaModificacion = value;
					this.SendPropertyChanged("FechaModificacion");
					this.OnFechaModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Id_Modificacion", DbType="Int NOT NULL")]
		public int PER_Id_Modificacion
		{
			get
			{
				return this._PER_Id_Modificacion;
			}
			set
			{
				if ((this._PER_Id_Modificacion != value))
				{
					if (this._Personas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPER_Id_ModificacionChanging(value);
					this.SendPropertyChanging();
					this._PER_Id_Modificacion = value;
					this.SendPropertyChanged("PER_Id_Modificacion");
					this.OnPER_Id_ModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConceptosFacturacion_Tareas", Storage="_Tareas", ThisKey="CFA_Id", OtherKey="TAR_CFA_Id")]
		public EntitySet<Tareas> Tareas
		{
			get
			{
				return this._Tareas;
			}
			set
			{
				this._Tareas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConceptosFacturacion_Facturas", Storage="_Facturas", ThisKey="CFA_Id", OtherKey="FAC_CFA_Id")]
		public EntitySet<Facturas> Facturas
		{
			get
			{
				return this._Facturas;
			}
			set
			{
				this._Facturas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConceptosFacturacion_ConceptosFacturacion_Idioma", Storage="_ConceptosFacturacion_Idioma", ThisKey="CFA_Id", OtherKey="CFI_CFA_Id")]
		public EntitySet<ConceptosFacturacion_Idioma> ConceptosFacturacion_Idioma
		{
			get
			{
				return this._ConceptosFacturacion_Idioma;
			}
			set
			{
				this._ConceptosFacturacion_Idioma.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_ConceptosFacturacion", Storage="_Personas", ThisKey="PER_Id_Modificacion", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas Personas
		{
			get
			{
				return this._Personas.Entity;
			}
			set
			{
				if ((this._Personas.Entity != value))
				{
					this.SendPropertyChanging();
					this._Personas.Entity = value;
					this.SendPropertyChanged("Personas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departamentos_ConceptosFacturacion", Storage="_Departamentos", ThisKey="CFA_DEP_Id", OtherKey="DEP_Id", IsForeignKey=true)]
		public Departamentos Departamentos
		{
			get
			{
				return this._Departamentos.Entity;
			}
			set
			{
				Departamentos previousValue = this._Departamentos.Entity;
				if (((previousValue != value) 
							|| (this._Departamentos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Departamentos.Entity = null;
						previousValue.ConceptosFacturacion.Remove(this);
					}
					this._Departamentos.Entity = value;
					if ((value != null))
					{
						value.ConceptosFacturacion.Add(this);
						this._CFA_DEP_Id = value.DEP_Id;
					}
					else
					{
						this._CFA_DEP_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Departamentos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tareas(Tareas entity)
		{
			this.SendPropertyChanging();
			entity.ConceptosFacturacion = this;
		}
		
		private void detach_Tareas(Tareas entity)
		{
			this.SendPropertyChanging();
			entity.ConceptosFacturacion = null;
		}
		
		private void attach_Facturas(Facturas entity)
		{
			this.SendPropertyChanging();
			entity.ConceptosFacturacion = this;
		}
		
		private void detach_Facturas(Facturas entity)
		{
			this.SendPropertyChanging();
			entity.ConceptosFacturacion = null;
		}
		
		private void attach_ConceptosFacturacion_Idioma(ConceptosFacturacion_Idioma entity)
		{
			this.SendPropertyChanging();
			entity.ConceptosFacturacion = this;
		}
		
		private void detach_ConceptosFacturacion_Idioma(ConceptosFacturacion_Idioma entity)
		{
			this.SendPropertyChanging();
			entity.ConceptosFacturacion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConceptosFacturacion_Idioma")]
	public partial class ConceptosFacturacion_Idioma : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CFI_CFA_Id;
		
		private int _CFI_IDI_Id;
		
		private string _CFI_Nombre;
		
		private EntityRef<Idiomas> _Idiomas;
		
		private EntityRef<ConceptosFacturacion> _ConceptosFacturacion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCFI_CFA_IdChanging(int value);
    partial void OnCFI_CFA_IdChanged();
    partial void OnCFI_IDI_IdChanging(int value);
    partial void OnCFI_IDI_IdChanged();
    partial void OnCFI_NombreChanging(string value);
    partial void OnCFI_NombreChanged();
    #endregion
		
		public ConceptosFacturacion_Idioma()
		{
			this._Idiomas = default(EntityRef<Idiomas>);
			this._ConceptosFacturacion = default(EntityRef<ConceptosFacturacion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CFI_CFA_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CFI_CFA_Id
		{
			get
			{
				return this._CFI_CFA_Id;
			}
			set
			{
				if ((this._CFI_CFA_Id != value))
				{
					if (this._ConceptosFacturacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCFI_CFA_IdChanging(value);
					this.SendPropertyChanging();
					this._CFI_CFA_Id = value;
					this.SendPropertyChanged("CFI_CFA_Id");
					this.OnCFI_CFA_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CFI_IDI_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CFI_IDI_Id
		{
			get
			{
				return this._CFI_IDI_Id;
			}
			set
			{
				if ((this._CFI_IDI_Id != value))
				{
					if (this._Idiomas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCFI_IDI_IdChanging(value);
					this.SendPropertyChanging();
					this._CFI_IDI_Id = value;
					this.SendPropertyChanged("CFI_IDI_Id");
					this.OnCFI_IDI_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CFI_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string CFI_Nombre
		{
			get
			{
				return this._CFI_Nombre;
			}
			set
			{
				if ((this._CFI_Nombre != value))
				{
					this.OnCFI_NombreChanging(value);
					this.SendPropertyChanging();
					this._CFI_Nombre = value;
					this.SendPropertyChanged("CFI_Nombre");
					this.OnCFI_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Idiomas_ConceptosFacturacion_Idioma", Storage="_Idiomas", ThisKey="CFI_IDI_Id", OtherKey="IDI_Id", IsForeignKey=true)]
		public Idiomas Idiomas
		{
			get
			{
				return this._Idiomas.Entity;
			}
			set
			{
				if ((this._Idiomas.Entity != value))
				{
					this.SendPropertyChanging();
					this._Idiomas.Entity = value;
					this.SendPropertyChanged("Idiomas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConceptosFacturacion_ConceptosFacturacion_Idioma", Storage="_ConceptosFacturacion", ThisKey="CFI_CFA_Id", OtherKey="CFA_Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ConceptosFacturacion ConceptosFacturacion
		{
			get
			{
				return this._ConceptosFacturacion.Entity;
			}
			set
			{
				ConceptosFacturacion previousValue = this._ConceptosFacturacion.Entity;
				if (((previousValue != value) 
							|| (this._ConceptosFacturacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConceptosFacturacion.Entity = null;
						previousValue.ConceptosFacturacion_Idioma.Remove(this);
					}
					this._ConceptosFacturacion.Entity = value;
					if ((value != null))
					{
						value.ConceptosFacturacion_Idioma.Add(this);
						this._CFI_CFA_Id = value.CFA_Id;
					}
					else
					{
						this._CFI_CFA_Id = default(int);
					}
					this.SendPropertyChanged("ConceptosFacturacion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Configuraciones")]
	public partial class Configuraciones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CFG_Id;
		
		private string _CFG_Descripcion;
		
		private string _CFG_Valor;
		
		private System.DateTime _FechaAlta;
		
		private System.DateTime _FechaModificacion;
		
		private int _PER_Id_Modificacion;
		
		private EntityRef<Personas> _Personas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCFG_IdChanging(int value);
    partial void OnCFG_IdChanged();
    partial void OnCFG_DescripcionChanging(string value);
    partial void OnCFG_DescripcionChanged();
    partial void OnCFG_ValorChanging(string value);
    partial void OnCFG_ValorChanged();
    partial void OnFechaAltaChanging(System.DateTime value);
    partial void OnFechaAltaChanged();
    partial void OnFechaModificacionChanging(System.DateTime value);
    partial void OnFechaModificacionChanged();
    partial void OnPER_Id_ModificacionChanging(int value);
    partial void OnPER_Id_ModificacionChanged();
    #endregion
		
		public Configuraciones()
		{
			this._Personas = default(EntityRef<Personas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CFG_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CFG_Id
		{
			get
			{
				return this._CFG_Id;
			}
			set
			{
				if ((this._CFG_Id != value))
				{
					this.OnCFG_IdChanging(value);
					this.SendPropertyChanging();
					this._CFG_Id = value;
					this.SendPropertyChanged("CFG_Id");
					this.OnCFG_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CFG_Descripcion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CFG_Descripcion
		{
			get
			{
				return this._CFG_Descripcion;
			}
			set
			{
				if ((this._CFG_Descripcion != value))
				{
					this.OnCFG_DescripcionChanging(value);
					this.SendPropertyChanging();
					this._CFG_Descripcion = value;
					this.SendPropertyChanged("CFG_Descripcion");
					this.OnCFG_DescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CFG_Valor", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CFG_Valor
		{
			get
			{
				return this._CFG_Valor;
			}
			set
			{
				if ((this._CFG_Valor != value))
				{
					this.OnCFG_ValorChanging(value);
					this.SendPropertyChanging();
					this._CFG_Valor = value;
					this.SendPropertyChanged("CFG_Valor");
					this.OnCFG_ValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAlta", DbType="DateTime NOT NULL")]
		public System.DateTime FechaAlta
		{
			get
			{
				return this._FechaAlta;
			}
			set
			{
				if ((this._FechaAlta != value))
				{
					this.OnFechaAltaChanging(value);
					this.SendPropertyChanging();
					this._FechaAlta = value;
					this.SendPropertyChanged("FechaAlta");
					this.OnFechaAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaModificacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaModificacion
		{
			get
			{
				return this._FechaModificacion;
			}
			set
			{
				if ((this._FechaModificacion != value))
				{
					this.OnFechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._FechaModificacion = value;
					this.SendPropertyChanged("FechaModificacion");
					this.OnFechaModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Id_Modificacion", DbType="Int NOT NULL")]
		public int PER_Id_Modificacion
		{
			get
			{
				return this._PER_Id_Modificacion;
			}
			set
			{
				if ((this._PER_Id_Modificacion != value))
				{
					if (this._Personas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPER_Id_ModificacionChanging(value);
					this.SendPropertyChanging();
					this._PER_Id_Modificacion = value;
					this.SendPropertyChanged("PER_Id_Modificacion");
					this.OnPER_Id_ModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Configuraciones", Storage="_Personas", ThisKey="PER_Id_Modificacion", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas Personas
		{
			get
			{
				return this._Personas.Entity;
			}
			set
			{
				if ((this._Personas.Entity != value))
				{
					this.SendPropertyChanging();
					this._Personas.Entity = value;
					this.SendPropertyChanged("Personas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemNumbersD365")]
	public partial class ItemNumbersD365 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IN3_Id;
		
		private string _IN3_Nombre;
		
		private bool _IN3_Activo;
		
		private System.DateTime _FechaAlta;
		
		private System.DateTime _FechaModificacion;
		
		private int _PER_Id_Modificacion;
		
		private EntitySet<Tareas> _Tareas;
		
		private EntityRef<Personas> _Personas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIN3_IdChanging(int value);
    partial void OnIN3_IdChanged();
    partial void OnIN3_NombreChanging(string value);
    partial void OnIN3_NombreChanged();
    partial void OnIN3_ActivoChanging(bool value);
    partial void OnIN3_ActivoChanged();
    partial void OnFechaAltaChanging(System.DateTime value);
    partial void OnFechaAltaChanged();
    partial void OnFechaModificacionChanging(System.DateTime value);
    partial void OnFechaModificacionChanged();
    partial void OnPER_Id_ModificacionChanging(int value);
    partial void OnPER_Id_ModificacionChanged();
    #endregion
		
		public ItemNumbersD365()
		{
			this._Tareas = new EntitySet<Tareas>(new Action<Tareas>(this.attach_Tareas), new Action<Tareas>(this.detach_Tareas));
			this._Personas = default(EntityRef<Personas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN3_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IN3_Id
		{
			get
			{
				return this._IN3_Id;
			}
			set
			{
				if ((this._IN3_Id != value))
				{
					this.OnIN3_IdChanging(value);
					this.SendPropertyChanging();
					this._IN3_Id = value;
					this.SendPropertyChanged("IN3_Id");
					this.OnIN3_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN3_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string IN3_Nombre
		{
			get
			{
				return this._IN3_Nombre;
			}
			set
			{
				if ((this._IN3_Nombre != value))
				{
					this.OnIN3_NombreChanging(value);
					this.SendPropertyChanging();
					this._IN3_Nombre = value;
					this.SendPropertyChanged("IN3_Nombre");
					this.OnIN3_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IN3_Activo", DbType="Bit NOT NULL")]
		public bool IN3_Activo
		{
			get
			{
				return this._IN3_Activo;
			}
			set
			{
				if ((this._IN3_Activo != value))
				{
					this.OnIN3_ActivoChanging(value);
					this.SendPropertyChanging();
					this._IN3_Activo = value;
					this.SendPropertyChanged("IN3_Activo");
					this.OnIN3_ActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAlta", DbType="DateTime NOT NULL")]
		public System.DateTime FechaAlta
		{
			get
			{
				return this._FechaAlta;
			}
			set
			{
				if ((this._FechaAlta != value))
				{
					this.OnFechaAltaChanging(value);
					this.SendPropertyChanging();
					this._FechaAlta = value;
					this.SendPropertyChanged("FechaAlta");
					this.OnFechaAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaModificacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaModificacion
		{
			get
			{
				return this._FechaModificacion;
			}
			set
			{
				if ((this._FechaModificacion != value))
				{
					this.OnFechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._FechaModificacion = value;
					this.SendPropertyChanged("FechaModificacion");
					this.OnFechaModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Id_Modificacion", DbType="Int NOT NULL")]
		public int PER_Id_Modificacion
		{
			get
			{
				return this._PER_Id_Modificacion;
			}
			set
			{
				if ((this._PER_Id_Modificacion != value))
				{
					if (this._Personas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPER_Id_ModificacionChanging(value);
					this.SendPropertyChanging();
					this._PER_Id_Modificacion = value;
					this.SendPropertyChanged("PER_Id_Modificacion");
					this.OnPER_Id_ModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ItemNumbersD365_Tareas", Storage="_Tareas", ThisKey="IN3_Id", OtherKey="TAR_IN3_Id")]
		public EntitySet<Tareas> Tareas
		{
			get
			{
				return this._Tareas;
			}
			set
			{
				this._Tareas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_ItemNumbersD365", Storage="_Personas", ThisKey="PER_Id_Modificacion", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas Personas
		{
			get
			{
				return this._Personas.Entity;
			}
			set
			{
				Personas previousValue = this._Personas.Entity;
				if (((previousValue != value) 
							|| (this._Personas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personas.Entity = null;
						previousValue.ItemNumbersD365.Remove(this);
					}
					this._Personas.Entity = value;
					if ((value != null))
					{
						value.ItemNumbersD365.Add(this);
						this._PER_Id_Modificacion = value.PER_Id;
					}
					else
					{
						this._PER_Id_Modificacion = default(int);
					}
					this.SendPropertyChanged("Personas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tareas(Tareas entity)
		{
			this.SendPropertyChanging();
			entity.ItemNumbersD365 = this;
		}
		
		private void detach_Tareas(Tareas entity)
		{
			this.SendPropertyChanging();
			entity.ItemNumbersD365 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductosD365")]
	public partial class ProductosD365 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PR3_Id;
		
		private string _PR3_Nombre;
		
		private bool _PR3_Activo;
		
		private System.DateTime _FechaAlta;
		
		private System.DateTime _FechaModificacion;
		
		private int _PER_Id_Modificacion;
		
		private EntitySet<Tareas> _Tareas;
		
		private EntityRef<Personas> _Personas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPR3_IdChanging(int value);
    partial void OnPR3_IdChanged();
    partial void OnPR3_NombreChanging(string value);
    partial void OnPR3_NombreChanged();
    partial void OnPR3_ActivoChanging(bool value);
    partial void OnPR3_ActivoChanged();
    partial void OnFechaAltaChanging(System.DateTime value);
    partial void OnFechaAltaChanged();
    partial void OnFechaModificacionChanging(System.DateTime value);
    partial void OnFechaModificacionChanged();
    partial void OnPER_Id_ModificacionChanging(int value);
    partial void OnPER_Id_ModificacionChanged();
    #endregion
		
		public ProductosD365()
		{
			this._Tareas = new EntitySet<Tareas>(new Action<Tareas>(this.attach_Tareas), new Action<Tareas>(this.detach_Tareas));
			this._Personas = default(EntityRef<Personas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR3_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PR3_Id
		{
			get
			{
				return this._PR3_Id;
			}
			set
			{
				if ((this._PR3_Id != value))
				{
					this.OnPR3_IdChanging(value);
					this.SendPropertyChanging();
					this._PR3_Id = value;
					this.SendPropertyChanged("PR3_Id");
					this.OnPR3_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR3_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PR3_Nombre
		{
			get
			{
				return this._PR3_Nombre;
			}
			set
			{
				if ((this._PR3_Nombre != value))
				{
					this.OnPR3_NombreChanging(value);
					this.SendPropertyChanging();
					this._PR3_Nombre = value;
					this.SendPropertyChanged("PR3_Nombre");
					this.OnPR3_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR3_Activo", DbType="Bit NOT NULL")]
		public bool PR3_Activo
		{
			get
			{
				return this._PR3_Activo;
			}
			set
			{
				if ((this._PR3_Activo != value))
				{
					this.OnPR3_ActivoChanging(value);
					this.SendPropertyChanging();
					this._PR3_Activo = value;
					this.SendPropertyChanged("PR3_Activo");
					this.OnPR3_ActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAlta", DbType="DateTime NOT NULL")]
		public System.DateTime FechaAlta
		{
			get
			{
				return this._FechaAlta;
			}
			set
			{
				if ((this._FechaAlta != value))
				{
					this.OnFechaAltaChanging(value);
					this.SendPropertyChanging();
					this._FechaAlta = value;
					this.SendPropertyChanged("FechaAlta");
					this.OnFechaAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaModificacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaModificacion
		{
			get
			{
				return this._FechaModificacion;
			}
			set
			{
				if ((this._FechaModificacion != value))
				{
					this.OnFechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._FechaModificacion = value;
					this.SendPropertyChanged("FechaModificacion");
					this.OnFechaModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Id_Modificacion", DbType="Int NOT NULL")]
		public int PER_Id_Modificacion
		{
			get
			{
				return this._PER_Id_Modificacion;
			}
			set
			{
				if ((this._PER_Id_Modificacion != value))
				{
					if (this._Personas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPER_Id_ModificacionChanging(value);
					this.SendPropertyChanging();
					this._PER_Id_Modificacion = value;
					this.SendPropertyChanged("PER_Id_Modificacion");
					this.OnPER_Id_ModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductosD365_Tareas", Storage="_Tareas", ThisKey="PR3_Id", OtherKey="TAR_PR3_Id")]
		public EntitySet<Tareas> Tareas
		{
			get
			{
				return this._Tareas;
			}
			set
			{
				this._Tareas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_ProductosD365", Storage="_Personas", ThisKey="PER_Id_Modificacion", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas Personas
		{
			get
			{
				return this._Personas.Entity;
			}
			set
			{
				Personas previousValue = this._Personas.Entity;
				if (((previousValue != value) 
							|| (this._Personas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personas.Entity = null;
						previousValue.ProductosD365.Remove(this);
					}
					this._Personas.Entity = value;
					if ((value != null))
					{
						value.ProductosD365.Add(this);
						this._PER_Id_Modificacion = value.PER_Id;
					}
					else
					{
						this._PER_Id_Modificacion = default(int);
					}
					this.SendPropertyChanged("Personas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tareas(Tareas entity)
		{
			this.SendPropertyChanging();
			entity.ProductosD365 = this;
		}
		
		private void detach_Tareas(Tareas entity)
		{
			this.SendPropertyChanging();
			entity.ProductosD365 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Proveedores")]
	public partial class Proveedores : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PRV_Id;
		
		private string _PRV_CIF;
		
		private string _PRV_Nombre;
		
		private bool _PRV_Activo;
		
		private System.DateTime _FechaAlta;
		
		private System.DateTime _FechaModificacion;
		
		private int _PER_Id_Modificacion;
		
		private System.Nullable<int> _PRV_TAR_Id_Soporte;
		
		private System.Nullable<int> _PRV_PlantillaExcel;
		
		private EntitySet<Proveedores_ContratosSoporte> _Proveedores_ContratosSoporte;
		
		private EntitySet<Proveedores_Asuntos> _Proveedores_Asuntos;
		
		private EntitySet<FacturasP> _FacturasP;
		
		private EntitySet<LicenciasAnuales> _LicenciasAnuales;
		
		private EntitySet<ContratosLicenciasAnuales> _ContratosLicenciasAnuales;
		
		private EntityRef<Personas> _Personas;
		
		private EntityRef<Tareas> _Tareas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPRV_IdChanging(int value);
    partial void OnPRV_IdChanged();
    partial void OnPRV_CIFChanging(string value);
    partial void OnPRV_CIFChanged();
    partial void OnPRV_NombreChanging(string value);
    partial void OnPRV_NombreChanged();
    partial void OnPRV_ActivoChanging(bool value);
    partial void OnPRV_ActivoChanged();
    partial void OnFechaAltaChanging(System.DateTime value);
    partial void OnFechaAltaChanged();
    partial void OnFechaModificacionChanging(System.DateTime value);
    partial void OnFechaModificacionChanged();
    partial void OnPER_Id_ModificacionChanging(int value);
    partial void OnPER_Id_ModificacionChanged();
    partial void OnPRV_TAR_Id_SoporteChanging(System.Nullable<int> value);
    partial void OnPRV_TAR_Id_SoporteChanged();
    partial void OnPRV_PlantillaExcelChanging(System.Nullable<int> value);
    partial void OnPRV_PlantillaExcelChanged();
    #endregion
		
		public Proveedores()
		{
			this._Proveedores_ContratosSoporte = new EntitySet<Proveedores_ContratosSoporte>(new Action<Proveedores_ContratosSoporte>(this.attach_Proveedores_ContratosSoporte), new Action<Proveedores_ContratosSoporte>(this.detach_Proveedores_ContratosSoporte));
			this._Proveedores_Asuntos = new EntitySet<Proveedores_Asuntos>(new Action<Proveedores_Asuntos>(this.attach_Proveedores_Asuntos), new Action<Proveedores_Asuntos>(this.detach_Proveedores_Asuntos));
			this._FacturasP = new EntitySet<FacturasP>(new Action<FacturasP>(this.attach_FacturasP), new Action<FacturasP>(this.detach_FacturasP));
			this._LicenciasAnuales = new EntitySet<LicenciasAnuales>(new Action<LicenciasAnuales>(this.attach_LicenciasAnuales), new Action<LicenciasAnuales>(this.detach_LicenciasAnuales));
			this._ContratosLicenciasAnuales = new EntitySet<ContratosLicenciasAnuales>(new Action<ContratosLicenciasAnuales>(this.attach_ContratosLicenciasAnuales), new Action<ContratosLicenciasAnuales>(this.detach_ContratosLicenciasAnuales));
			this._Personas = default(EntityRef<Personas>);
			this._Tareas = default(EntityRef<Tareas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRV_Id", DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PRV_Id
		{
			get
			{
				return this._PRV_Id;
			}
			set
			{
				if ((this._PRV_Id != value))
				{
					this.OnPRV_IdChanging(value);
					this.SendPropertyChanging();
					this._PRV_Id = value;
					this.SendPropertyChanged("PRV_Id");
					this.OnPRV_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRV_CIF", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string PRV_CIF
		{
			get
			{
				return this._PRV_CIF;
			}
			set
			{
				if ((this._PRV_CIF != value))
				{
					this.OnPRV_CIFChanging(value);
					this.SendPropertyChanging();
					this._PRV_CIF = value;
					this.SendPropertyChanged("PRV_CIF");
					this.OnPRV_CIFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRV_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PRV_Nombre
		{
			get
			{
				return this._PRV_Nombre;
			}
			set
			{
				if ((this._PRV_Nombre != value))
				{
					this.OnPRV_NombreChanging(value);
					this.SendPropertyChanging();
					this._PRV_Nombre = value;
					this.SendPropertyChanged("PRV_Nombre");
					this.OnPRV_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRV_Activo", DbType="Bit NOT NULL")]
		public bool PRV_Activo
		{
			get
			{
				return this._PRV_Activo;
			}
			set
			{
				if ((this._PRV_Activo != value))
				{
					this.OnPRV_ActivoChanging(value);
					this.SendPropertyChanging();
					this._PRV_Activo = value;
					this.SendPropertyChanged("PRV_Activo");
					this.OnPRV_ActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAlta", DbType="DateTime NOT NULL")]
		public System.DateTime FechaAlta
		{
			get
			{
				return this._FechaAlta;
			}
			set
			{
				if ((this._FechaAlta != value))
				{
					this.OnFechaAltaChanging(value);
					this.SendPropertyChanging();
					this._FechaAlta = value;
					this.SendPropertyChanged("FechaAlta");
					this.OnFechaAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaModificacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaModificacion
		{
			get
			{
				return this._FechaModificacion;
			}
			set
			{
				if ((this._FechaModificacion != value))
				{
					this.OnFechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._FechaModificacion = value;
					this.SendPropertyChanged("FechaModificacion");
					this.OnFechaModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Id_Modificacion", DbType="Int NOT NULL")]
		public int PER_Id_Modificacion
		{
			get
			{
				return this._PER_Id_Modificacion;
			}
			set
			{
				if ((this._PER_Id_Modificacion != value))
				{
					if (this._Personas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPER_Id_ModificacionChanging(value);
					this.SendPropertyChanging();
					this._PER_Id_Modificacion = value;
					this.SendPropertyChanged("PER_Id_Modificacion");
					this.OnPER_Id_ModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRV_TAR_Id_Soporte")]
		public System.Nullable<int> PRV_TAR_Id_Soporte
		{
			get
			{
				return this._PRV_TAR_Id_Soporte;
			}
			set
			{
				if ((this._PRV_TAR_Id_Soporte != value))
				{
					if (this._Tareas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRV_TAR_Id_SoporteChanging(value);
					this.SendPropertyChanging();
					this._PRV_TAR_Id_Soporte = value;
					this.SendPropertyChanged("PRV_TAR_Id_Soporte");
					this.OnPRV_TAR_Id_SoporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRV_PlantillaExcel")]
		public System.Nullable<int> PRV_PlantillaExcel
		{
			get
			{
				return this._PRV_PlantillaExcel;
			}
			set
			{
				if ((this._PRV_PlantillaExcel != value))
				{
					this.OnPRV_PlantillaExcelChanging(value);
					this.SendPropertyChanging();
					this._PRV_PlantillaExcel = value;
					this.SendPropertyChanged("PRV_PlantillaExcel");
					this.OnPRV_PlantillaExcelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedores_Proveedores_ContratosSoporte", Storage="_Proveedores_ContratosSoporte", ThisKey="PRV_Id", OtherKey="PVC_PRV_Id")]
		public EntitySet<Proveedores_ContratosSoporte> Proveedores_ContratosSoporte
		{
			get
			{
				return this._Proveedores_ContratosSoporte;
			}
			set
			{
				this._Proveedores_ContratosSoporte.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedores_Proveedores_Asuntos", Storage="_Proveedores_Asuntos", ThisKey="PRV_Id", OtherKey="PAS_PRV_Id")]
		public EntitySet<Proveedores_Asuntos> Proveedores_Asuntos
		{
			get
			{
				return this._Proveedores_Asuntos;
			}
			set
			{
				this._Proveedores_Asuntos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedores_FacturasP", Storage="_FacturasP", ThisKey="PRV_Id", OtherKey="FAP_PRV_Id")]
		public EntitySet<FacturasP> FacturasP
		{
			get
			{
				return this._FacturasP;
			}
			set
			{
				this._FacturasP.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedores_LicenciasAnuales", Storage="_LicenciasAnuales", ThisKey="PRV_Id", OtherKey="LAN_PRV_Id")]
		public EntitySet<LicenciasAnuales> LicenciasAnuales
		{
			get
			{
				return this._LicenciasAnuales;
			}
			set
			{
				this._LicenciasAnuales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedores_ContratosLicenciasAnuales", Storage="_ContratosLicenciasAnuales", ThisKey="PRV_Id", OtherKey="CLA_PRV_Id")]
		public EntitySet<ContratosLicenciasAnuales> ContratosLicenciasAnuales
		{
			get
			{
				return this._ContratosLicenciasAnuales;
			}
			set
			{
				this._ContratosLicenciasAnuales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Proveedores", Storage="_Personas", ThisKey="PER_Id_Modificacion", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas Personas
		{
			get
			{
				return this._Personas.Entity;
			}
			set
			{
				if ((this._Personas.Entity != value))
				{
					this.SendPropertyChanging();
					this._Personas.Entity = value;
					this.SendPropertyChanged("Personas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Proveedores", Storage="_Tareas", ThisKey="PRV_TAR_Id_Soporte", OtherKey="TAR_Id", IsForeignKey=true)]
		public Tareas Tareas
		{
			get
			{
				return this._Tareas.Entity;
			}
			set
			{
				Tareas previousValue = this._Tareas.Entity;
				if (((previousValue != value) 
							|| (this._Tareas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tareas.Entity = null;
						previousValue.Proveedores.Remove(this);
					}
					this._Tareas.Entity = value;
					if ((value != null))
					{
						value.Proveedores.Add(this);
						this._PRV_TAR_Id_Soporte = value.TAR_Id;
					}
					else
					{
						this._PRV_TAR_Id_Soporte = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tareas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Proveedores_ContratosSoporte(Proveedores_ContratosSoporte entity)
		{
			this.SendPropertyChanging();
			entity.Proveedores = this;
		}
		
		private void detach_Proveedores_ContratosSoporte(Proveedores_ContratosSoporte entity)
		{
			this.SendPropertyChanging();
			entity.Proveedores = null;
		}
		
		private void attach_Proveedores_Asuntos(Proveedores_Asuntos entity)
		{
			this.SendPropertyChanging();
			entity.Proveedores = this;
		}
		
		private void detach_Proveedores_Asuntos(Proveedores_Asuntos entity)
		{
			this.SendPropertyChanging();
			entity.Proveedores = null;
		}
		
		private void attach_FacturasP(FacturasP entity)
		{
			this.SendPropertyChanging();
			entity.Proveedores = this;
		}
		
		private void detach_FacturasP(FacturasP entity)
		{
			this.SendPropertyChanging();
			entity.Proveedores = null;
		}
		
		private void attach_LicenciasAnuales(LicenciasAnuales entity)
		{
			this.SendPropertyChanging();
			entity.Proveedores = this;
		}
		
		private void detach_LicenciasAnuales(LicenciasAnuales entity)
		{
			this.SendPropertyChanging();
			entity.Proveedores = null;
		}
		
		private void attach_ContratosLicenciasAnuales(ContratosLicenciasAnuales entity)
		{
			this.SendPropertyChanging();
			entity.Proveedores = this;
		}
		
		private void detach_ContratosLicenciasAnuales(ContratosLicenciasAnuales entity)
		{
			this.SendPropertyChanging();
			entity.Proveedores = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Licencias : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LIC_Id;
		
		private string _LIC_Nombre;
		
		private System.Nullable<int> _LIC_MaximoGrupo;
		
		private System.Nullable<int> _LIC_LIC_Id_Padre;
		
		private System.Nullable<int> _LIC_TAR_Id;
		
		private string _LIC_NombreMS;
		
		private System.Nullable<bool> _LIC_Gestionado;
		
		private System.Nullable<int> _LIC_TAR_Id_Antivirus;
		
		private System.Nullable<int> _LIC_TAR_Id_Backup;
		
		private EntitySet<Licencias_Excepciones> _Licencias_Excepciones;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo_LicenciasMS> _Tareas_Empresas_LineasEsfuerzo_LicenciasMS;
		
		private EntitySet<Licencias_Excepciones_LicenciasReemplazo> _Licencias_Excepciones_LicenciasReemplazo;
		
		private EntitySet<Licencias_Incompatibles> _Licencias_Incompatibles;
		
		private EntitySet<Licencias_Incompatibles> _Licencias_Incompatibles1;
		
		private EntitySet<Licencias_Minimos> _Licencias_Minimos;
		
		private EntityRef<Tareas> _Tareas;
		
		private EntityRef<Tareas> _Tareas1;
		
		private EntityRef<Tareas> _Tareas2;
		
		private EntityRef<Tareas> _Tareas3;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLIC_IdChanging(int value);
    partial void OnLIC_IdChanged();
    partial void OnLIC_NombreChanging(string value);
    partial void OnLIC_NombreChanged();
    partial void OnLIC_MaximoGrupoChanging(System.Nullable<int> value);
    partial void OnLIC_MaximoGrupoChanged();
    partial void OnLIC_LIC_Id_PadreChanging(System.Nullable<int> value);
    partial void OnLIC_LIC_Id_PadreChanged();
    partial void OnLIC_TAR_Id_SWChanging(System.Nullable<int> value);
    partial void OnLIC_TAR_Id_SWChanged();
    partial void OnLIC_NombreMSChanging(string value);
    partial void OnLIC_NombreMSChanged();
    partial void OnLIC_GestionadoChanging(System.Nullable<bool> value);
    partial void OnLIC_GestionadoChanged();
    partial void OnLIC_TAR_Id_AntivirusChanging(System.Nullable<int> value);
    partial void OnLIC_TAR_Id_AntivirusChanged();
    partial void OnLIC_TAR_Id_BackupChanging(System.Nullable<int> value);
    partial void OnLIC_TAR_Id_BackupChanged();
    #endregion
		
		public Licencias()
		{
			this._Licencias_Excepciones = new EntitySet<Licencias_Excepciones>(new Action<Licencias_Excepciones>(this.attach_Licencias_Excepciones), new Action<Licencias_Excepciones>(this.detach_Licencias_Excepciones));
			this._Tareas_Empresas_LineasEsfuerzo_LicenciasMS = new EntitySet<Tareas_Empresas_LineasEsfuerzo_LicenciasMS>(new Action<Tareas_Empresas_LineasEsfuerzo_LicenciasMS>(this.attach_Tareas_Empresas_LineasEsfuerzo_LicenciasMS), new Action<Tareas_Empresas_LineasEsfuerzo_LicenciasMS>(this.detach_Tareas_Empresas_LineasEsfuerzo_LicenciasMS));
			this._Licencias_Excepciones_LicenciasReemplazo = new EntitySet<Licencias_Excepciones_LicenciasReemplazo>(new Action<Licencias_Excepciones_LicenciasReemplazo>(this.attach_Licencias_Excepciones_LicenciasReemplazo), new Action<Licencias_Excepciones_LicenciasReemplazo>(this.detach_Licencias_Excepciones_LicenciasReemplazo));
			this._Licencias_Incompatibles = new EntitySet<Licencias_Incompatibles>(new Action<Licencias_Incompatibles>(this.attach_Licencias_Incompatibles), new Action<Licencias_Incompatibles>(this.detach_Licencias_Incompatibles));
			this._Licencias_Incompatibles1 = new EntitySet<Licencias_Incompatibles>(new Action<Licencias_Incompatibles>(this.attach_Licencias_Incompatibles1), new Action<Licencias_Incompatibles>(this.detach_Licencias_Incompatibles1));
			this._Licencias_Minimos = new EntitySet<Licencias_Minimos>(new Action<Licencias_Minimos>(this.attach_Licencias_Minimos), new Action<Licencias_Minimos>(this.detach_Licencias_Minimos));
			this._Tareas = default(EntityRef<Tareas>);
			this._Tareas1 = default(EntityRef<Tareas>);
			this._Tareas2 = default(EntityRef<Tareas>);
			this._Tareas3 = default(EntityRef<Tareas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIC_Id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LIC_Id
		{
			get
			{
				return this._LIC_Id;
			}
			set
			{
				if ((this._LIC_Id != value))
				{
					this.OnLIC_IdChanging(value);
					this.SendPropertyChanging();
					this._LIC_Id = value;
					this.SendPropertyChanged("LIC_Id");
					this.OnLIC_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIC_Nombre", CanBeNull=false)]
		public string LIC_Nombre
		{
			get
			{
				return this._LIC_Nombre;
			}
			set
			{
				if ((this._LIC_Nombre != value))
				{
					this.OnLIC_NombreChanging(value);
					this.SendPropertyChanging();
					this._LIC_Nombre = value;
					this.SendPropertyChanged("LIC_Nombre");
					this.OnLIC_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIC_MaximoGrupo")]
		public System.Nullable<int> LIC_MaximoGrupo
		{
			get
			{
				return this._LIC_MaximoGrupo;
			}
			set
			{
				if ((this._LIC_MaximoGrupo != value))
				{
					this.OnLIC_MaximoGrupoChanging(value);
					this.SendPropertyChanging();
					this._LIC_MaximoGrupo = value;
					this.SendPropertyChanged("LIC_MaximoGrupo");
					this.OnLIC_MaximoGrupoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIC_LIC_Id_Padre")]
		public System.Nullable<int> LIC_LIC_Id_Padre
		{
			get
			{
				return this._LIC_LIC_Id_Padre;
			}
			set
			{
				if ((this._LIC_LIC_Id_Padre != value))
				{
					this.OnLIC_LIC_Id_PadreChanging(value);
					this.SendPropertyChanging();
					this._LIC_LIC_Id_Padre = value;
					this.SendPropertyChanged("LIC_LIC_Id_Padre");
					this.OnLIC_LIC_Id_PadreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIC_TAR_Id")]
		public System.Nullable<int> LIC_TAR_Id_SW
		{
			get
			{
				return this._LIC_TAR_Id;
			}
			set
			{
				if ((this._LIC_TAR_Id != value))
				{
					if ((this._Tareas.HasLoadedOrAssignedValue || this._Tareas1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLIC_TAR_Id_SWChanging(value);
					this.SendPropertyChanging();
					this._LIC_TAR_Id = value;
					this.SendPropertyChanged("LIC_TAR_Id_SW");
					this.OnLIC_TAR_Id_SWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIC_NombreMS")]
		public string LIC_NombreMS
		{
			get
			{
				return this._LIC_NombreMS;
			}
			set
			{
				if ((this._LIC_NombreMS != value))
				{
					this.OnLIC_NombreMSChanging(value);
					this.SendPropertyChanging();
					this._LIC_NombreMS = value;
					this.SendPropertyChanged("LIC_NombreMS");
					this.OnLIC_NombreMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIC_Gestionado")]
		public System.Nullable<bool> LIC_Gestionado
		{
			get
			{
				return this._LIC_Gestionado;
			}
			set
			{
				if ((this._LIC_Gestionado != value))
				{
					this.OnLIC_GestionadoChanging(value);
					this.SendPropertyChanging();
					this._LIC_Gestionado = value;
					this.SendPropertyChanged("LIC_Gestionado");
					this.OnLIC_GestionadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIC_TAR_Id_Antivirus")]
		public System.Nullable<int> LIC_TAR_Id_Antivirus
		{
			get
			{
				return this._LIC_TAR_Id_Antivirus;
			}
			set
			{
				if ((this._LIC_TAR_Id_Antivirus != value))
				{
					if (this._Tareas2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLIC_TAR_Id_AntivirusChanging(value);
					this.SendPropertyChanging();
					this._LIC_TAR_Id_Antivirus = value;
					this.SendPropertyChanged("LIC_TAR_Id_Antivirus");
					this.OnLIC_TAR_Id_AntivirusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIC_TAR_Id_Backup")]
		public System.Nullable<int> LIC_TAR_Id_Backup
		{
			get
			{
				return this._LIC_TAR_Id_Backup;
			}
			set
			{
				if ((this._LIC_TAR_Id_Backup != value))
				{
					if (this._Tareas3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLIC_TAR_Id_BackupChanging(value);
					this.SendPropertyChanging();
					this._LIC_TAR_Id_Backup = value;
					this.SendPropertyChanged("LIC_TAR_Id_Backup");
					this.OnLIC_TAR_Id_BackupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Licencias_Licencias_Excepciones", Storage="_Licencias_Excepciones", ThisKey="LIC_Id", OtherKey="LIE_LIC_Id")]
		public EntitySet<Licencias_Excepciones> Licencias_Excepciones
		{
			get
			{
				return this._Licencias_Excepciones;
			}
			set
			{
				this._Licencias_Excepciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Licencias_Tareas_Empresas_LineasEsfuerzo_LicenciasMS", Storage="_Tareas_Empresas_LineasEsfuerzo_LicenciasMS", ThisKey="LIC_Id", OtherKey="TCL_LIC_Id")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo_LicenciasMS> Tareas_Empresas_LineasEsfuerzo_LicenciasMS
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo_LicenciasMS;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo_LicenciasMS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Licencias_Licencias_Excepciones_LicenciasReemplazo", Storage="_Licencias_Excepciones_LicenciasReemplazo", ThisKey="LIC_Id", OtherKey="LEL_LIC_Id_Reemplazo")]
		public EntitySet<Licencias_Excepciones_LicenciasReemplazo> Licencias_Excepciones_LicenciasReemplazo
		{
			get
			{
				return this._Licencias_Excepciones_LicenciasReemplazo;
			}
			set
			{
				this._Licencias_Excepciones_LicenciasReemplazo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Licencias_Licencias_Incompatibles", Storage="_Licencias_Incompatibles", ThisKey="LIC_Id", OtherKey="LIL_LIC_Id1")]
		public EntitySet<Licencias_Incompatibles> Licencias_Incompatibles
		{
			get
			{
				return this._Licencias_Incompatibles;
			}
			set
			{
				this._Licencias_Incompatibles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Licencias_Licencias_Incompatibles1", Storage="_Licencias_Incompatibles1", ThisKey="LIC_Id", OtherKey="LIL_LIC_Id2")]
		public EntitySet<Licencias_Incompatibles> Licencias_Incompatibles1
		{
			get
			{
				return this._Licencias_Incompatibles1;
			}
			set
			{
				this._Licencias_Incompatibles1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Licencias_Licencias_Minimos", Storage="_Licencias_Minimos", ThisKey="LIC_Id", OtherKey="LEM_LIC_Id")]
		public EntitySet<Licencias_Minimos> Licencias_Minimos
		{
			get
			{
				return this._Licencias_Minimos;
			}
			set
			{
				this._Licencias_Minimos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Licencias", Storage="_Tareas", ThisKey="LIC_TAR_Id_SW", OtherKey="TAR_Id", IsForeignKey=true)]
		public Tareas Tareas
		{
			get
			{
				return this._Tareas.Entity;
			}
			set
			{
				Tareas previousValue = this._Tareas.Entity;
				if (((previousValue != value) 
							|| (this._Tareas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tareas.Entity = null;
						previousValue.Licencias.Remove(this);
					}
					this._Tareas.Entity = value;
					if ((value != null))
					{
						value.Licencias.Add(this);
						this._LIC_TAR_Id = value.TAR_Id;
					}
					else
					{
						this._LIC_TAR_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tareas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Licencias1", Storage="_Tareas1", ThisKey="LIC_TAR_Id_SW", OtherKey="TAR_Id", IsForeignKey=true)]
		public Tareas Tareas1
		{
			get
			{
				return this._Tareas1.Entity;
			}
			set
			{
				Tareas previousValue = this._Tareas1.Entity;
				if (((previousValue != value) 
							|| (this._Tareas1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tareas1.Entity = null;
						previousValue.Licencias1.Remove(this);
					}
					this._Tareas1.Entity = value;
					if ((value != null))
					{
						value.Licencias1.Add(this);
						this._LIC_TAR_Id = value.TAR_Id;
					}
					else
					{
						this._LIC_TAR_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tareas1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Licencias2", Storage="_Tareas2", ThisKey="LIC_TAR_Id_Antivirus", OtherKey="TAR_Id", IsForeignKey=true)]
		public Tareas Tareas2
		{
			get
			{
				return this._Tareas2.Entity;
			}
			set
			{
				Tareas previousValue = this._Tareas2.Entity;
				if (((previousValue != value) 
							|| (this._Tareas2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tareas2.Entity = null;
						previousValue.Licencias2.Remove(this);
					}
					this._Tareas2.Entity = value;
					if ((value != null))
					{
						value.Licencias2.Add(this);
						this._LIC_TAR_Id_Antivirus = value.TAR_Id;
					}
					else
					{
						this._LIC_TAR_Id_Antivirus = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tareas2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Licencias3", Storage="_Tareas3", ThisKey="LIC_TAR_Id_Backup", OtherKey="TAR_Id", IsForeignKey=true)]
		public Tareas Tareas3
		{
			get
			{
				return this._Tareas3.Entity;
			}
			set
			{
				Tareas previousValue = this._Tareas3.Entity;
				if (((previousValue != value) 
							|| (this._Tareas3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tareas3.Entity = null;
						previousValue.Licencias3.Remove(this);
					}
					this._Tareas3.Entity = value;
					if ((value != null))
					{
						value.Licencias3.Add(this);
						this._LIC_TAR_Id_Backup = value.TAR_Id;
					}
					else
					{
						this._LIC_TAR_Id_Backup = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tareas3");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Licencias_Excepciones(Licencias_Excepciones entity)
		{
			this.SendPropertyChanging();
			entity.Licencias = this;
		}
		
		private void detach_Licencias_Excepciones(Licencias_Excepciones entity)
		{
			this.SendPropertyChanging();
			entity.Licencias = null;
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo_LicenciasMS(Tareas_Empresas_LineasEsfuerzo_LicenciasMS entity)
		{
			this.SendPropertyChanging();
			entity.Licencias = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo_LicenciasMS(Tareas_Empresas_LineasEsfuerzo_LicenciasMS entity)
		{
			this.SendPropertyChanging();
			entity.Licencias = null;
		}
		
		private void attach_Licencias_Excepciones_LicenciasReemplazo(Licencias_Excepciones_LicenciasReemplazo entity)
		{
			this.SendPropertyChanging();
			entity.Licencias = this;
		}
		
		private void detach_Licencias_Excepciones_LicenciasReemplazo(Licencias_Excepciones_LicenciasReemplazo entity)
		{
			this.SendPropertyChanging();
			entity.Licencias = null;
		}
		
		private void attach_Licencias_Incompatibles(Licencias_Incompatibles entity)
		{
			this.SendPropertyChanging();
			entity.Licencias = this;
		}
		
		private void detach_Licencias_Incompatibles(Licencias_Incompatibles entity)
		{
			this.SendPropertyChanging();
			entity.Licencias = null;
		}
		
		private void attach_Licencias_Incompatibles1(Licencias_Incompatibles entity)
		{
			this.SendPropertyChanging();
			entity.Licencias1 = this;
		}
		
		private void detach_Licencias_Incompatibles1(Licencias_Incompatibles entity)
		{
			this.SendPropertyChanging();
			entity.Licencias1 = null;
		}
		
		private void attach_Licencias_Minimos(Licencias_Minimos entity)
		{
			this.SendPropertyChanging();
			entity.Licencias = this;
		}
		
		private void detach_Licencias_Minimos(Licencias_Minimos entity)
		{
			this.SendPropertyChanging();
			entity.Licencias = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Licencias_Excepciones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LIE_LIC_Id;
		
		private int _LIE_EMP_Id;
		
		private int _LIE_CorreccionFacturacion;
		
		private EntitySet<Licencias_Excepciones_LicenciasReemplazo> _Licencias_Excepciones_LicenciasReemplazo;
		
		private EntityRef<Licencias> _Licencias;
		
		private EntityRef<Empresas> _Empresas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLIE_LIC_IdChanging(int value);
    partial void OnLIE_LIC_IdChanged();
    partial void OnLIE_EMP_IdChanging(int value);
    partial void OnLIE_EMP_IdChanged();
    partial void OnLIE_CorreccionFacturacionChanging(int value);
    partial void OnLIE_CorreccionFacturacionChanged();
    #endregion
		
		public Licencias_Excepciones()
		{
			this._Licencias_Excepciones_LicenciasReemplazo = new EntitySet<Licencias_Excepciones_LicenciasReemplazo>(new Action<Licencias_Excepciones_LicenciasReemplazo>(this.attach_Licencias_Excepciones_LicenciasReemplazo), new Action<Licencias_Excepciones_LicenciasReemplazo>(this.detach_Licencias_Excepciones_LicenciasReemplazo));
			this._Licencias = default(EntityRef<Licencias>);
			this._Empresas = default(EntityRef<Empresas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIE_LIC_Id", IsPrimaryKey=true)]
		public int LIE_LIC_Id
		{
			get
			{
				return this._LIE_LIC_Id;
			}
			set
			{
				if ((this._LIE_LIC_Id != value))
				{
					if (this._Licencias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLIE_LIC_IdChanging(value);
					this.SendPropertyChanging();
					this._LIE_LIC_Id = value;
					this.SendPropertyChanged("LIE_LIC_Id");
					this.OnLIE_LIC_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIE_EMP_Id", IsPrimaryKey=true)]
		public int LIE_EMP_Id
		{
			get
			{
				return this._LIE_EMP_Id;
			}
			set
			{
				if ((this._LIE_EMP_Id != value))
				{
					if (this._Empresas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLIE_EMP_IdChanging(value);
					this.SendPropertyChanging();
					this._LIE_EMP_Id = value;
					this.SendPropertyChanged("LIE_EMP_Id");
					this.OnLIE_EMP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIE_CorreccionFacturacion")]
		public int LIE_CorreccionFacturacion
		{
			get
			{
				return this._LIE_CorreccionFacturacion;
			}
			set
			{
				if ((this._LIE_CorreccionFacturacion != value))
				{
					this.OnLIE_CorreccionFacturacionChanging(value);
					this.SendPropertyChanging();
					this._LIE_CorreccionFacturacion = value;
					this.SendPropertyChanged("LIE_CorreccionFacturacion");
					this.OnLIE_CorreccionFacturacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Licencias_Excepciones_Licencias_Excepciones_LicenciasReemplazo", Storage="_Licencias_Excepciones_LicenciasReemplazo", ThisKey="LIE_LIC_Id", OtherKey="LEL_LIE_LIC_Id")]
		public EntitySet<Licencias_Excepciones_LicenciasReemplazo> Licencias_Excepciones_LicenciasReemplazo
		{
			get
			{
				return this._Licencias_Excepciones_LicenciasReemplazo;
			}
			set
			{
				this._Licencias_Excepciones_LicenciasReemplazo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Licencias_Licencias_Excepciones", Storage="_Licencias", ThisKey="LIE_LIC_Id", OtherKey="LIC_Id", IsForeignKey=true)]
		public Licencias Licencias
		{
			get
			{
				return this._Licencias.Entity;
			}
			set
			{
				Licencias previousValue = this._Licencias.Entity;
				if (((previousValue != value) 
							|| (this._Licencias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Licencias.Entity = null;
						previousValue.Licencias_Excepciones.Remove(this);
					}
					this._Licencias.Entity = value;
					if ((value != null))
					{
						value.Licencias_Excepciones.Add(this);
						this._LIE_LIC_Id = value.LIC_Id;
					}
					else
					{
						this._LIE_LIC_Id = default(int);
					}
					this.SendPropertyChanged("Licencias");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Licencias_Excepciones", Storage="_Empresas", ThisKey="LIE_EMP_Id", OtherKey="EMP_Id", IsForeignKey=true)]
		public Empresas Empresas
		{
			get
			{
				return this._Empresas.Entity;
			}
			set
			{
				Empresas previousValue = this._Empresas.Entity;
				if (((previousValue != value) 
							|| (this._Empresas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresas.Entity = null;
						previousValue.Licencias_Excepciones.Remove(this);
					}
					this._Empresas.Entity = value;
					if ((value != null))
					{
						value.Licencias_Excepciones.Add(this);
						this._LIE_EMP_Id = value.EMP_Id;
					}
					else
					{
						this._LIE_EMP_Id = default(int);
					}
					this.SendPropertyChanged("Empresas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Licencias_Excepciones_LicenciasReemplazo(Licencias_Excepciones_LicenciasReemplazo entity)
		{
			this.SendPropertyChanging();
			entity.Licencias_Excepciones = this;
		}
		
		private void detach_Licencias_Excepciones_LicenciasReemplazo(Licencias_Excepciones_LicenciasReemplazo entity)
		{
			this.SendPropertyChanging();
			entity.Licencias_Excepciones = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class TiposEnte : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TEN_Id;
		
		private string _TEN_Nombre;
		
		private EntitySet<Entes> _Entes;
		
		private EntitySet<Aplicaciones_TiposEnte> _Aplicaciones_TiposEnte;
		
		private EntitySet<LicenciasAnuales_TiposEnte> _LicenciasAnuales_TiposEnte;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTEN_IdChanging(int value);
    partial void OnTEN_IdChanged();
    partial void OnTEN_NombreChanging(string value);
    partial void OnTEN_NombreChanged();
    #endregion
		
		public TiposEnte()
		{
			this._Entes = new EntitySet<Entes>(new Action<Entes>(this.attach_Entes), new Action<Entes>(this.detach_Entes));
			this._Aplicaciones_TiposEnte = new EntitySet<Aplicaciones_TiposEnte>(new Action<Aplicaciones_TiposEnte>(this.attach_Aplicaciones_TiposEnte), new Action<Aplicaciones_TiposEnte>(this.detach_Aplicaciones_TiposEnte));
			this._LicenciasAnuales_TiposEnte = new EntitySet<LicenciasAnuales_TiposEnte>(new Action<LicenciasAnuales_TiposEnte>(this.attach_LicenciasAnuales_TiposEnte), new Action<LicenciasAnuales_TiposEnte>(this.detach_LicenciasAnuales_TiposEnte));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_Id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TEN_Id
		{
			get
			{
				return this._TEN_Id;
			}
			set
			{
				if ((this._TEN_Id != value))
				{
					this.OnTEN_IdChanging(value);
					this.SendPropertyChanging();
					this._TEN_Id = value;
					this.SendPropertyChanged("TEN_Id");
					this.OnTEN_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_Nombre", CanBeNull=false)]
		public string TEN_Nombre
		{
			get
			{
				return this._TEN_Nombre;
			}
			set
			{
				if ((this._TEN_Nombre != value))
				{
					this.OnTEN_NombreChanging(value);
					this.SendPropertyChanging();
					this._TEN_Nombre = value;
					this.SendPropertyChanged("TEN_Nombre");
					this.OnTEN_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TiposEnte_Entes", Storage="_Entes", ThisKey="TEN_Id", OtherKey="ENT_TEN_Id")]
		public EntitySet<Entes> Entes
		{
			get
			{
				return this._Entes;
			}
			set
			{
				this._Entes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TiposEnte_Aplicaciones_TiposEnte", Storage="_Aplicaciones_TiposEnte", ThisKey="TEN_Id", OtherKey="ATE_TEN_Id")]
		public EntitySet<Aplicaciones_TiposEnte> Aplicaciones_TiposEnte
		{
			get
			{
				return this._Aplicaciones_TiposEnte;
			}
			set
			{
				this._Aplicaciones_TiposEnte.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TiposEnte_LicenciasAnuales_TiposEnte", Storage="_LicenciasAnuales_TiposEnte", ThisKey="TEN_Id", OtherKey="LAT_TEN_Id")]
		public EntitySet<LicenciasAnuales_TiposEnte> LicenciasAnuales_TiposEnte
		{
			get
			{
				return this._LicenciasAnuales_TiposEnte;
			}
			set
			{
				this._LicenciasAnuales_TiposEnte.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Entes(Entes entity)
		{
			this.SendPropertyChanging();
			entity.TiposEnte = this;
		}
		
		private void detach_Entes(Entes entity)
		{
			this.SendPropertyChanging();
			entity.TiposEnte = null;
		}
		
		private void attach_Aplicaciones_TiposEnte(Aplicaciones_TiposEnte entity)
		{
			this.SendPropertyChanging();
			entity.TiposEnte = this;
		}
		
		private void detach_Aplicaciones_TiposEnte(Aplicaciones_TiposEnte entity)
		{
			this.SendPropertyChanging();
			entity.TiposEnte = null;
		}
		
		private void attach_LicenciasAnuales_TiposEnte(LicenciasAnuales_TiposEnte entity)
		{
			this.SendPropertyChanging();
			entity.TiposEnte = this;
		}
		
		private void detach_LicenciasAnuales_TiposEnte(LicenciasAnuales_TiposEnte entity)
		{
			this.SendPropertyChanging();
			entity.TiposEnte = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Oficinas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OFI_Id;
		
		private string _OFI_Nombre;
		
		private string _OFI_NombreDA;
		
		private EntitySet<Entes> _Entes;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOFI_IdChanging(int value);
    partial void OnOFI_IdChanged();
    partial void OnOFI_NombreChanging(string value);
    partial void OnOFI_NombreChanged();
    partial void OnOFI_NombreDAChanging(string value);
    partial void OnOFI_NombreDAChanged();
    #endregion
		
		public Oficinas()
		{
			this._Entes = new EntitySet<Entes>(new Action<Entes>(this.attach_Entes), new Action<Entes>(this.detach_Entes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OFI_Id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OFI_Id
		{
			get
			{
				return this._OFI_Id;
			}
			set
			{
				if ((this._OFI_Id != value))
				{
					this.OnOFI_IdChanging(value);
					this.SendPropertyChanging();
					this._OFI_Id = value;
					this.SendPropertyChanged("OFI_Id");
					this.OnOFI_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OFI_Nombre", CanBeNull=false)]
		public string OFI_Nombre
		{
			get
			{
				return this._OFI_Nombre;
			}
			set
			{
				if ((this._OFI_Nombre != value))
				{
					this.OnOFI_NombreChanging(value);
					this.SendPropertyChanging();
					this._OFI_Nombre = value;
					this.SendPropertyChanged("OFI_Nombre");
					this.OnOFI_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OFI_NombreDA", CanBeNull=false)]
		public string OFI_NombreDA
		{
			get
			{
				return this._OFI_NombreDA;
			}
			set
			{
				if ((this._OFI_NombreDA != value))
				{
					this.OnOFI_NombreDAChanging(value);
					this.SendPropertyChanging();
					this._OFI_NombreDA = value;
					this.SendPropertyChanged("OFI_NombreDA");
					this.OnOFI_NombreDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Oficinas_Entes", Storage="_Entes", ThisKey="OFI_Id", OtherKey="ENT_OFI_Id")]
		public EntitySet<Entes> Entes
		{
			get
			{
				return this._Entes;
			}
			set
			{
				this._Entes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Entes(Entes entity)
		{
			this.SendPropertyChanging();
			entity.Oficinas = this;
		}
		
		private void detach_Entes(Entes entity)
		{
			this.SendPropertyChanging();
			entity.Oficinas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Licencias_Tarifas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LIT_LIC_Id;
		
		private System.DateTime _LIT_FechaInicio;
		
		private System.Nullable<System.DateTime> _LIT_FechaFin;
		
		private decimal _LIT_PrecioUnitario;
		
		private System.Nullable<decimal> _LIT_PrecioUnitarioAntivirus;
		
		private System.Nullable<decimal> _LIT_PrecioUnitarioBackup;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLIT_LIC_IdChanging(int value);
    partial void OnLIT_LIC_IdChanged();
    partial void OnLIT_FechaInicioChanging(System.DateTime value);
    partial void OnLIT_FechaInicioChanged();
    partial void OnLIT_FechaFinChanging(System.Nullable<System.DateTime> value);
    partial void OnLIT_FechaFinChanged();
    partial void OnLIT_PrecioUnitarioSWChanging(decimal value);
    partial void OnLIT_PrecioUnitarioSWChanged();
    partial void OnLIT_PrecioUnitarioAntivirusChanging(System.Nullable<decimal> value);
    partial void OnLIT_PrecioUnitarioAntivirusChanged();
    partial void OnLIT_PrecioUnitarioBackupChanging(System.Nullable<decimal> value);
    partial void OnLIT_PrecioUnitarioBackupChanged();
    #endregion
		
		public Licencias_Tarifas()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIT_LIC_Id", IsPrimaryKey=true)]
		public int LIT_LIC_Id
		{
			get
			{
				return this._LIT_LIC_Id;
			}
			set
			{
				if ((this._LIT_LIC_Id != value))
				{
					this.OnLIT_LIC_IdChanging(value);
					this.SendPropertyChanging();
					this._LIT_LIC_Id = value;
					this.SendPropertyChanged("LIT_LIC_Id");
					this.OnLIT_LIC_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIT_FechaInicio", IsPrimaryKey=true)]
		public System.DateTime LIT_FechaInicio
		{
			get
			{
				return this._LIT_FechaInicio;
			}
			set
			{
				if ((this._LIT_FechaInicio != value))
				{
					this.OnLIT_FechaInicioChanging(value);
					this.SendPropertyChanging();
					this._LIT_FechaInicio = value;
					this.SendPropertyChanged("LIT_FechaInicio");
					this.OnLIT_FechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIT_FechaFin")]
		public System.Nullable<System.DateTime> LIT_FechaFin
		{
			get
			{
				return this._LIT_FechaFin;
			}
			set
			{
				if ((this._LIT_FechaFin != value))
				{
					this.OnLIT_FechaFinChanging(value);
					this.SendPropertyChanging();
					this._LIT_FechaFin = value;
					this.SendPropertyChanged("LIT_FechaFin");
					this.OnLIT_FechaFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIT_PrecioUnitario")]
		public decimal LIT_PrecioUnitarioSW
		{
			get
			{
				return this._LIT_PrecioUnitario;
			}
			set
			{
				if ((this._LIT_PrecioUnitario != value))
				{
					this.OnLIT_PrecioUnitarioSWChanging(value);
					this.SendPropertyChanging();
					this._LIT_PrecioUnitario = value;
					this.SendPropertyChanged("LIT_PrecioUnitarioSW");
					this.OnLIT_PrecioUnitarioSWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIT_PrecioUnitarioAntivirus")]
		public System.Nullable<decimal> LIT_PrecioUnitarioAntivirus
		{
			get
			{
				return this._LIT_PrecioUnitarioAntivirus;
			}
			set
			{
				if ((this._LIT_PrecioUnitarioAntivirus != value))
				{
					this.OnLIT_PrecioUnitarioAntivirusChanging(value);
					this.SendPropertyChanging();
					this._LIT_PrecioUnitarioAntivirus = value;
					this.SendPropertyChanged("LIT_PrecioUnitarioAntivirus");
					this.OnLIT_PrecioUnitarioAntivirusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIT_PrecioUnitarioBackup")]
		public System.Nullable<decimal> LIT_PrecioUnitarioBackup
		{
			get
			{
				return this._LIT_PrecioUnitarioBackup;
			}
			set
			{
				if ((this._LIT_PrecioUnitarioBackup != value))
				{
					this.OnLIT_PrecioUnitarioBackupChanging(value);
					this.SendPropertyChanging();
					this._LIT_PrecioUnitarioBackup = value;
					this.SendPropertyChanged("LIT_PrecioUnitarioBackup");
					this.OnLIT_PrecioUnitarioBackupChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Entes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ENT_Id;
		
		private System.Nullable<int> _ENT_TEN_Id;
		
		private string _ENT_Nombre;
		
		private string _ENT_Email;
		
		private System.Nullable<int> _ENT_EMP_Id;
		
		private System.Nullable<int> _ENT_OFI_Id;
		
		private System.Nullable<int> _ENT_EDE_Id;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo_LicenciasMS> _Tareas_Empresas_LineasEsfuerzo_LicenciasMS;
		
		private EntitySet<Tickets> _Tickets;
		
		private EntitySet<Proveedores_Asuntos> _Proveedores_Asuntos;
		
		private EntitySet<Entes_Aplicaciones> _Entes_Aplicaciones;
		
		private EntitySet<Entes_LicenciasAnuales> _Entes_LicenciasAnuales;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo_Aplicaciones> _Tareas_Empresas_LineasEsfuerzo_Aplicaciones;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales> _Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales;
		
		private EntityRef<TiposEnte> _TiposEnte;
		
		private EntityRef<Empresas> _Empresas;
		
		private EntityRef<Oficinas> _Oficinas;
		
		private EntityRef<Empresas_Departamentos> _Empresas_Departamentos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnENT_IdChanging(int value);
    partial void OnENT_IdChanged();
    partial void OnENT_TEN_IdChanging(System.Nullable<int> value);
    partial void OnENT_TEN_IdChanged();
    partial void OnENT_NombreChanging(string value);
    partial void OnENT_NombreChanged();
    partial void OnENT_EmailChanging(string value);
    partial void OnENT_EmailChanged();
    partial void OnENT_EMP_IdChanging(System.Nullable<int> value);
    partial void OnENT_EMP_IdChanged();
    partial void OnENT_OFI_IdChanging(System.Nullable<int> value);
    partial void OnENT_OFI_IdChanged();
    partial void OnENT_EDE_IdChanging(System.Nullable<int> value);
    partial void OnENT_EDE_IdChanged();
    #endregion
		
		public Entes()
		{
			this._Tareas_Empresas_LineasEsfuerzo_LicenciasMS = new EntitySet<Tareas_Empresas_LineasEsfuerzo_LicenciasMS>(new Action<Tareas_Empresas_LineasEsfuerzo_LicenciasMS>(this.attach_Tareas_Empresas_LineasEsfuerzo_LicenciasMS), new Action<Tareas_Empresas_LineasEsfuerzo_LicenciasMS>(this.detach_Tareas_Empresas_LineasEsfuerzo_LicenciasMS));
			this._Tickets = new EntitySet<Tickets>(new Action<Tickets>(this.attach_Tickets), new Action<Tickets>(this.detach_Tickets));
			this._Proveedores_Asuntos = new EntitySet<Proveedores_Asuntos>(new Action<Proveedores_Asuntos>(this.attach_Proveedores_Asuntos), new Action<Proveedores_Asuntos>(this.detach_Proveedores_Asuntos));
			this._Entes_Aplicaciones = new EntitySet<Entes_Aplicaciones>(new Action<Entes_Aplicaciones>(this.attach_Entes_Aplicaciones), new Action<Entes_Aplicaciones>(this.detach_Entes_Aplicaciones));
			this._Entes_LicenciasAnuales = new EntitySet<Entes_LicenciasAnuales>(new Action<Entes_LicenciasAnuales>(this.attach_Entes_LicenciasAnuales), new Action<Entes_LicenciasAnuales>(this.detach_Entes_LicenciasAnuales));
			this._Tareas_Empresas_LineasEsfuerzo_Aplicaciones = new EntitySet<Tareas_Empresas_LineasEsfuerzo_Aplicaciones>(new Action<Tareas_Empresas_LineasEsfuerzo_Aplicaciones>(this.attach_Tareas_Empresas_LineasEsfuerzo_Aplicaciones), new Action<Tareas_Empresas_LineasEsfuerzo_Aplicaciones>(this.detach_Tareas_Empresas_LineasEsfuerzo_Aplicaciones));
			this._Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales = new EntitySet<Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales>(new Action<Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales>(this.attach_Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales), new Action<Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales>(this.detach_Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales));
			this._TiposEnte = default(EntityRef<TiposEnte>);
			this._Empresas = default(EntityRef<Empresas>);
			this._Oficinas = default(EntityRef<Oficinas>);
			this._Empresas_Departamentos = default(EntityRef<Empresas_Departamentos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENT_Id", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public int ENT_Id
		{
			get
			{
				return this._ENT_Id;
			}
			set
			{
				if ((this._ENT_Id != value))
				{
					this.OnENT_IdChanging(value);
					this.SendPropertyChanging();
					this._ENT_Id = value;
					this.SendPropertyChanged("ENT_Id");
					this.OnENT_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENT_TEN_Id")]
		public System.Nullable<int> ENT_TEN_Id
		{
			get
			{
				return this._ENT_TEN_Id;
			}
			set
			{
				if ((this._ENT_TEN_Id != value))
				{
					if (this._TiposEnte.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnENT_TEN_IdChanging(value);
					this.SendPropertyChanging();
					this._ENT_TEN_Id = value;
					this.SendPropertyChanged("ENT_TEN_Id");
					this.OnENT_TEN_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENT_Nombre", CanBeNull=false)]
		public string ENT_Nombre
		{
			get
			{
				return this._ENT_Nombre;
			}
			set
			{
				if ((this._ENT_Nombre != value))
				{
					this.OnENT_NombreChanging(value);
					this.SendPropertyChanging();
					this._ENT_Nombre = value;
					this.SendPropertyChanged("ENT_Nombre");
					this.OnENT_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENT_Email", CanBeNull=false)]
		public string ENT_Email
		{
			get
			{
				return this._ENT_Email;
			}
			set
			{
				if ((this._ENT_Email != value))
				{
					this.OnENT_EmailChanging(value);
					this.SendPropertyChanging();
					this._ENT_Email = value;
					this.SendPropertyChanged("ENT_Email");
					this.OnENT_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENT_EMP_Id")]
		public System.Nullable<int> ENT_EMP_Id
		{
			get
			{
				return this._ENT_EMP_Id;
			}
			set
			{
				if ((this._ENT_EMP_Id != value))
				{
					if (this._Empresas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnENT_EMP_IdChanging(value);
					this.SendPropertyChanging();
					this._ENT_EMP_Id = value;
					this.SendPropertyChanged("ENT_EMP_Id");
					this.OnENT_EMP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENT_OFI_Id")]
		public System.Nullable<int> ENT_OFI_Id
		{
			get
			{
				return this._ENT_OFI_Id;
			}
			set
			{
				if ((this._ENT_OFI_Id != value))
				{
					if (this._Oficinas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnENT_OFI_IdChanging(value);
					this.SendPropertyChanging();
					this._ENT_OFI_Id = value;
					this.SendPropertyChanged("ENT_OFI_Id");
					this.OnENT_OFI_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENT_EDE_Id")]
		public System.Nullable<int> ENT_EDE_Id
		{
			get
			{
				return this._ENT_EDE_Id;
			}
			set
			{
				if ((this._ENT_EDE_Id != value))
				{
					if (this._Empresas_Departamentos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnENT_EDE_IdChanging(value);
					this.SendPropertyChanging();
					this._ENT_EDE_Id = value;
					this.SendPropertyChanged("ENT_EDE_Id");
					this.OnENT_EDE_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entes_Tareas_Empresas_LineasEsfuerzo_LicenciasMS", Storage="_Tareas_Empresas_LineasEsfuerzo_LicenciasMS", ThisKey="ENT_Id", OtherKey="TCL_ENT_Id")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo_LicenciasMS> Tareas_Empresas_LineasEsfuerzo_LicenciasMS
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo_LicenciasMS;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo_LicenciasMS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entes_Tickets", Storage="_Tickets", ThisKey="ENT_Id", OtherKey="TKC_ENT_Id_Solicitante")]
		public EntitySet<Tickets> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entes_Proveedores_Asuntos", Storage="_Proveedores_Asuntos", ThisKey="ENT_Id", OtherKey="PAS_ENT_Id")]
		public EntitySet<Proveedores_Asuntos> Proveedores_Asuntos
		{
			get
			{
				return this._Proveedores_Asuntos;
			}
			set
			{
				this._Proveedores_Asuntos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entes_Entes_Aplicaciones", Storage="_Entes_Aplicaciones", ThisKey="ENT_Id", OtherKey="ENL_ENT_Id")]
		public EntitySet<Entes_Aplicaciones> Entes_Aplicaciones
		{
			get
			{
				return this._Entes_Aplicaciones;
			}
			set
			{
				this._Entes_Aplicaciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entes_Entes_LicenciasAnuales", Storage="_Entes_LicenciasAnuales", ThisKey="ENT_Id", OtherKey="ELA_ENT_Id")]
		public EntitySet<Entes_LicenciasAnuales> Entes_LicenciasAnuales
		{
			get
			{
				return this._Entes_LicenciasAnuales;
			}
			set
			{
				this._Entes_LicenciasAnuales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entes_Tareas_Empresas_LineasEsfuerzo_Aplicaciones", Storage="_Tareas_Empresas_LineasEsfuerzo_Aplicaciones", ThisKey="ENT_Id", OtherKey="TCA_ENT_Id")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo_Aplicaciones> Tareas_Empresas_LineasEsfuerzo_Aplicaciones
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo_Aplicaciones;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo_Aplicaciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entes_Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales", Storage="_Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales", ThisKey="ENT_Id", OtherKey="TCL_ENT_Id")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales> Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TiposEnte_Entes", Storage="_TiposEnte", ThisKey="ENT_TEN_Id", OtherKey="TEN_Id", IsForeignKey=true)]
		public TiposEnte TiposEnte
		{
			get
			{
				return this._TiposEnte.Entity;
			}
			set
			{
				TiposEnte previousValue = this._TiposEnte.Entity;
				if (((previousValue != value) 
							|| (this._TiposEnte.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TiposEnte.Entity = null;
						previousValue.Entes.Remove(this);
					}
					this._TiposEnte.Entity = value;
					if ((value != null))
					{
						value.Entes.Add(this);
						this._ENT_TEN_Id = value.TEN_Id;
					}
					else
					{
						this._ENT_TEN_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("TiposEnte");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Entes", Storage="_Empresas", ThisKey="ENT_EMP_Id", OtherKey="EMP_Id", IsForeignKey=true)]
		public Empresas Empresas
		{
			get
			{
				return this._Empresas.Entity;
			}
			set
			{
				Empresas previousValue = this._Empresas.Entity;
				if (((previousValue != value) 
							|| (this._Empresas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresas.Entity = null;
						previousValue.Entes.Remove(this);
					}
					this._Empresas.Entity = value;
					if ((value != null))
					{
						value.Entes.Add(this);
						this._ENT_EMP_Id = value.EMP_Id;
					}
					else
					{
						this._ENT_EMP_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Empresas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Oficinas_Entes", Storage="_Oficinas", ThisKey="ENT_OFI_Id", OtherKey="OFI_Id", IsForeignKey=true)]
		public Oficinas Oficinas
		{
			get
			{
				return this._Oficinas.Entity;
			}
			set
			{
				Oficinas previousValue = this._Oficinas.Entity;
				if (((previousValue != value) 
							|| (this._Oficinas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Oficinas.Entity = null;
						previousValue.Entes.Remove(this);
					}
					this._Oficinas.Entity = value;
					if ((value != null))
					{
						value.Entes.Add(this);
						this._ENT_OFI_Id = value.OFI_Id;
					}
					else
					{
						this._ENT_OFI_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Oficinas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Departamentos_Entes", Storage="_Empresas_Departamentos", ThisKey="ENT_EDE_Id", OtherKey="EDE_Id", IsForeignKey=true)]
		public Empresas_Departamentos Empresas_Departamentos
		{
			get
			{
				return this._Empresas_Departamentos.Entity;
			}
			set
			{
				Empresas_Departamentos previousValue = this._Empresas_Departamentos.Entity;
				if (((previousValue != value) 
							|| (this._Empresas_Departamentos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresas_Departamentos.Entity = null;
						previousValue.Entes.Remove(this);
					}
					this._Empresas_Departamentos.Entity = value;
					if ((value != null))
					{
						value.Entes.Add(this);
						this._ENT_EDE_Id = value.EDE_Id;
					}
					else
					{
						this._ENT_EDE_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Empresas_Departamentos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo_LicenciasMS(Tareas_Empresas_LineasEsfuerzo_LicenciasMS entity)
		{
			this.SendPropertyChanging();
			entity.Entes = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo_LicenciasMS(Tareas_Empresas_LineasEsfuerzo_LicenciasMS entity)
		{
			this.SendPropertyChanging();
			entity.Entes = null;
		}
		
		private void attach_Tickets(Tickets entity)
		{
			this.SendPropertyChanging();
			entity.Entes = this;
		}
		
		private void detach_Tickets(Tickets entity)
		{
			this.SendPropertyChanging();
			entity.Entes = null;
		}
		
		private void attach_Proveedores_Asuntos(Proveedores_Asuntos entity)
		{
			this.SendPropertyChanging();
			entity.Entes = this;
		}
		
		private void detach_Proveedores_Asuntos(Proveedores_Asuntos entity)
		{
			this.SendPropertyChanging();
			entity.Entes = null;
		}
		
		private void attach_Entes_Aplicaciones(Entes_Aplicaciones entity)
		{
			this.SendPropertyChanging();
			entity.Entes = this;
		}
		
		private void detach_Entes_Aplicaciones(Entes_Aplicaciones entity)
		{
			this.SendPropertyChanging();
			entity.Entes = null;
		}
		
		private void attach_Entes_LicenciasAnuales(Entes_LicenciasAnuales entity)
		{
			this.SendPropertyChanging();
			entity.Entes = this;
		}
		
		private void detach_Entes_LicenciasAnuales(Entes_LicenciasAnuales entity)
		{
			this.SendPropertyChanging();
			entity.Entes = null;
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo_Aplicaciones(Tareas_Empresas_LineasEsfuerzo_Aplicaciones entity)
		{
			this.SendPropertyChanging();
			entity.Entes = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo_Aplicaciones(Tareas_Empresas_LineasEsfuerzo_Aplicaciones entity)
		{
			this.SendPropertyChanging();
			entity.Entes = null;
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales(Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales entity)
		{
			this.SendPropertyChanging();
			entity.Entes = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales(Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales entity)
		{
			this.SendPropertyChanging();
			entity.Entes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Entes_Licencias : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ENL_ENT_Id;
		
		private int _ENL_LIC_Id;
		
		private System.DateTime _ENL_FechaInicio;
		
		private System.Nullable<System.DateTime> _ENL_FechaFin;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnENL_ENT_IdChanging(int value);
    partial void OnENL_ENT_IdChanged();
    partial void OnENL_LIC_IdChanging(int value);
    partial void OnENL_LIC_IdChanged();
    partial void OnENL_FechaInicioChanging(System.DateTime value);
    partial void OnENL_FechaInicioChanged();
    partial void OnENL_FechaFinChanging(System.Nullable<System.DateTime> value);
    partial void OnENL_FechaFinChanged();
    #endregion
		
		public Entes_Licencias()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENL_ENT_Id", IsPrimaryKey=true)]
		public int ENL_ENT_Id
		{
			get
			{
				return this._ENL_ENT_Id;
			}
			set
			{
				if ((this._ENL_ENT_Id != value))
				{
					this.OnENL_ENT_IdChanging(value);
					this.SendPropertyChanging();
					this._ENL_ENT_Id = value;
					this.SendPropertyChanged("ENL_ENT_Id");
					this.OnENL_ENT_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENL_LIC_Id", IsPrimaryKey=true)]
		public int ENL_LIC_Id
		{
			get
			{
				return this._ENL_LIC_Id;
			}
			set
			{
				if ((this._ENL_LIC_Id != value))
				{
					this.OnENL_LIC_IdChanging(value);
					this.SendPropertyChanging();
					this._ENL_LIC_Id = value;
					this.SendPropertyChanged("ENL_LIC_Id");
					this.OnENL_LIC_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENL_FechaInicio", IsPrimaryKey=true)]
		public System.DateTime ENL_FechaInicio
		{
			get
			{
				return this._ENL_FechaInicio;
			}
			set
			{
				if ((this._ENL_FechaInicio != value))
				{
					this.OnENL_FechaInicioChanging(value);
					this.SendPropertyChanging();
					this._ENL_FechaInicio = value;
					this.SendPropertyChanged("ENL_FechaInicio");
					this.OnENL_FechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENL_FechaFin")]
		public System.Nullable<System.DateTime> ENL_FechaFin
		{
			get
			{
				return this._ENL_FechaFin;
			}
			set
			{
				if ((this._ENL_FechaFin != value))
				{
					this.OnENL_FechaFinChanging(value);
					this.SendPropertyChanging();
					this._ENL_FechaFin = value;
					this.SendPropertyChanged("ENL_FechaFin");
					this.OnENL_FechaFinChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class EstadosTicket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ETK_Id;
		
		private string _ETK_Nombre;
		
		private EntitySet<Tickets> _Tickets;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnETK_IdChanging(int value);
    partial void OnETK_IdChanged();
    partial void OnETK_NombreChanging(string value);
    partial void OnETK_NombreChanged();
    #endregion
		
		public EstadosTicket()
		{
			this._Tickets = new EntitySet<Tickets>(new Action<Tickets>(this.attach_Tickets), new Action<Tickets>(this.detach_Tickets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ETK_Id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ETK_Id
		{
			get
			{
				return this._ETK_Id;
			}
			set
			{
				if ((this._ETK_Id != value))
				{
					this.OnETK_IdChanging(value);
					this.SendPropertyChanging();
					this._ETK_Id = value;
					this.SendPropertyChanged("ETK_Id");
					this.OnETK_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ETK_Nombre", CanBeNull=false)]
		public string ETK_Nombre
		{
			get
			{
				return this._ETK_Nombre;
			}
			set
			{
				if ((this._ETK_Nombre != value))
				{
					this.OnETK_NombreChanging(value);
					this.SendPropertyChanging();
					this._ETK_Nombre = value;
					this.SendPropertyChanged("ETK_Nombre");
					this.OnETK_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstadosTicket_Tickets", Storage="_Tickets", ThisKey="ETK_Id", OtherKey="TKC_ETK_Id")]
		public EntitySet<Tickets> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tickets(Tickets entity)
		{
			this.SendPropertyChanging();
			entity.EstadosTicket = this;
		}
		
		private void detach_Tickets(Tickets entity)
		{
			this.SendPropertyChanging();
			entity.EstadosTicket = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class GruposGuardia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GRG_Id;
		
		private string _GRG_Nombre;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGRG_IdChanging(int value);
    partial void OnGRG_IdChanged();
    partial void OnGRG_NombreChanging(string value);
    partial void OnGRG_NombreChanged();
    #endregion
		
		public GruposGuardia()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRG_Id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GRG_Id
		{
			get
			{
				return this._GRG_Id;
			}
			set
			{
				if ((this._GRG_Id != value))
				{
					this.OnGRG_IdChanging(value);
					this.SendPropertyChanging();
					this._GRG_Id = value;
					this.SendPropertyChanged("GRG_Id");
					this.OnGRG_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRG_Nombre", CanBeNull=false)]
		public string GRG_Nombre
		{
			get
			{
				return this._GRG_Nombre;
			}
			set
			{
				if ((this._GRG_Nombre != value))
				{
					this.OnGRG_NombreChanging(value);
					this.SendPropertyChanging();
					this._GRG_Nombre = value;
					this.SendPropertyChanged("GRG_Nombre");
					this.OnGRG_NombreChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class OrigenesTicket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OTK_Id;
		
		private string _OTK_Nombre;
		
		private EntitySet<Tickets> _Tickets;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOTK_IdChanging(int value);
    partial void OnOTK_IdChanged();
    partial void OnOTK_NombreChanging(string value);
    partial void OnOTK_NombreChanged();
    #endregion
		
		public OrigenesTicket()
		{
			this._Tickets = new EntitySet<Tickets>(new Action<Tickets>(this.attach_Tickets), new Action<Tickets>(this.detach_Tickets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTK_Id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OTK_Id
		{
			get
			{
				return this._OTK_Id;
			}
			set
			{
				if ((this._OTK_Id != value))
				{
					this.OnOTK_IdChanging(value);
					this.SendPropertyChanging();
					this._OTK_Id = value;
					this.SendPropertyChanged("OTK_Id");
					this.OnOTK_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTK_Nombre", CanBeNull=false)]
		public string OTK_Nombre
		{
			get
			{
				return this._OTK_Nombre;
			}
			set
			{
				if ((this._OTK_Nombre != value))
				{
					this.OnOTK_NombreChanging(value);
					this.SendPropertyChanging();
					this._OTK_Nombre = value;
					this.SendPropertyChanged("OTK_Nombre");
					this.OnOTK_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrigenesTicket_Tickets", Storage="_Tickets", ThisKey="OTK_Id", OtherKey="TKC_OTK_Id")]
		public EntitySet<Tickets> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tickets(Tickets entity)
		{
			this.SendPropertyChanging();
			entity.OrigenesTicket = this;
		}
		
		private void detach_Tickets(Tickets entity)
		{
			this.SendPropertyChanging();
			entity.OrigenesTicket = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class TiposTicket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TTK_Id;
		
		private string _TTK_Nombre;
		
		private EntitySet<Tickets> _Tickets;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTTK_IdChanging(int value);
    partial void OnTTK_IdChanged();
    partial void OnTTK_NombreChanging(string value);
    partial void OnTTK_NombreChanged();
    #endregion
		
		public TiposTicket()
		{
			this._Tickets = new EntitySet<Tickets>(new Action<Tickets>(this.attach_Tickets), new Action<Tickets>(this.detach_Tickets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TTK_Id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TTK_Id
		{
			get
			{
				return this._TTK_Id;
			}
			set
			{
				if ((this._TTK_Id != value))
				{
					this.OnTTK_IdChanging(value);
					this.SendPropertyChanging();
					this._TTK_Id = value;
					this.SendPropertyChanged("TTK_Id");
					this.OnTTK_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TTK_Nombre", CanBeNull=false)]
		public string TTK_Nombre
		{
			get
			{
				return this._TTK_Nombre;
			}
			set
			{
				if ((this._TTK_Nombre != value))
				{
					this.OnTTK_NombreChanging(value);
					this.SendPropertyChanging();
					this._TTK_Nombre = value;
					this.SendPropertyChanged("TTK_Nombre");
					this.OnTTK_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TiposTicket_Tickets", Storage="_Tickets", ThisKey="TTK_Id", OtherKey="TKC_TTK_Id")]
		public EntitySet<Tickets> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tickets(Tickets entity)
		{
			this.SendPropertyChanging();
			entity.TiposTicket = this;
		}
		
		private void detach_Tickets(Tickets entity)
		{
			this.SendPropertyChanging();
			entity.TiposTicket = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ValidacionesTicket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VTK_Id;
		
		private string _VTK_Nombre;
		
		private EntitySet<Tickets> _Tickets;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVTK_IdChanging(int value);
    partial void OnVTK_IdChanged();
    partial void OnVTK_NombreChanging(string value);
    partial void OnVTK_NombreChanged();
    #endregion
		
		public ValidacionesTicket()
		{
			this._Tickets = new EntitySet<Tickets>(new Action<Tickets>(this.attach_Tickets), new Action<Tickets>(this.detach_Tickets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VTK_Id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VTK_Id
		{
			get
			{
				return this._VTK_Id;
			}
			set
			{
				if ((this._VTK_Id != value))
				{
					this.OnVTK_IdChanging(value);
					this.SendPropertyChanging();
					this._VTK_Id = value;
					this.SendPropertyChanged("VTK_Id");
					this.OnVTK_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VTK_Nombre", CanBeNull=false)]
		public string VTK_Nombre
		{
			get
			{
				return this._VTK_Nombre;
			}
			set
			{
				if ((this._VTK_Nombre != value))
				{
					this.OnVTK_NombreChanging(value);
					this.SendPropertyChanging();
					this._VTK_Nombre = value;
					this.SendPropertyChanged("VTK_Nombre");
					this.OnVTK_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidacionesTicket_Tickets", Storage="_Tickets", ThisKey="VTK_Id", OtherKey="TKC_VTK_Id")]
		public EntitySet<Tickets> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tickets(Tickets entity)
		{
			this.SendPropertyChanging();
			entity.ValidacionesTicket = this;
		}
		
		private void detach_Tickets(Tickets entity)
		{
			this.SendPropertyChanging();
			entity.ValidacionesTicket = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Tareas_Empresas_LineasEsfuerzo_LicenciasMS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TCL_TLE_Id;
		
		private int _TCL_LIC_Id;
		
		private int _TCL_ENT_Id;
		
		private decimal _TCL_Importe;
		
		private EntityRef<Licencias> _Licencias;
		
		private EntityRef<Entes> _Entes;
		
		private EntityRef<Tareas_Empresas_LineasEsfuerzo> _Tareas_Empresas_LineasEsfuerzo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTCL_TLE_IdChanging(int value);
    partial void OnTCL_TLE_IdChanged();
    partial void OnTCL_LIC_IdChanging(int value);
    partial void OnTCL_LIC_IdChanged();
    partial void OnTCL_ENT_IdChanging(int value);
    partial void OnTCL_ENT_IdChanged();
    partial void OnTCL_ImporteChanging(decimal value);
    partial void OnTCL_ImporteChanged();
    #endregion
		
		public Tareas_Empresas_LineasEsfuerzo_LicenciasMS()
		{
			this._Licencias = default(EntityRef<Licencias>);
			this._Entes = default(EntityRef<Entes>);
			this._Tareas_Empresas_LineasEsfuerzo = default(EntityRef<Tareas_Empresas_LineasEsfuerzo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCL_TLE_Id", IsPrimaryKey=true)]
		public int TCL_TLE_Id
		{
			get
			{
				return this._TCL_TLE_Id;
			}
			set
			{
				if ((this._TCL_TLE_Id != value))
				{
					if (this._Tareas_Empresas_LineasEsfuerzo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTCL_TLE_IdChanging(value);
					this.SendPropertyChanging();
					this._TCL_TLE_Id = value;
					this.SendPropertyChanged("TCL_TLE_Id");
					this.OnTCL_TLE_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCL_LIC_Id", IsPrimaryKey=true)]
		public int TCL_LIC_Id
		{
			get
			{
				return this._TCL_LIC_Id;
			}
			set
			{
				if ((this._TCL_LIC_Id != value))
				{
					if (this._Licencias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTCL_LIC_IdChanging(value);
					this.SendPropertyChanging();
					this._TCL_LIC_Id = value;
					this.SendPropertyChanged("TCL_LIC_Id");
					this.OnTCL_LIC_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCL_ENT_Id", IsPrimaryKey=true)]
		public int TCL_ENT_Id
		{
			get
			{
				return this._TCL_ENT_Id;
			}
			set
			{
				if ((this._TCL_ENT_Id != value))
				{
					if (this._Entes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTCL_ENT_IdChanging(value);
					this.SendPropertyChanging();
					this._TCL_ENT_Id = value;
					this.SendPropertyChanged("TCL_ENT_Id");
					this.OnTCL_ENT_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCL_Importe")]
		public decimal TCL_Importe
		{
			get
			{
				return this._TCL_Importe;
			}
			set
			{
				if ((this._TCL_Importe != value))
				{
					this.OnTCL_ImporteChanging(value);
					this.SendPropertyChanging();
					this._TCL_Importe = value;
					this.SendPropertyChanged("TCL_Importe");
					this.OnTCL_ImporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Licencias_Tareas_Empresas_LineasEsfuerzo_LicenciasMS", Storage="_Licencias", ThisKey="TCL_LIC_Id", OtherKey="LIC_Id", IsForeignKey=true)]
		public Licencias Licencias
		{
			get
			{
				return this._Licencias.Entity;
			}
			set
			{
				Licencias previousValue = this._Licencias.Entity;
				if (((previousValue != value) 
							|| (this._Licencias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Licencias.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo_LicenciasMS.Remove(this);
					}
					this._Licencias.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo_LicenciasMS.Add(this);
						this._TCL_LIC_Id = value.LIC_Id;
					}
					else
					{
						this._TCL_LIC_Id = default(int);
					}
					this.SendPropertyChanged("Licencias");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entes_Tareas_Empresas_LineasEsfuerzo_LicenciasMS", Storage="_Entes", ThisKey="TCL_ENT_Id", OtherKey="ENT_Id", IsForeignKey=true)]
		public Entes Entes
		{
			get
			{
				return this._Entes.Entity;
			}
			set
			{
				Entes previousValue = this._Entes.Entity;
				if (((previousValue != value) 
							|| (this._Entes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entes.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo_LicenciasMS.Remove(this);
					}
					this._Entes.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo_LicenciasMS.Add(this);
						this._TCL_ENT_Id = value.ENT_Id;
					}
					else
					{
						this._TCL_ENT_Id = default(int);
					}
					this.SendPropertyChanged("Entes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Empresas_LineasEsfuerzo_Tareas_Empresas_LineasEsfuerzo_LicenciasMS", Storage="_Tareas_Empresas_LineasEsfuerzo", ThisKey="TCL_TLE_Id", OtherKey="TLE_Id", IsForeignKey=true)]
		public Tareas_Empresas_LineasEsfuerzo Tareas_Empresas_LineasEsfuerzo
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo.Entity;
			}
			set
			{
				Tareas_Empresas_LineasEsfuerzo previousValue = this._Tareas_Empresas_LineasEsfuerzo.Entity;
				if (((previousValue != value) 
							|| (this._Tareas_Empresas_LineasEsfuerzo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tareas_Empresas_LineasEsfuerzo.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo_LicenciasMS.Remove(this);
					}
					this._Tareas_Empresas_LineasEsfuerzo.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo_LicenciasMS.Add(this);
						this._TCL_TLE_Id = value.TLE_Id;
					}
					else
					{
						this._TCL_TLE_Id = default(int);
					}
					this.SendPropertyChanged("Tareas_Empresas_LineasEsfuerzo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Licencias_TiposEnte : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LTE_LIC_Id;
		
		private int _LTE_TEN_Id;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLTE_LIC_IdChanging(int value);
    partial void OnLTE_LIC_IdChanged();
    partial void OnLTE_TEN_IdChanging(int value);
    partial void OnLTE_TEN_IdChanged();
    #endregion
		
		public Licencias_TiposEnte()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LTE_LIC_Id", IsPrimaryKey=true)]
		public int LTE_LIC_Id
		{
			get
			{
				return this._LTE_LIC_Id;
			}
			set
			{
				if ((this._LTE_LIC_Id != value))
				{
					this.OnLTE_LIC_IdChanging(value);
					this.SendPropertyChanging();
					this._LTE_LIC_Id = value;
					this.SendPropertyChanged("LTE_LIC_Id");
					this.OnLTE_LIC_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LTE_TEN_Id", IsPrimaryKey=true)]
		public int LTE_TEN_Id
		{
			get
			{
				return this._LTE_TEN_Id;
			}
			set
			{
				if ((this._LTE_TEN_Id != value))
				{
					this.OnLTE_TEN_IdChanging(value);
					this.SendPropertyChanging();
					this._LTE_TEN_Id = value;
					this.SendPropertyChanged("LTE_TEN_Id");
					this.OnLTE_TEN_IdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Licencias_Excepciones_LicenciasReemplazo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LEL_LIE_LIC_Id;
		
		private int _LEL_LIE_EMP_Id;
		
		private int _LEL_LIC_Id_Reemplazo;
		
		private EntityRef<Licencias_Excepciones> _Licencias_Excepciones;
		
		private EntityRef<Empresas> _Empresas;
		
		private EntityRef<Licencias> _Licencias;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLEL_LIE_LIC_IdChanging(int value);
    partial void OnLEL_LIE_LIC_IdChanged();
    partial void OnLEL_LIE_EMP_IdChanging(int value);
    partial void OnLEL_LIE_EMP_IdChanged();
    partial void OnLEL_LIC_Id_ReemplazoChanging(int value);
    partial void OnLEL_LIC_Id_ReemplazoChanged();
    #endregion
		
		public Licencias_Excepciones_LicenciasReemplazo()
		{
			this._Licencias_Excepciones = default(EntityRef<Licencias_Excepciones>);
			this._Empresas = default(EntityRef<Empresas>);
			this._Licencias = default(EntityRef<Licencias>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LEL_LIE_LIC_Id", IsPrimaryKey=true)]
		public int LEL_LIE_LIC_Id
		{
			get
			{
				return this._LEL_LIE_LIC_Id;
			}
			set
			{
				if ((this._LEL_LIE_LIC_Id != value))
				{
					if (this._Licencias_Excepciones.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLEL_LIE_LIC_IdChanging(value);
					this.SendPropertyChanging();
					this._LEL_LIE_LIC_Id = value;
					this.SendPropertyChanged("LEL_LIE_LIC_Id");
					this.OnLEL_LIE_LIC_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LEL_LIE_EMP_Id", IsPrimaryKey=true)]
		public int LEL_LIE_EMP_Id
		{
			get
			{
				return this._LEL_LIE_EMP_Id;
			}
			set
			{
				if ((this._LEL_LIE_EMP_Id != value))
				{
					if (this._Empresas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLEL_LIE_EMP_IdChanging(value);
					this.SendPropertyChanging();
					this._LEL_LIE_EMP_Id = value;
					this.SendPropertyChanged("LEL_LIE_EMP_Id");
					this.OnLEL_LIE_EMP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LEL_LIC_Id_Reemplazo", IsPrimaryKey=true)]
		public int LEL_LIC_Id_Reemplazo
		{
			get
			{
				return this._LEL_LIC_Id_Reemplazo;
			}
			set
			{
				if ((this._LEL_LIC_Id_Reemplazo != value))
				{
					if (this._Licencias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLEL_LIC_Id_ReemplazoChanging(value);
					this.SendPropertyChanging();
					this._LEL_LIC_Id_Reemplazo = value;
					this.SendPropertyChanged("LEL_LIC_Id_Reemplazo");
					this.OnLEL_LIC_Id_ReemplazoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Licencias_Excepciones_Licencias_Excepciones_LicenciasReemplazo", Storage="_Licencias_Excepciones", ThisKey="LEL_LIE_LIC_Id", OtherKey="LIE_LIC_Id", IsForeignKey=true)]
		public Licencias_Excepciones Licencias_Excepciones
		{
			get
			{
				return this._Licencias_Excepciones.Entity;
			}
			set
			{
				Licencias_Excepciones previousValue = this._Licencias_Excepciones.Entity;
				if (((previousValue != value) 
							|| (this._Licencias_Excepciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Licencias_Excepciones.Entity = null;
						previousValue.Licencias_Excepciones_LicenciasReemplazo.Remove(this);
					}
					this._Licencias_Excepciones.Entity = value;
					if ((value != null))
					{
						value.Licencias_Excepciones_LicenciasReemplazo.Add(this);
						this._LEL_LIE_LIC_Id = value.LIE_LIC_Id;
					}
					else
					{
						this._LEL_LIE_LIC_Id = default(int);
					}
					this.SendPropertyChanged("Licencias_Excepciones");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Licencias_Excepciones_LicenciasReemplazo", Storage="_Empresas", ThisKey="LEL_LIE_EMP_Id", OtherKey="EMP_Id", IsForeignKey=true)]
		public Empresas Empresas
		{
			get
			{
				return this._Empresas.Entity;
			}
			set
			{
				Empresas previousValue = this._Empresas.Entity;
				if (((previousValue != value) 
							|| (this._Empresas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresas.Entity = null;
						previousValue.Licencias_Excepciones_LicenciasReemplazo.Remove(this);
					}
					this._Empresas.Entity = value;
					if ((value != null))
					{
						value.Licencias_Excepciones_LicenciasReemplazo.Add(this);
						this._LEL_LIE_EMP_Id = value.EMP_Id;
					}
					else
					{
						this._LEL_LIE_EMP_Id = default(int);
					}
					this.SendPropertyChanged("Empresas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Licencias_Licencias_Excepciones_LicenciasReemplazo", Storage="_Licencias", ThisKey="LEL_LIC_Id_Reemplazo", OtherKey="LIC_Id", IsForeignKey=true)]
		public Licencias Licencias
		{
			get
			{
				return this._Licencias.Entity;
			}
			set
			{
				Licencias previousValue = this._Licencias.Entity;
				if (((previousValue != value) 
							|| (this._Licencias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Licencias.Entity = null;
						previousValue.Licencias_Excepciones_LicenciasReemplazo.Remove(this);
					}
					this._Licencias.Entity = value;
					if ((value != null))
					{
						value.Licencias_Excepciones_LicenciasReemplazo.Add(this);
						this._LEL_LIC_Id_Reemplazo = value.LIC_Id;
					}
					else
					{
						this._LEL_LIC_Id_Reemplazo = default(int);
					}
					this.SendPropertyChanged("Licencias");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ContratosCAU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CCA_Id;
		
		private System.DateTime _CCA_FechaInicio;
		
		private System.DateTime _CCA_FechaFin;
		
		private decimal _CCA_CosteHoraF;
		
		private decimal _CCA_CosteHoraD;
		
		private decimal _CCA_CosteHoraG;
		
		private decimal _CCA_PrecioGuardia;
		
		private int _CCA_TAR_Id_F;
		
		private int _CCA_TAR_Id_D;
		
		private int _CCA_TAR_Id_G;
		
		private int _CCA_TAR_Id_S;
		
		private decimal _CCA_CosteHoraS;
		
		private EntitySet<ContratosCAU_ExcluidasGuardia> _ContratosCAU_ExcluidasGuardia;
		
		private EntityRef<Tareas> _Tareas;
		
		private EntityRef<Tareas> _Tareas1;
		
		private EntityRef<Tareas> _Tareas2;
		
		private EntityRef<Tareas> _Tareas3;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCCA_IdChanging(int value);
    partial void OnCCA_IdChanged();
    partial void OnCCA_FechaInicioChanging(System.DateTime value);
    partial void OnCCA_FechaInicioChanged();
    partial void OnCCA_FechaFinChanging(System.DateTime value);
    partial void OnCCA_FechaFinChanged();
    partial void OnCCA_CosteHoraFChanging(decimal value);
    partial void OnCCA_CosteHoraFChanged();
    partial void OnCCA_CosteHoraDChanging(decimal value);
    partial void OnCCA_CosteHoraDChanged();
    partial void OnCCA_CosteHoraGChanging(decimal value);
    partial void OnCCA_CosteHoraGChanged();
    partial void OnCCA_PrecioGuardiaChanging(decimal value);
    partial void OnCCA_PrecioGuardiaChanged();
    partial void OnCCA_TAR_Id_FChanging(int value);
    partial void OnCCA_TAR_Id_FChanged();
    partial void OnCCA_TAR_Id_DChanging(int value);
    partial void OnCCA_TAR_Id_DChanged();
    partial void OnCCA_TAR_Id_GChanging(int value);
    partial void OnCCA_TAR_Id_GChanged();
    partial void OnCCA_TAR_Id_SChanging(int value);
    partial void OnCCA_TAR_Id_SChanged();
    partial void OnCCA_CosteHoraSChanging(decimal value);
    partial void OnCCA_CosteHoraSChanged();
    #endregion
		
		public ContratosCAU()
		{
			this._ContratosCAU_ExcluidasGuardia = new EntitySet<ContratosCAU_ExcluidasGuardia>(new Action<ContratosCAU_ExcluidasGuardia>(this.attach_ContratosCAU_ExcluidasGuardia), new Action<ContratosCAU_ExcluidasGuardia>(this.detach_ContratosCAU_ExcluidasGuardia));
			this._Tareas = default(EntityRef<Tareas>);
			this._Tareas1 = default(EntityRef<Tareas>);
			this._Tareas2 = default(EntityRef<Tareas>);
			this._Tareas3 = default(EntityRef<Tareas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCA_Id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CCA_Id
		{
			get
			{
				return this._CCA_Id;
			}
			set
			{
				if ((this._CCA_Id != value))
				{
					this.OnCCA_IdChanging(value);
					this.SendPropertyChanging();
					this._CCA_Id = value;
					this.SendPropertyChanged("CCA_Id");
					this.OnCCA_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCA_FechaInicio")]
		public System.DateTime CCA_FechaInicio
		{
			get
			{
				return this._CCA_FechaInicio;
			}
			set
			{
				if ((this._CCA_FechaInicio != value))
				{
					this.OnCCA_FechaInicioChanging(value);
					this.SendPropertyChanging();
					this._CCA_FechaInicio = value;
					this.SendPropertyChanged("CCA_FechaInicio");
					this.OnCCA_FechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCA_FechaFin")]
		public System.DateTime CCA_FechaFin
		{
			get
			{
				return this._CCA_FechaFin;
			}
			set
			{
				if ((this._CCA_FechaFin != value))
				{
					this.OnCCA_FechaFinChanging(value);
					this.SendPropertyChanging();
					this._CCA_FechaFin = value;
					this.SendPropertyChanged("CCA_FechaFin");
					this.OnCCA_FechaFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCA_CosteHoraF")]
		public decimal CCA_CosteHoraF
		{
			get
			{
				return this._CCA_CosteHoraF;
			}
			set
			{
				if ((this._CCA_CosteHoraF != value))
				{
					this.OnCCA_CosteHoraFChanging(value);
					this.SendPropertyChanging();
					this._CCA_CosteHoraF = value;
					this.SendPropertyChanged("CCA_CosteHoraF");
					this.OnCCA_CosteHoraFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCA_CosteHoraD")]
		public decimal CCA_CosteHoraD
		{
			get
			{
				return this._CCA_CosteHoraD;
			}
			set
			{
				if ((this._CCA_CosteHoraD != value))
				{
					this.OnCCA_CosteHoraDChanging(value);
					this.SendPropertyChanging();
					this._CCA_CosteHoraD = value;
					this.SendPropertyChanged("CCA_CosteHoraD");
					this.OnCCA_CosteHoraDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCA_CosteHoraG")]
		public decimal CCA_CosteHoraG
		{
			get
			{
				return this._CCA_CosteHoraG;
			}
			set
			{
				if ((this._CCA_CosteHoraG != value))
				{
					this.OnCCA_CosteHoraGChanging(value);
					this.SendPropertyChanging();
					this._CCA_CosteHoraG = value;
					this.SendPropertyChanged("CCA_CosteHoraG");
					this.OnCCA_CosteHoraGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCA_PrecioGuardia")]
		public decimal CCA_PrecioGuardia
		{
			get
			{
				return this._CCA_PrecioGuardia;
			}
			set
			{
				if ((this._CCA_PrecioGuardia != value))
				{
					this.OnCCA_PrecioGuardiaChanging(value);
					this.SendPropertyChanging();
					this._CCA_PrecioGuardia = value;
					this.SendPropertyChanged("CCA_PrecioGuardia");
					this.OnCCA_PrecioGuardiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCA_TAR_Id_F")]
		public int CCA_TAR_Id_F
		{
			get
			{
				return this._CCA_TAR_Id_F;
			}
			set
			{
				if ((this._CCA_TAR_Id_F != value))
				{
					if (this._Tareas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCCA_TAR_Id_FChanging(value);
					this.SendPropertyChanging();
					this._CCA_TAR_Id_F = value;
					this.SendPropertyChanged("CCA_TAR_Id_F");
					this.OnCCA_TAR_Id_FChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCA_TAR_Id_D")]
		public int CCA_TAR_Id_D
		{
			get
			{
				return this._CCA_TAR_Id_D;
			}
			set
			{
				if ((this._CCA_TAR_Id_D != value))
				{
					if (this._Tareas1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCCA_TAR_Id_DChanging(value);
					this.SendPropertyChanging();
					this._CCA_TAR_Id_D = value;
					this.SendPropertyChanged("CCA_TAR_Id_D");
					this.OnCCA_TAR_Id_DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCA_TAR_Id_G")]
		public int CCA_TAR_Id_G
		{
			get
			{
				return this._CCA_TAR_Id_G;
			}
			set
			{
				if ((this._CCA_TAR_Id_G != value))
				{
					if (this._Tareas2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCCA_TAR_Id_GChanging(value);
					this.SendPropertyChanging();
					this._CCA_TAR_Id_G = value;
					this.SendPropertyChanged("CCA_TAR_Id_G");
					this.OnCCA_TAR_Id_GChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCA_TAR_Id_S")]
		public int CCA_TAR_Id_S
		{
			get
			{
				return this._CCA_TAR_Id_S;
			}
			set
			{
				if ((this._CCA_TAR_Id_S != value))
				{
					if (this._Tareas3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCCA_TAR_Id_SChanging(value);
					this.SendPropertyChanging();
					this._CCA_TAR_Id_S = value;
					this.SendPropertyChanged("CCA_TAR_Id_S");
					this.OnCCA_TAR_Id_SChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCA_CosteHoraS")]
		public decimal CCA_CosteHoraS
		{
			get
			{
				return this._CCA_CosteHoraS;
			}
			set
			{
				if ((this._CCA_CosteHoraS != value))
				{
					this.OnCCA_CosteHoraSChanging(value);
					this.SendPropertyChanging();
					this._CCA_CosteHoraS = value;
					this.SendPropertyChanged("CCA_CosteHoraS");
					this.OnCCA_CosteHoraSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContratosCAU_ContratosCAU_ExcluidasGuardia", Storage="_ContratosCAU_ExcluidasGuardia", ThisKey="CCA_Id", OtherKey="CEE_CCA_Id")]
		public EntitySet<ContratosCAU_ExcluidasGuardia> ContratosCAU_ExcluidasGuardia
		{
			get
			{
				return this._ContratosCAU_ExcluidasGuardia;
			}
			set
			{
				this._ContratosCAU_ExcluidasGuardia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_ContratosCAU", Storage="_Tareas", ThisKey="CCA_TAR_Id_F", OtherKey="TAR_Id", IsForeignKey=true)]
		public Tareas Tareas
		{
			get
			{
				return this._Tareas.Entity;
			}
			set
			{
				Tareas previousValue = this._Tareas.Entity;
				if (((previousValue != value) 
							|| (this._Tareas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tareas.Entity = null;
						previousValue.ContratosCAU.Remove(this);
					}
					this._Tareas.Entity = value;
					if ((value != null))
					{
						value.ContratosCAU.Add(this);
						this._CCA_TAR_Id_F = value.TAR_Id;
					}
					else
					{
						this._CCA_TAR_Id_F = default(int);
					}
					this.SendPropertyChanged("Tareas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_ContratosCAU1", Storage="_Tareas1", ThisKey="CCA_TAR_Id_D", OtherKey="TAR_Id", IsForeignKey=true)]
		public Tareas Tareas1
		{
			get
			{
				return this._Tareas1.Entity;
			}
			set
			{
				Tareas previousValue = this._Tareas1.Entity;
				if (((previousValue != value) 
							|| (this._Tareas1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tareas1.Entity = null;
						previousValue.ContratosCAU1.Remove(this);
					}
					this._Tareas1.Entity = value;
					if ((value != null))
					{
						value.ContratosCAU1.Add(this);
						this._CCA_TAR_Id_D = value.TAR_Id;
					}
					else
					{
						this._CCA_TAR_Id_D = default(int);
					}
					this.SendPropertyChanged("Tareas1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_ContratosCAU2", Storage="_Tareas2", ThisKey="CCA_TAR_Id_G", OtherKey="TAR_Id", IsForeignKey=true)]
		public Tareas Tareas2
		{
			get
			{
				return this._Tareas2.Entity;
			}
			set
			{
				Tareas previousValue = this._Tareas2.Entity;
				if (((previousValue != value) 
							|| (this._Tareas2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tareas2.Entity = null;
						previousValue.ContratosCAU2.Remove(this);
					}
					this._Tareas2.Entity = value;
					if ((value != null))
					{
						value.ContratosCAU2.Add(this);
						this._CCA_TAR_Id_G = value.TAR_Id;
					}
					else
					{
						this._CCA_TAR_Id_G = default(int);
					}
					this.SendPropertyChanged("Tareas2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_ContratosCAU3", Storage="_Tareas3", ThisKey="CCA_TAR_Id_S", OtherKey="TAR_Id", IsForeignKey=true)]
		public Tareas Tareas3
		{
			get
			{
				return this._Tareas3.Entity;
			}
			set
			{
				Tareas previousValue = this._Tareas3.Entity;
				if (((previousValue != value) 
							|| (this._Tareas3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tareas3.Entity = null;
						previousValue.ContratosCAU3.Remove(this);
					}
					this._Tareas3.Entity = value;
					if ((value != null))
					{
						value.ContratosCAU3.Add(this);
						this._CCA_TAR_Id_S = value.TAR_Id;
					}
					else
					{
						this._CCA_TAR_Id_S = default(int);
					}
					this.SendPropertyChanged("Tareas3");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContratosCAU_ExcluidasGuardia(ContratosCAU_ExcluidasGuardia entity)
		{
			this.SendPropertyChanging();
			entity.ContratosCAU = this;
		}
		
		private void detach_ContratosCAU_ExcluidasGuardia(ContratosCAU_ExcluidasGuardia entity)
		{
			this.SendPropertyChanging();
			entity.ContratosCAU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Tickets : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TKC_Id;
		
		private string _TKC_Titulo;
		
		private int _TKC_ETK_Id;
		
		private int _TKC_TTK_Id;
		
		private System.DateTime _TKC_FechaApertura;
		
		private int _TKC_ENT_Id_Solicitante;
		
		private string _TKC_GrupoAsignado;
		
		private string _TKC_Categoria;
		
		private string _TKC_Descripcion;
		
		private int _TKC_VTK_Id;
		
		private int _TKC_Duracion;
		
		private string _TKC_Ubicacion;
		
		private string _TKC_ProveedorAsignado;
		
		private string _TKC_GrupoCargo;
		
		private System.Nullable<int> _TKC_OTK_Id;
		
		private System.DateTime _TKC_FechaResolucion;
		
		private int _TKC_CTK_Id;
		
		private System.Nullable<int> _TKC_Id_GLPI;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo_Tickets> _Tareas_Empresas_LineasEsfuerzo_Tickets;
		
		private EntityRef<EstadosTicket> _EstadosTicket;
		
		private EntityRef<TiposTicket> _TiposTicket;
		
		private EntityRef<ValidacionesTicket> _ValidacionesTicket;
		
		private EntityRef<OrigenesTicket> _OrigenesTicket;
		
		private EntityRef<CategoriasTicket> _CategoriasTicket;
		
		private EntityRef<Entes> _Entes;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTKC_IdChanging(int value);
    partial void OnTKC_IdChanged();
    partial void OnTKC_TituloChanging(string value);
    partial void OnTKC_TituloChanged();
    partial void OnTKC_ETK_IdChanging(int value);
    partial void OnTKC_ETK_IdChanged();
    partial void OnTKC_TTK_IdChanging(int value);
    partial void OnTKC_TTK_IdChanged();
    partial void OnTKC_FechaAperturaChanging(System.DateTime value);
    partial void OnTKC_FechaAperturaChanged();
    partial void OnTKC_ENT_Id_SolicitanteChanging(int value);
    partial void OnTKC_ENT_Id_SolicitanteChanged();
    partial void OnTKC_GrupoAsignadoChanging(string value);
    partial void OnTKC_GrupoAsignadoChanged();
    partial void OnTKC_CategoriaChanging(string value);
    partial void OnTKC_CategoriaChanged();
    partial void OnTKC_DescripcionChanging(string value);
    partial void OnTKC_DescripcionChanged();
    partial void OnTKC_VTK_IdChanging(int value);
    partial void OnTKC_VTK_IdChanged();
    partial void OnTKC_DuracionChanging(int value);
    partial void OnTKC_DuracionChanged();
    partial void OnTKC_UbicacionChanging(string value);
    partial void OnTKC_UbicacionChanged();
    partial void OnTKC_ProveedorAsignadoChanging(string value);
    partial void OnTKC_ProveedorAsignadoChanged();
    partial void OnTKC_GrupoCargoChanging(string value);
    partial void OnTKC_GrupoCargoChanged();
    partial void OnTKC_OTK_IdChanging(System.Nullable<int> value);
    partial void OnTKC_OTK_IdChanged();
    partial void OnTKC_FechaResolucionChanging(System.DateTime value);
    partial void OnTKC_FechaResolucionChanged();
    partial void OnTKC_CTK_IdChanging(int value);
    partial void OnTKC_CTK_IdChanged();
    partial void OnTKC_Id_GLPIChanging(System.Nullable<int> value);
    partial void OnTKC_Id_GLPIChanged();
    #endregion
		
		public Tickets()
		{
			this._Tareas_Empresas_LineasEsfuerzo_Tickets = new EntitySet<Tareas_Empresas_LineasEsfuerzo_Tickets>(new Action<Tareas_Empresas_LineasEsfuerzo_Tickets>(this.attach_Tareas_Empresas_LineasEsfuerzo_Tickets), new Action<Tareas_Empresas_LineasEsfuerzo_Tickets>(this.detach_Tareas_Empresas_LineasEsfuerzo_Tickets));
			this._EstadosTicket = default(EntityRef<EstadosTicket>);
			this._TiposTicket = default(EntityRef<TiposTicket>);
			this._ValidacionesTicket = default(EntityRef<ValidacionesTicket>);
			this._OrigenesTicket = default(EntityRef<OrigenesTicket>);
			this._CategoriasTicket = default(EntityRef<CategoriasTicket>);
			this._Entes = default(EntityRef<Entes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TKC_Id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TKC_Id
		{
			get
			{
				return this._TKC_Id;
			}
			set
			{
				if ((this._TKC_Id != value))
				{
					this.OnTKC_IdChanging(value);
					this.SendPropertyChanging();
					this._TKC_Id = value;
					this.SendPropertyChanged("TKC_Id");
					this.OnTKC_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TKC_Titulo", CanBeNull=false)]
		public string TKC_Titulo
		{
			get
			{
				return this._TKC_Titulo;
			}
			set
			{
				if ((this._TKC_Titulo != value))
				{
					this.OnTKC_TituloChanging(value);
					this.SendPropertyChanging();
					this._TKC_Titulo = value;
					this.SendPropertyChanged("TKC_Titulo");
					this.OnTKC_TituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TKC_ETK_Id")]
		public int TKC_ETK_Id
		{
			get
			{
				return this._TKC_ETK_Id;
			}
			set
			{
				if ((this._TKC_ETK_Id != value))
				{
					if (this._EstadosTicket.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTKC_ETK_IdChanging(value);
					this.SendPropertyChanging();
					this._TKC_ETK_Id = value;
					this.SendPropertyChanged("TKC_ETK_Id");
					this.OnTKC_ETK_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TKC_TTK_Id")]
		public int TKC_TTK_Id
		{
			get
			{
				return this._TKC_TTK_Id;
			}
			set
			{
				if ((this._TKC_TTK_Id != value))
				{
					if (this._TiposTicket.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTKC_TTK_IdChanging(value);
					this.SendPropertyChanging();
					this._TKC_TTK_Id = value;
					this.SendPropertyChanged("TKC_TTK_Id");
					this.OnTKC_TTK_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TKC_FechaApertura")]
		public System.DateTime TKC_FechaApertura
		{
			get
			{
				return this._TKC_FechaApertura;
			}
			set
			{
				if ((this._TKC_FechaApertura != value))
				{
					this.OnTKC_FechaAperturaChanging(value);
					this.SendPropertyChanging();
					this._TKC_FechaApertura = value;
					this.SendPropertyChanged("TKC_FechaApertura");
					this.OnTKC_FechaAperturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TKC_ENT_Id_Solicitante")]
		public int TKC_ENT_Id_Solicitante
		{
			get
			{
				return this._TKC_ENT_Id_Solicitante;
			}
			set
			{
				if ((this._TKC_ENT_Id_Solicitante != value))
				{
					if (this._Entes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTKC_ENT_Id_SolicitanteChanging(value);
					this.SendPropertyChanging();
					this._TKC_ENT_Id_Solicitante = value;
					this.SendPropertyChanged("TKC_ENT_Id_Solicitante");
					this.OnTKC_ENT_Id_SolicitanteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TKC_GrupoAsignado", CanBeNull=false)]
		public string TKC_GrupoAsignado
		{
			get
			{
				return this._TKC_GrupoAsignado;
			}
			set
			{
				if ((this._TKC_GrupoAsignado != value))
				{
					this.OnTKC_GrupoAsignadoChanging(value);
					this.SendPropertyChanging();
					this._TKC_GrupoAsignado = value;
					this.SendPropertyChanged("TKC_GrupoAsignado");
					this.OnTKC_GrupoAsignadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TKC_Categoria")]
		public string TKC_Categoria
		{
			get
			{
				return this._TKC_Categoria;
			}
			set
			{
				if ((this._TKC_Categoria != value))
				{
					this.OnTKC_CategoriaChanging(value);
					this.SendPropertyChanging();
					this._TKC_Categoria = value;
					this.SendPropertyChanged("TKC_Categoria");
					this.OnTKC_CategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TKC_Descripcion")]
		public string TKC_Descripcion
		{
			get
			{
				return this._TKC_Descripcion;
			}
			set
			{
				if ((this._TKC_Descripcion != value))
				{
					this.OnTKC_DescripcionChanging(value);
					this.SendPropertyChanging();
					this._TKC_Descripcion = value;
					this.SendPropertyChanged("TKC_Descripcion");
					this.OnTKC_DescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TKC_VTK_Id")]
		public int TKC_VTK_Id
		{
			get
			{
				return this._TKC_VTK_Id;
			}
			set
			{
				if ((this._TKC_VTK_Id != value))
				{
					if (this._ValidacionesTicket.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTKC_VTK_IdChanging(value);
					this.SendPropertyChanging();
					this._TKC_VTK_Id = value;
					this.SendPropertyChanged("TKC_VTK_Id");
					this.OnTKC_VTK_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TKC_Duracion")]
		public int TKC_Duracion
		{
			get
			{
				return this._TKC_Duracion;
			}
			set
			{
				if ((this._TKC_Duracion != value))
				{
					this.OnTKC_DuracionChanging(value);
					this.SendPropertyChanging();
					this._TKC_Duracion = value;
					this.SendPropertyChanged("TKC_Duracion");
					this.OnTKC_DuracionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TKC_Ubicacion")]
		public string TKC_Ubicacion
		{
			get
			{
				return this._TKC_Ubicacion;
			}
			set
			{
				if ((this._TKC_Ubicacion != value))
				{
					this.OnTKC_UbicacionChanging(value);
					this.SendPropertyChanging();
					this._TKC_Ubicacion = value;
					this.SendPropertyChanged("TKC_Ubicacion");
					this.OnTKC_UbicacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TKC_ProveedorAsignado")]
		public string TKC_ProveedorAsignado
		{
			get
			{
				return this._TKC_ProveedorAsignado;
			}
			set
			{
				if ((this._TKC_ProveedorAsignado != value))
				{
					this.OnTKC_ProveedorAsignadoChanging(value);
					this.SendPropertyChanging();
					this._TKC_ProveedorAsignado = value;
					this.SendPropertyChanged("TKC_ProveedorAsignado");
					this.OnTKC_ProveedorAsignadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TKC_GrupoCargo")]
		public string TKC_GrupoCargo
		{
			get
			{
				return this._TKC_GrupoCargo;
			}
			set
			{
				if ((this._TKC_GrupoCargo != value))
				{
					this.OnTKC_GrupoCargoChanging(value);
					this.SendPropertyChanging();
					this._TKC_GrupoCargo = value;
					this.SendPropertyChanged("TKC_GrupoCargo");
					this.OnTKC_GrupoCargoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TKC_OTK_Id")]
		public System.Nullable<int> TKC_OTK_Id
		{
			get
			{
				return this._TKC_OTK_Id;
			}
			set
			{
				if ((this._TKC_OTK_Id != value))
				{
					if (this._OrigenesTicket.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTKC_OTK_IdChanging(value);
					this.SendPropertyChanging();
					this._TKC_OTK_Id = value;
					this.SendPropertyChanged("TKC_OTK_Id");
					this.OnTKC_OTK_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TKC_FechaResolucion")]
		public System.DateTime TKC_FechaResolucion
		{
			get
			{
				return this._TKC_FechaResolucion;
			}
			set
			{
				if ((this._TKC_FechaResolucion != value))
				{
					this.OnTKC_FechaResolucionChanging(value);
					this.SendPropertyChanging();
					this._TKC_FechaResolucion = value;
					this.SendPropertyChanged("TKC_FechaResolucion");
					this.OnTKC_FechaResolucionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TKC_CTK_Id")]
		public int TKC_CTK_Id
		{
			get
			{
				return this._TKC_CTK_Id;
			}
			set
			{
				if ((this._TKC_CTK_Id != value))
				{
					if (this._CategoriasTicket.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTKC_CTK_IdChanging(value);
					this.SendPropertyChanging();
					this._TKC_CTK_Id = value;
					this.SendPropertyChanged("TKC_CTK_Id");
					this.OnTKC_CTK_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TKC_Id_GLPI")]
		public System.Nullable<int> TKC_Id_GLPI
		{
			get
			{
				return this._TKC_Id_GLPI;
			}
			set
			{
				if ((this._TKC_Id_GLPI != value))
				{
					this.OnTKC_Id_GLPIChanging(value);
					this.SendPropertyChanging();
					this._TKC_Id_GLPI = value;
					this.SendPropertyChanged("TKC_Id_GLPI");
					this.OnTKC_Id_GLPIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tickets_Tareas_Empresas_LineasEsfuerzo_Tickets", Storage="_Tareas_Empresas_LineasEsfuerzo_Tickets", ThisKey="TKC_Id", OtherKey="TCT_TKC_Id")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo_Tickets> Tareas_Empresas_LineasEsfuerzo_Tickets
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo_Tickets;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo_Tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstadosTicket_Tickets", Storage="_EstadosTicket", ThisKey="TKC_ETK_Id", OtherKey="ETK_Id", IsForeignKey=true)]
		public EstadosTicket EstadosTicket
		{
			get
			{
				return this._EstadosTicket.Entity;
			}
			set
			{
				EstadosTicket previousValue = this._EstadosTicket.Entity;
				if (((previousValue != value) 
							|| (this._EstadosTicket.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstadosTicket.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._EstadosTicket.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._TKC_ETK_Id = value.ETK_Id;
					}
					else
					{
						this._TKC_ETK_Id = default(int);
					}
					this.SendPropertyChanged("EstadosTicket");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TiposTicket_Tickets", Storage="_TiposTicket", ThisKey="TKC_TTK_Id", OtherKey="TTK_Id", IsForeignKey=true)]
		public TiposTicket TiposTicket
		{
			get
			{
				return this._TiposTicket.Entity;
			}
			set
			{
				TiposTicket previousValue = this._TiposTicket.Entity;
				if (((previousValue != value) 
							|| (this._TiposTicket.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TiposTicket.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._TiposTicket.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._TKC_TTK_Id = value.TTK_Id;
					}
					else
					{
						this._TKC_TTK_Id = default(int);
					}
					this.SendPropertyChanged("TiposTicket");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ValidacionesTicket_Tickets", Storage="_ValidacionesTicket", ThisKey="TKC_VTK_Id", OtherKey="VTK_Id", IsForeignKey=true)]
		public ValidacionesTicket ValidacionesTicket
		{
			get
			{
				return this._ValidacionesTicket.Entity;
			}
			set
			{
				ValidacionesTicket previousValue = this._ValidacionesTicket.Entity;
				if (((previousValue != value) 
							|| (this._ValidacionesTicket.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ValidacionesTicket.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._ValidacionesTicket.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._TKC_VTK_Id = value.VTK_Id;
					}
					else
					{
						this._TKC_VTK_Id = default(int);
					}
					this.SendPropertyChanged("ValidacionesTicket");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrigenesTicket_Tickets", Storage="_OrigenesTicket", ThisKey="TKC_OTK_Id", OtherKey="OTK_Id", IsForeignKey=true)]
		public OrigenesTicket OrigenesTicket
		{
			get
			{
				return this._OrigenesTicket.Entity;
			}
			set
			{
				OrigenesTicket previousValue = this._OrigenesTicket.Entity;
				if (((previousValue != value) 
							|| (this._OrigenesTicket.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrigenesTicket.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._OrigenesTicket.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._TKC_OTK_Id = value.OTK_Id;
					}
					else
					{
						this._TKC_OTK_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrigenesTicket");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategoriasTicket_Tickets", Storage="_CategoriasTicket", ThisKey="TKC_CTK_Id", OtherKey="CTK_Id", IsForeignKey=true)]
		public CategoriasTicket CategoriasTicket
		{
			get
			{
				return this._CategoriasTicket.Entity;
			}
			set
			{
				CategoriasTicket previousValue = this._CategoriasTicket.Entity;
				if (((previousValue != value) 
							|| (this._CategoriasTicket.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CategoriasTicket.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._CategoriasTicket.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._TKC_CTK_Id = value.CTK_Id;
					}
					else
					{
						this._TKC_CTK_Id = default(int);
					}
					this.SendPropertyChanged("CategoriasTicket");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entes_Tickets", Storage="_Entes", ThisKey="TKC_ENT_Id_Solicitante", OtherKey="ENT_Id", IsForeignKey=true)]
		public Entes Entes
		{
			get
			{
				return this._Entes.Entity;
			}
			set
			{
				Entes previousValue = this._Entes.Entity;
				if (((previousValue != value) 
							|| (this._Entes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entes.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._Entes.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._TKC_ENT_Id_Solicitante = value.ENT_Id;
					}
					else
					{
						this._TKC_ENT_Id_Solicitante = default(int);
					}
					this.SendPropertyChanged("Entes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo_Tickets(Tareas_Empresas_LineasEsfuerzo_Tickets entity)
		{
			this.SendPropertyChanging();
			entity.Tickets = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo_Tickets(Tareas_Empresas_LineasEsfuerzo_Tickets entity)
		{
			this.SendPropertyChanging();
			entity.Tickets = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Proveedores_ContratosSoporte : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PVC_Id;
		
		private int _PVC_PRV_Id;
		
		private System.DateTime _PVC_FechaInicio;
		
		private System.Nullable<System.DateTime> _PVC_FechaFin;
		
		private System.Nullable<decimal> _PVC_PrecioHora;
		
		private System.Nullable<decimal> _PVC_HorasContratadas;
		
		private EntitySet<Proveedores_ContratosSoporte_Reparto> _Proveedores_ContratosSoporte_Reparto;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo_Asuntos> _Tareas_Empresas_LineasEsfuerzo_Asuntos;
		
		private EntityRef<Proveedores> _Proveedores;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPVC_IdChanging(int value);
    partial void OnPVC_IdChanged();
    partial void OnPVC_PRV_IdChanging(int value);
    partial void OnPVC_PRV_IdChanged();
    partial void OnPVC_FechaInicioChanging(System.DateTime value);
    partial void OnPVC_FechaInicioChanged();
    partial void OnPVC_FechaFinChanging(System.Nullable<System.DateTime> value);
    partial void OnPVC_FechaFinChanged();
    partial void OnPVC_PrecioHoraChanging(System.Nullable<decimal> value);
    partial void OnPVC_PrecioHoraChanged();
    partial void OnPVC_HorasContratadasChanging(System.Nullable<decimal> value);
    partial void OnPVC_HorasContratadasChanged();
    #endregion
		
		public Proveedores_ContratosSoporte()
		{
			this._Proveedores_ContratosSoporte_Reparto = new EntitySet<Proveedores_ContratosSoporte_Reparto>(new Action<Proveedores_ContratosSoporte_Reparto>(this.attach_Proveedores_ContratosSoporte_Reparto), new Action<Proveedores_ContratosSoporte_Reparto>(this.detach_Proveedores_ContratosSoporte_Reparto));
			this._Tareas_Empresas_LineasEsfuerzo_Asuntos = new EntitySet<Tareas_Empresas_LineasEsfuerzo_Asuntos>(new Action<Tareas_Empresas_LineasEsfuerzo_Asuntos>(this.attach_Tareas_Empresas_LineasEsfuerzo_Asuntos), new Action<Tareas_Empresas_LineasEsfuerzo_Asuntos>(this.detach_Tareas_Empresas_LineasEsfuerzo_Asuntos));
			this._Proveedores = default(EntityRef<Proveedores>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PVC_Id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PVC_Id
		{
			get
			{
				return this._PVC_Id;
			}
			set
			{
				if ((this._PVC_Id != value))
				{
					this.OnPVC_IdChanging(value);
					this.SendPropertyChanging();
					this._PVC_Id = value;
					this.SendPropertyChanged("PVC_Id");
					this.OnPVC_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PVC_PRV_Id")]
		public int PVC_PRV_Id
		{
			get
			{
				return this._PVC_PRV_Id;
			}
			set
			{
				if ((this._PVC_PRV_Id != value))
				{
					if (this._Proveedores.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPVC_PRV_IdChanging(value);
					this.SendPropertyChanging();
					this._PVC_PRV_Id = value;
					this.SendPropertyChanged("PVC_PRV_Id");
					this.OnPVC_PRV_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PVC_FechaInicio")]
		public System.DateTime PVC_FechaInicio
		{
			get
			{
				return this._PVC_FechaInicio;
			}
			set
			{
				if ((this._PVC_FechaInicio != value))
				{
					this.OnPVC_FechaInicioChanging(value);
					this.SendPropertyChanging();
					this._PVC_FechaInicio = value;
					this.SendPropertyChanged("PVC_FechaInicio");
					this.OnPVC_FechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PVC_FechaFin")]
		public System.Nullable<System.DateTime> PVC_FechaFin
		{
			get
			{
				return this._PVC_FechaFin;
			}
			set
			{
				if ((this._PVC_FechaFin != value))
				{
					this.OnPVC_FechaFinChanging(value);
					this.SendPropertyChanging();
					this._PVC_FechaFin = value;
					this.SendPropertyChanged("PVC_FechaFin");
					this.OnPVC_FechaFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PVC_PrecioHora")]
		public System.Nullable<decimal> PVC_PrecioHora
		{
			get
			{
				return this._PVC_PrecioHora;
			}
			set
			{
				if ((this._PVC_PrecioHora != value))
				{
					this.OnPVC_PrecioHoraChanging(value);
					this.SendPropertyChanging();
					this._PVC_PrecioHora = value;
					this.SendPropertyChanged("PVC_PrecioHora");
					this.OnPVC_PrecioHoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PVC_HorasContratadas")]
		public System.Nullable<decimal> PVC_HorasContratadas
		{
			get
			{
				return this._PVC_HorasContratadas;
			}
			set
			{
				if ((this._PVC_HorasContratadas != value))
				{
					this.OnPVC_HorasContratadasChanging(value);
					this.SendPropertyChanging();
					this._PVC_HorasContratadas = value;
					this.SendPropertyChanged("PVC_HorasContratadas");
					this.OnPVC_HorasContratadasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedores_ContratosSoporte_Proveedores_ContratosSoporte_Reparto", Storage="_Proveedores_ContratosSoporte_Reparto", ThisKey="PVC_Id", OtherKey="PVR_PVC_Id")]
		public EntitySet<Proveedores_ContratosSoporte_Reparto> Proveedores_ContratosSoporte_Reparto
		{
			get
			{
				return this._Proveedores_ContratosSoporte_Reparto;
			}
			set
			{
				this._Proveedores_ContratosSoporte_Reparto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedores_ContratosSoporte_Tareas_Empresas_LineasEsfuerzo_Asuntos", Storage="_Tareas_Empresas_LineasEsfuerzo_Asuntos", ThisKey="PVC_Id", OtherKey="TCA_PVC_Id")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo_Asuntos> Tareas_Empresas_LineasEsfuerzo_Asuntos
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo_Asuntos;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo_Asuntos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedores_Proveedores_ContratosSoporte", Storage="_Proveedores", ThisKey="PVC_PRV_Id", OtherKey="PRV_Id", IsForeignKey=true)]
		public Proveedores Proveedores
		{
			get
			{
				return this._Proveedores.Entity;
			}
			set
			{
				Proveedores previousValue = this._Proveedores.Entity;
				if (((previousValue != value) 
							|| (this._Proveedores.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proveedores.Entity = null;
						previousValue.Proveedores_ContratosSoporte.Remove(this);
					}
					this._Proveedores.Entity = value;
					if ((value != null))
					{
						value.Proveedores_ContratosSoporte.Add(this);
						this._PVC_PRV_Id = value.PRV_Id;
					}
					else
					{
						this._PVC_PRV_Id = default(int);
					}
					this.SendPropertyChanged("Proveedores");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Proveedores_ContratosSoporte_Reparto(Proveedores_ContratosSoporte_Reparto entity)
		{
			this.SendPropertyChanging();
			entity.Proveedores_ContratosSoporte = this;
		}
		
		private void detach_Proveedores_ContratosSoporte_Reparto(Proveedores_ContratosSoporte_Reparto entity)
		{
			this.SendPropertyChanging();
			entity.Proveedores_ContratosSoporte = null;
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo_Asuntos(Tareas_Empresas_LineasEsfuerzo_Asuntos entity)
		{
			this.SendPropertyChanging();
			entity.Proveedores_ContratosSoporte = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo_Asuntos(Tareas_Empresas_LineasEsfuerzo_Asuntos entity)
		{
			this.SendPropertyChanging();
			entity.Proveedores_ContratosSoporte = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Proveedores_Asuntos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PAS_Id;
		
		private int _PAS_PRV_Id;
		
		private int _PAS_Anyo;
		
		private int _PAS_Mes;
		
		private System.Nullable<System.DateTime> _PAS_Fecha;
		
		private System.Nullable<int> _PAS_ENT_Id;
		
		private System.Nullable<int> _PAS_EMP_Id;
		
		private string _PAS_Descripcion;
		
		private decimal _PAS_Horas;
		
		private string _PAS_NumFacturaP;
		
		private string _PAS_CodigoExterno;
		
		private System.Nullable<int> _PAS_TKC_Id_GLPI;
		
		private decimal _PAS_Importe;
		
		private System.Nullable<int> _PAS_TAR_Id;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo_Asuntos> _Tareas_Empresas_LineasEsfuerzo_Asuntos;
		
		private EntityRef<Proveedores> _Proveedores;
		
		private EntityRef<Entes> _Entes;
		
		private EntityRef<Empresas> _Empresas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPAS_IdChanging(int value);
    partial void OnPAS_IdChanged();
    partial void OnPAS_PRV_IdChanging(int value);
    partial void OnPAS_PRV_IdChanged();
    partial void OnPAS_AnyoChanging(int value);
    partial void OnPAS_AnyoChanged();
    partial void OnPAS_MesChanging(int value);
    partial void OnPAS_MesChanged();
    partial void OnPAS_FechaChanging(System.Nullable<System.DateTime> value);
    partial void OnPAS_FechaChanged();
    partial void OnPAS_ENT_IdChanging(System.Nullable<int> value);
    partial void OnPAS_ENT_IdChanged();
    partial void OnPAS_EMP_IdChanging(System.Nullable<int> value);
    partial void OnPAS_EMP_IdChanged();
    partial void OnPAS_DescripcionChanging(string value);
    partial void OnPAS_DescripcionChanged();
    partial void OnPAS_HorasChanging(decimal value);
    partial void OnPAS_HorasChanged();
    partial void OnPAS_NumFacturaPChanging(string value);
    partial void OnPAS_NumFacturaPChanged();
    partial void OnPAS_CodigoExternoChanging(string value);
    partial void OnPAS_CodigoExternoChanged();
    partial void OnPAS_TKC_Id_GLPIChanging(System.Nullable<int> value);
    partial void OnPAS_TKC_Id_GLPIChanged();
    partial void OnPAS_ImporteChanging(decimal value);
    partial void OnPAS_ImporteChanged();
    partial void OnPAS_TAR_IdChanging(System.Nullable<int> value);
    partial void OnPAS_TAR_IdChanged();
    #endregion
		
		public Proveedores_Asuntos()
		{
			this._Tareas_Empresas_LineasEsfuerzo_Asuntos = new EntitySet<Tareas_Empresas_LineasEsfuerzo_Asuntos>(new Action<Tareas_Empresas_LineasEsfuerzo_Asuntos>(this.attach_Tareas_Empresas_LineasEsfuerzo_Asuntos), new Action<Tareas_Empresas_LineasEsfuerzo_Asuntos>(this.detach_Tareas_Empresas_LineasEsfuerzo_Asuntos));
			this._Proveedores = default(EntityRef<Proveedores>);
			this._Entes = default(EntityRef<Entes>);
			this._Empresas = default(EntityRef<Empresas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAS_Id", DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PAS_Id
		{
			get
			{
				return this._PAS_Id;
			}
			set
			{
				if ((this._PAS_Id != value))
				{
					this.OnPAS_IdChanging(value);
					this.SendPropertyChanging();
					this._PAS_Id = value;
					this.SendPropertyChanged("PAS_Id");
					this.OnPAS_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAS_PRV_Id")]
		public int PAS_PRV_Id
		{
			get
			{
				return this._PAS_PRV_Id;
			}
			set
			{
				if ((this._PAS_PRV_Id != value))
				{
					if (this._Proveedores.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAS_PRV_IdChanging(value);
					this.SendPropertyChanging();
					this._PAS_PRV_Id = value;
					this.SendPropertyChanged("PAS_PRV_Id");
					this.OnPAS_PRV_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAS_Anyo")]
		public int PAS_Anyo
		{
			get
			{
				return this._PAS_Anyo;
			}
			set
			{
				if ((this._PAS_Anyo != value))
				{
					this.OnPAS_AnyoChanging(value);
					this.SendPropertyChanging();
					this._PAS_Anyo = value;
					this.SendPropertyChanged("PAS_Anyo");
					this.OnPAS_AnyoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAS_Mes")]
		public int PAS_Mes
		{
			get
			{
				return this._PAS_Mes;
			}
			set
			{
				if ((this._PAS_Mes != value))
				{
					this.OnPAS_MesChanging(value);
					this.SendPropertyChanging();
					this._PAS_Mes = value;
					this.SendPropertyChanged("PAS_Mes");
					this.OnPAS_MesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAS_Fecha")]
		public System.Nullable<System.DateTime> PAS_Fecha
		{
			get
			{
				return this._PAS_Fecha;
			}
			set
			{
				if ((this._PAS_Fecha != value))
				{
					this.OnPAS_FechaChanging(value);
					this.SendPropertyChanging();
					this._PAS_Fecha = value;
					this.SendPropertyChanged("PAS_Fecha");
					this.OnPAS_FechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAS_ENT_Id")]
		public System.Nullable<int> PAS_ENT_Id
		{
			get
			{
				return this._PAS_ENT_Id;
			}
			set
			{
				if ((this._PAS_ENT_Id != value))
				{
					if (this._Entes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAS_ENT_IdChanging(value);
					this.SendPropertyChanging();
					this._PAS_ENT_Id = value;
					this.SendPropertyChanged("PAS_ENT_Id");
					this.OnPAS_ENT_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAS_EMP_Id")]
		public System.Nullable<int> PAS_EMP_Id
		{
			get
			{
				return this._PAS_EMP_Id;
			}
			set
			{
				if ((this._PAS_EMP_Id != value))
				{
					if (this._Empresas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPAS_EMP_IdChanging(value);
					this.SendPropertyChanging();
					this._PAS_EMP_Id = value;
					this.SendPropertyChanged("PAS_EMP_Id");
					this.OnPAS_EMP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAS_Descripcion")]
		public string PAS_Descripcion
		{
			get
			{
				return this._PAS_Descripcion;
			}
			set
			{
				if ((this._PAS_Descripcion != value))
				{
					this.OnPAS_DescripcionChanging(value);
					this.SendPropertyChanging();
					this._PAS_Descripcion = value;
					this.SendPropertyChanged("PAS_Descripcion");
					this.OnPAS_DescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAS_Horas")]
		public decimal PAS_Horas
		{
			get
			{
				return this._PAS_Horas;
			}
			set
			{
				if ((this._PAS_Horas != value))
				{
					this.OnPAS_HorasChanging(value);
					this.SendPropertyChanging();
					this._PAS_Horas = value;
					this.SendPropertyChanged("PAS_Horas");
					this.OnPAS_HorasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAS_NumFacturaP")]
		public string PAS_NumFacturaP
		{
			get
			{
				return this._PAS_NumFacturaP;
			}
			set
			{
				if ((this._PAS_NumFacturaP != value))
				{
					this.OnPAS_NumFacturaPChanging(value);
					this.SendPropertyChanging();
					this._PAS_NumFacturaP = value;
					this.SendPropertyChanged("PAS_NumFacturaP");
					this.OnPAS_NumFacturaPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAS_CodigoExterno")]
		public string PAS_CodigoExterno
		{
			get
			{
				return this._PAS_CodigoExterno;
			}
			set
			{
				if ((this._PAS_CodigoExterno != value))
				{
					this.OnPAS_CodigoExternoChanging(value);
					this.SendPropertyChanging();
					this._PAS_CodigoExterno = value;
					this.SendPropertyChanged("PAS_CodigoExterno");
					this.OnPAS_CodigoExternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAS_TKC_Id_GLPI")]
		public System.Nullable<int> PAS_TKC_Id_GLPI
		{
			get
			{
				return this._PAS_TKC_Id_GLPI;
			}
			set
			{
				if ((this._PAS_TKC_Id_GLPI != value))
				{
					this.OnPAS_TKC_Id_GLPIChanging(value);
					this.SendPropertyChanging();
					this._PAS_TKC_Id_GLPI = value;
					this.SendPropertyChanged("PAS_TKC_Id_GLPI");
					this.OnPAS_TKC_Id_GLPIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAS_Importe")]
		public decimal PAS_Importe
		{
			get
			{
				return this._PAS_Importe;
			}
			set
			{
				if ((this._PAS_Importe != value))
				{
					this.OnPAS_ImporteChanging(value);
					this.SendPropertyChanging();
					this._PAS_Importe = value;
					this.SendPropertyChanged("PAS_Importe");
					this.OnPAS_ImporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAS_TAR_Id")]
		public System.Nullable<int> PAS_TAR_Id
		{
			get
			{
				return this._PAS_TAR_Id;
			}
			set
			{
				if ((this._PAS_TAR_Id != value))
				{
					this.OnPAS_TAR_IdChanging(value);
					this.SendPropertyChanging();
					this._PAS_TAR_Id = value;
					this.SendPropertyChanged("PAS_TAR_Id");
					this.OnPAS_TAR_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedores_Asuntos_Tareas_Empresas_LineasEsfuerzo_Asuntos", Storage="_Tareas_Empresas_LineasEsfuerzo_Asuntos", ThisKey="PAS_Id", OtherKey="TCA_PAS_Id")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo_Asuntos> Tareas_Empresas_LineasEsfuerzo_Asuntos
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo_Asuntos;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo_Asuntos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedores_Proveedores_Asuntos", Storage="_Proveedores", ThisKey="PAS_PRV_Id", OtherKey="PRV_Id", IsForeignKey=true)]
		public Proveedores Proveedores
		{
			get
			{
				return this._Proveedores.Entity;
			}
			set
			{
				Proveedores previousValue = this._Proveedores.Entity;
				if (((previousValue != value) 
							|| (this._Proveedores.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proveedores.Entity = null;
						previousValue.Proveedores_Asuntos.Remove(this);
					}
					this._Proveedores.Entity = value;
					if ((value != null))
					{
						value.Proveedores_Asuntos.Add(this);
						this._PAS_PRV_Id = value.PRV_Id;
					}
					else
					{
						this._PAS_PRV_Id = default(int);
					}
					this.SendPropertyChanged("Proveedores");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entes_Proveedores_Asuntos", Storage="_Entes", ThisKey="PAS_ENT_Id", OtherKey="ENT_Id", IsForeignKey=true)]
		public Entes Entes
		{
			get
			{
				return this._Entes.Entity;
			}
			set
			{
				Entes previousValue = this._Entes.Entity;
				if (((previousValue != value) 
							|| (this._Entes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entes.Entity = null;
						previousValue.Proveedores_Asuntos.Remove(this);
					}
					this._Entes.Entity = value;
					if ((value != null))
					{
						value.Proveedores_Asuntos.Add(this);
						this._PAS_ENT_Id = value.ENT_Id;
					}
					else
					{
						this._PAS_ENT_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Entes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Proveedores_Asuntos", Storage="_Empresas", ThisKey="PAS_EMP_Id", OtherKey="EMP_Id", IsForeignKey=true)]
		public Empresas Empresas
		{
			get
			{
				return this._Empresas.Entity;
			}
			set
			{
				Empresas previousValue = this._Empresas.Entity;
				if (((previousValue != value) 
							|| (this._Empresas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresas.Entity = null;
						previousValue.Proveedores_Asuntos.Remove(this);
					}
					this._Empresas.Entity = value;
					if ((value != null))
					{
						value.Proveedores_Asuntos.Add(this);
						this._PAS_EMP_Id = value.EMP_Id;
					}
					else
					{
						this._PAS_EMP_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Empresas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo_Asuntos(Tareas_Empresas_LineasEsfuerzo_Asuntos entity)
		{
			this.SendPropertyChanging();
			entity.Proveedores_Asuntos = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo_Asuntos(Tareas_Empresas_LineasEsfuerzo_Asuntos entity)
		{
			this.SendPropertyChanging();
			entity.Proveedores_Asuntos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Licencias_Incompatibles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LIL_LIC_Id1;
		
		private int _LIL_LIC_Id2;
		
		private EntityRef<Licencias> _Licencias;
		
		private EntityRef<Licencias> _Licencias1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLIL_LIC_Id1Changing(int value);
    partial void OnLIL_LIC_Id1Changed();
    partial void OnLIL_LIC_Id2Changing(int value);
    partial void OnLIL_LIC_Id2Changed();
    #endregion
		
		public Licencias_Incompatibles()
		{
			this._Licencias = default(EntityRef<Licencias>);
			this._Licencias1 = default(EntityRef<Licencias>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIL_LIC_Id1", IsPrimaryKey=true)]
		public int LIL_LIC_Id1
		{
			get
			{
				return this._LIL_LIC_Id1;
			}
			set
			{
				if ((this._LIL_LIC_Id1 != value))
				{
					if (this._Licencias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLIL_LIC_Id1Changing(value);
					this.SendPropertyChanging();
					this._LIL_LIC_Id1 = value;
					this.SendPropertyChanged("LIL_LIC_Id1");
					this.OnLIL_LIC_Id1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIL_LIC_Id2", IsPrimaryKey=true)]
		public int LIL_LIC_Id2
		{
			get
			{
				return this._LIL_LIC_Id2;
			}
			set
			{
				if ((this._LIL_LIC_Id2 != value))
				{
					if (this._Licencias1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLIL_LIC_Id2Changing(value);
					this.SendPropertyChanging();
					this._LIL_LIC_Id2 = value;
					this.SendPropertyChanged("LIL_LIC_Id2");
					this.OnLIL_LIC_Id2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Licencias_Licencias_Incompatibles", Storage="_Licencias", ThisKey="LIL_LIC_Id1", OtherKey="LIC_Id", IsForeignKey=true)]
		public Licencias Licencias
		{
			get
			{
				return this._Licencias.Entity;
			}
			set
			{
				Licencias previousValue = this._Licencias.Entity;
				if (((previousValue != value) 
							|| (this._Licencias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Licencias.Entity = null;
						previousValue.Licencias_Incompatibles.Remove(this);
					}
					this._Licencias.Entity = value;
					if ((value != null))
					{
						value.Licencias_Incompatibles.Add(this);
						this._LIL_LIC_Id1 = value.LIC_Id;
					}
					else
					{
						this._LIL_LIC_Id1 = default(int);
					}
					this.SendPropertyChanged("Licencias");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Licencias_Licencias_Incompatibles1", Storage="_Licencias1", ThisKey="LIL_LIC_Id2", OtherKey="LIC_Id", IsForeignKey=true)]
		public Licencias Licencias1
		{
			get
			{
				return this._Licencias1.Entity;
			}
			set
			{
				Licencias previousValue = this._Licencias1.Entity;
				if (((previousValue != value) 
							|| (this._Licencias1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Licencias1.Entity = null;
						previousValue.Licencias_Incompatibles1.Remove(this);
					}
					this._Licencias1.Entity = value;
					if ((value != null))
					{
						value.Licencias_Incompatibles1.Add(this);
						this._LIL_LIC_Id2 = value.LIC_Id;
					}
					else
					{
						this._LIL_LIC_Id2 = default(int);
					}
					this.SendPropertyChanged("Licencias1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Tareas_Empresas_LineasEsfuerzo_Tickets : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TCT_TLE_Id;
		
		private int _TCT_TKC_Id;
		
		private decimal _TCT_Importe;
		
		private System.Nullable<int> _TCT_PER_Id;
		
		private EntityRef<Tareas_Empresas_LineasEsfuerzo> _Tareas_Empresas_LineasEsfuerzo;
		
		private EntityRef<Tickets> _Tickets;
		
		private EntityRef<Personas> _Personas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTCT_TLE_IdChanging(int value);
    partial void OnTCT_TLE_IdChanged();
    partial void OnTCT_TKC_IdChanging(int value);
    partial void OnTCT_TKC_IdChanged();
    partial void OnTCT_ImporteChanging(decimal value);
    partial void OnTCT_ImporteChanged();
    partial void OnTCT_PER_IdChanging(System.Nullable<int> value);
    partial void OnTCT_PER_IdChanged();
    #endregion
		
		public Tareas_Empresas_LineasEsfuerzo_Tickets()
		{
			this._Tareas_Empresas_LineasEsfuerzo = default(EntityRef<Tareas_Empresas_LineasEsfuerzo>);
			this._Tickets = default(EntityRef<Tickets>);
			this._Personas = default(EntityRef<Personas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCT_TLE_Id", IsPrimaryKey=true)]
		public int TCT_TLE_Id
		{
			get
			{
				return this._TCT_TLE_Id;
			}
			set
			{
				if ((this._TCT_TLE_Id != value))
				{
					if (this._Tareas_Empresas_LineasEsfuerzo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTCT_TLE_IdChanging(value);
					this.SendPropertyChanging();
					this._TCT_TLE_Id = value;
					this.SendPropertyChanged("TCT_TLE_Id");
					this.OnTCT_TLE_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCT_TKC_Id", IsPrimaryKey=true)]
		public int TCT_TKC_Id
		{
			get
			{
				return this._TCT_TKC_Id;
			}
			set
			{
				if ((this._TCT_TKC_Id != value))
				{
					if (this._Tickets.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTCT_TKC_IdChanging(value);
					this.SendPropertyChanging();
					this._TCT_TKC_Id = value;
					this.SendPropertyChanged("TCT_TKC_Id");
					this.OnTCT_TKC_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCT_Importe")]
		public decimal TCT_Importe
		{
			get
			{
				return this._TCT_Importe;
			}
			set
			{
				if ((this._TCT_Importe != value))
				{
					this.OnTCT_ImporteChanging(value);
					this.SendPropertyChanging();
					this._TCT_Importe = value;
					this.SendPropertyChanged("TCT_Importe");
					this.OnTCT_ImporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCT_PER_Id")]
		public System.Nullable<int> TCT_PER_Id
		{
			get
			{
				return this._TCT_PER_Id;
			}
			set
			{
				if ((this._TCT_PER_Id != value))
				{
					if (this._Personas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTCT_PER_IdChanging(value);
					this.SendPropertyChanging();
					this._TCT_PER_Id = value;
					this.SendPropertyChanged("TCT_PER_Id");
					this.OnTCT_PER_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Empresas_LineasEsfuerzo_Tareas_Empresas_LineasEsfuerzo_Tickets", Storage="_Tareas_Empresas_LineasEsfuerzo", ThisKey="TCT_TLE_Id", OtherKey="TLE_Id", IsForeignKey=true)]
		public Tareas_Empresas_LineasEsfuerzo Tareas_Empresas_LineasEsfuerzo
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo.Entity;
			}
			set
			{
				Tareas_Empresas_LineasEsfuerzo previousValue = this._Tareas_Empresas_LineasEsfuerzo.Entity;
				if (((previousValue != value) 
							|| (this._Tareas_Empresas_LineasEsfuerzo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tareas_Empresas_LineasEsfuerzo.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo_Tickets.Remove(this);
					}
					this._Tareas_Empresas_LineasEsfuerzo.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo_Tickets.Add(this);
						this._TCT_TLE_Id = value.TLE_Id;
					}
					else
					{
						this._TCT_TLE_Id = default(int);
					}
					this.SendPropertyChanged("Tareas_Empresas_LineasEsfuerzo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tickets_Tareas_Empresas_LineasEsfuerzo_Tickets", Storage="_Tickets", ThisKey="TCT_TKC_Id", OtherKey="TKC_Id", IsForeignKey=true)]
		public Tickets Tickets
		{
			get
			{
				return this._Tickets.Entity;
			}
			set
			{
				Tickets previousValue = this._Tickets.Entity;
				if (((previousValue != value) 
							|| (this._Tickets.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tickets.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo_Tickets.Remove(this);
					}
					this._Tickets.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo_Tickets.Add(this);
						this._TCT_TKC_Id = value.TKC_Id;
					}
					else
					{
						this._TCT_TKC_Id = default(int);
					}
					this.SendPropertyChanged("Tickets");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Tareas_Empresas_LineasEsfuerzo_Tickets", Storage="_Personas", ThisKey="TCT_PER_Id", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas Personas
		{
			get
			{
				return this._Personas.Entity;
			}
			set
			{
				Personas previousValue = this._Personas.Entity;
				if (((previousValue != value) 
							|| (this._Personas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personas.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo_Tickets.Remove(this);
					}
					this._Personas.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo_Tickets.Add(this);
						this._TCT_PER_Id = value.PER_Id;
					}
					else
					{
						this._TCT_PER_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Personas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Proyectos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PRY_Id;
		
		private string _PRY_Nombre;
		
		private bool _PRY_Activo;
		
		private int _PRY_TAR_Id;
		
		private bool _PRY_Imputable;
		
		private EntitySet<Proyectos_Departamentos> _Proyectos_Departamentos;
		
		private EntitySet<Proyectos_Empresas> _Proyectos_Empresas;
		
		private EntitySet<Proyectos_Partes> _Proyectos_Partes;
		
		private EntityRef<Tareas> _Tareas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPRY_IdChanging(int value);
    partial void OnPRY_IdChanged();
    partial void OnPRY_NombreChanging(string value);
    partial void OnPRY_NombreChanged();
    partial void OnPRY_ActivoChanging(bool value);
    partial void OnPRY_ActivoChanged();
    partial void OnPRY_TAR_IdChanging(int value);
    partial void OnPRY_TAR_IdChanged();
    partial void OnPRY_ImputableChanging(bool value);
    partial void OnPRY_ImputableChanged();
    #endregion
		
		public Proyectos()
		{
			this._Proyectos_Departamentos = new EntitySet<Proyectos_Departamentos>(new Action<Proyectos_Departamentos>(this.attach_Proyectos_Departamentos), new Action<Proyectos_Departamentos>(this.detach_Proyectos_Departamentos));
			this._Proyectos_Empresas = new EntitySet<Proyectos_Empresas>(new Action<Proyectos_Empresas>(this.attach_Proyectos_Empresas), new Action<Proyectos_Empresas>(this.detach_Proyectos_Empresas));
			this._Proyectos_Partes = new EntitySet<Proyectos_Partes>(new Action<Proyectos_Partes>(this.attach_Proyectos_Partes), new Action<Proyectos_Partes>(this.detach_Proyectos_Partes));
			this._Tareas = default(EntityRef<Tareas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRY_Id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PRY_Id
		{
			get
			{
				return this._PRY_Id;
			}
			set
			{
				if ((this._PRY_Id != value))
				{
					this.OnPRY_IdChanging(value);
					this.SendPropertyChanging();
					this._PRY_Id = value;
					this.SendPropertyChanged("PRY_Id");
					this.OnPRY_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRY_Nombre", CanBeNull=false)]
		public string PRY_Nombre
		{
			get
			{
				return this._PRY_Nombre;
			}
			set
			{
				if ((this._PRY_Nombre != value))
				{
					this.OnPRY_NombreChanging(value);
					this.SendPropertyChanging();
					this._PRY_Nombre = value;
					this.SendPropertyChanged("PRY_Nombre");
					this.OnPRY_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRY_Activo")]
		public bool PRY_Activo
		{
			get
			{
				return this._PRY_Activo;
			}
			set
			{
				if ((this._PRY_Activo != value))
				{
					this.OnPRY_ActivoChanging(value);
					this.SendPropertyChanging();
					this._PRY_Activo = value;
					this.SendPropertyChanged("PRY_Activo");
					this.OnPRY_ActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRY_TAR_Id")]
		public int PRY_TAR_Id
		{
			get
			{
				return this._PRY_TAR_Id;
			}
			set
			{
				if ((this._PRY_TAR_Id != value))
				{
					if (this._Tareas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRY_TAR_IdChanging(value);
					this.SendPropertyChanging();
					this._PRY_TAR_Id = value;
					this.SendPropertyChanged("PRY_TAR_Id");
					this.OnPRY_TAR_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRY_Imputable")]
		public bool PRY_Imputable
		{
			get
			{
				return this._PRY_Imputable;
			}
			set
			{
				if ((this._PRY_Imputable != value))
				{
					this.OnPRY_ImputableChanging(value);
					this.SendPropertyChanging();
					this._PRY_Imputable = value;
					this.SendPropertyChanged("PRY_Imputable");
					this.OnPRY_ImputableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proyectos_Proyectos_Departamentos", Storage="_Proyectos_Departamentos", ThisKey="PRY_Id", OtherKey="PRD_PRY_Id")]
		public EntitySet<Proyectos_Departamentos> Proyectos_Departamentos
		{
			get
			{
				return this._Proyectos_Departamentos;
			}
			set
			{
				this._Proyectos_Departamentos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proyectos_Proyectos_Empresas", Storage="_Proyectos_Empresas", ThisKey="PRY_Id", OtherKey="PRE_PRY_Id")]
		public EntitySet<Proyectos_Empresas> Proyectos_Empresas
		{
			get
			{
				return this._Proyectos_Empresas;
			}
			set
			{
				this._Proyectos_Empresas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proyectos_Proyectos_Partes", Storage="_Proyectos_Partes", ThisKey="PRY_Id", OtherKey="PPA_PRY_Id")]
		public EntitySet<Proyectos_Partes> Proyectos_Partes
		{
			get
			{
				return this._Proyectos_Partes;
			}
			set
			{
				this._Proyectos_Partes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Proyectos", Storage="_Tareas", ThisKey="PRY_TAR_Id", OtherKey="TAR_Id", IsForeignKey=true)]
		public Tareas Tareas
		{
			get
			{
				return this._Tareas.Entity;
			}
			set
			{
				Tareas previousValue = this._Tareas.Entity;
				if (((previousValue != value) 
							|| (this._Tareas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tareas.Entity = null;
						previousValue.Proyectos.Remove(this);
					}
					this._Tareas.Entity = value;
					if ((value != null))
					{
						value.Proyectos.Add(this);
						this._PRY_TAR_Id = value.TAR_Id;
					}
					else
					{
						this._PRY_TAR_Id = default(int);
					}
					this.SendPropertyChanged("Tareas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Proyectos_Departamentos(Proyectos_Departamentos entity)
		{
			this.SendPropertyChanging();
			entity.Proyectos = this;
		}
		
		private void detach_Proyectos_Departamentos(Proyectos_Departamentos entity)
		{
			this.SendPropertyChanging();
			entity.Proyectos = null;
		}
		
		private void attach_Proyectos_Empresas(Proyectos_Empresas entity)
		{
			this.SendPropertyChanging();
			entity.Proyectos = this;
		}
		
		private void detach_Proyectos_Empresas(Proyectos_Empresas entity)
		{
			this.SendPropertyChanging();
			entity.Proyectos = null;
		}
		
		private void attach_Proyectos_Partes(Proyectos_Partes entity)
		{
			this.SendPropertyChanging();
			entity.Proyectos = this;
		}
		
		private void detach_Proyectos_Partes(Proyectos_Partes entity)
		{
			this.SendPropertyChanging();
			entity.Proyectos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Licencias_Minimos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LEM_LIC_Id;
		
		private int _LEM_EMP_Id;
		
		private int _LEM_MinimoFacturar;
		
		private EntityRef<Licencias> _Licencias;
		
		private EntityRef<Empresas> _Empresas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLEM_LIC_IdChanging(int value);
    partial void OnLEM_LIC_IdChanged();
    partial void OnLEM_EMP_IdChanging(int value);
    partial void OnLEM_EMP_IdChanged();
    partial void OnLEM_MinimoFacturarChanging(int value);
    partial void OnLEM_MinimoFacturarChanged();
    #endregion
		
		public Licencias_Minimos()
		{
			this._Licencias = default(EntityRef<Licencias>);
			this._Empresas = default(EntityRef<Empresas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LEM_LIC_Id", IsPrimaryKey=true)]
		public int LEM_LIC_Id
		{
			get
			{
				return this._LEM_LIC_Id;
			}
			set
			{
				if ((this._LEM_LIC_Id != value))
				{
					if (this._Licencias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLEM_LIC_IdChanging(value);
					this.SendPropertyChanging();
					this._LEM_LIC_Id = value;
					this.SendPropertyChanged("LEM_LIC_Id");
					this.OnLEM_LIC_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LEM_EMP_Id", IsPrimaryKey=true)]
		public int LEM_EMP_Id
		{
			get
			{
				return this._LEM_EMP_Id;
			}
			set
			{
				if ((this._LEM_EMP_Id != value))
				{
					if (this._Empresas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLEM_EMP_IdChanging(value);
					this.SendPropertyChanging();
					this._LEM_EMP_Id = value;
					this.SendPropertyChanged("LEM_EMP_Id");
					this.OnLEM_EMP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LEM_MinimoFacturar")]
		public int LEM_MinimoFacturar
		{
			get
			{
				return this._LEM_MinimoFacturar;
			}
			set
			{
				if ((this._LEM_MinimoFacturar != value))
				{
					this.OnLEM_MinimoFacturarChanging(value);
					this.SendPropertyChanging();
					this._LEM_MinimoFacturar = value;
					this.SendPropertyChanged("LEM_MinimoFacturar");
					this.OnLEM_MinimoFacturarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Licencias_Licencias_Minimos", Storage="_Licencias", ThisKey="LEM_LIC_Id", OtherKey="LIC_Id", IsForeignKey=true)]
		public Licencias Licencias
		{
			get
			{
				return this._Licencias.Entity;
			}
			set
			{
				Licencias previousValue = this._Licencias.Entity;
				if (((previousValue != value) 
							|| (this._Licencias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Licencias.Entity = null;
						previousValue.Licencias_Minimos.Remove(this);
					}
					this._Licencias.Entity = value;
					if ((value != null))
					{
						value.Licencias_Minimos.Add(this);
						this._LEM_LIC_Id = value.LIC_Id;
					}
					else
					{
						this._LEM_LIC_Id = default(int);
					}
					this.SendPropertyChanged("Licencias");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Licencias_Minimos", Storage="_Empresas", ThisKey="LEM_EMP_Id", OtherKey="EMP_Id", IsForeignKey=true)]
		public Empresas Empresas
		{
			get
			{
				return this._Empresas.Entity;
			}
			set
			{
				Empresas previousValue = this._Empresas.Entity;
				if (((previousValue != value) 
							|| (this._Empresas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresas.Entity = null;
						previousValue.Licencias_Minimos.Remove(this);
					}
					this._Empresas.Entity = value;
					if ((value != null))
					{
						value.Licencias_Minimos.Add(this);
						this._LEM_EMP_Id = value.EMP_Id;
					}
					else
					{
						this._LEM_EMP_Id = default(int);
					}
					this.SendPropertyChanged("Empresas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class CategoriasTicket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CTK_Id;
		
		private string _CTK_Nombre;
		
		private EntitySet<Tickets> _Tickets;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCTK_IdChanging(int value);
    partial void OnCTK_IdChanged();
    partial void OnCTK_NombreChanging(string value);
    partial void OnCTK_NombreChanged();
    #endregion
		
		public CategoriasTicket()
		{
			this._Tickets = new EntitySet<Tickets>(new Action<Tickets>(this.attach_Tickets), new Action<Tickets>(this.detach_Tickets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CTK_Id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CTK_Id
		{
			get
			{
				return this._CTK_Id;
			}
			set
			{
				if ((this._CTK_Id != value))
				{
					this.OnCTK_IdChanging(value);
					this.SendPropertyChanging();
					this._CTK_Id = value;
					this.SendPropertyChanged("CTK_Id");
					this.OnCTK_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CTK_Nombre", CanBeNull=false)]
		public string CTK_Nombre
		{
			get
			{
				return this._CTK_Nombre;
			}
			set
			{
				if ((this._CTK_Nombre != value))
				{
					this.OnCTK_NombreChanging(value);
					this.SendPropertyChanging();
					this._CTK_Nombre = value;
					this.SendPropertyChanged("CTK_Nombre");
					this.OnCTK_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategoriasTicket_Tickets", Storage="_Tickets", ThisKey="CTK_Id", OtherKey="TKC_CTK_Id")]
		public EntitySet<Tickets> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tickets(Tickets entity)
		{
			this.SendPropertyChanging();
			entity.CategoriasTicket = this;
		}
		
		private void detach_Tickets(Tickets entity)
		{
			this.SendPropertyChanging();
			entity.CategoriasTicket = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Proyectos_Departamentos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PRD_PRY_Id;
		
		private int _PRD_DEP_Id;
		
		private EntityRef<Proyectos> _Proyectos;
		
		private EntityRef<Departamentos> _Departamentos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPRD_PRY_IdChanging(int value);
    partial void OnPRD_PRY_IdChanged();
    partial void OnPRD_DEP_IdChanging(int value);
    partial void OnPRD_DEP_IdChanged();
    #endregion
		
		public Proyectos_Departamentos()
		{
			this._Proyectos = default(EntityRef<Proyectos>);
			this._Departamentos = default(EntityRef<Departamentos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRD_PRY_Id", IsPrimaryKey=true)]
		public int PRD_PRY_Id
		{
			get
			{
				return this._PRD_PRY_Id;
			}
			set
			{
				if ((this._PRD_PRY_Id != value))
				{
					if (this._Proyectos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRD_PRY_IdChanging(value);
					this.SendPropertyChanging();
					this._PRD_PRY_Id = value;
					this.SendPropertyChanged("PRD_PRY_Id");
					this.OnPRD_PRY_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRD_DEP_Id", IsPrimaryKey=true)]
		public int PRD_DEP_Id
		{
			get
			{
				return this._PRD_DEP_Id;
			}
			set
			{
				if ((this._PRD_DEP_Id != value))
				{
					if (this._Departamentos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRD_DEP_IdChanging(value);
					this.SendPropertyChanging();
					this._PRD_DEP_Id = value;
					this.SendPropertyChanged("PRD_DEP_Id");
					this.OnPRD_DEP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proyectos_Proyectos_Departamentos", Storage="_Proyectos", ThisKey="PRD_PRY_Id", OtherKey="PRY_Id", IsForeignKey=true)]
		public Proyectos Proyectos
		{
			get
			{
				return this._Proyectos.Entity;
			}
			set
			{
				Proyectos previousValue = this._Proyectos.Entity;
				if (((previousValue != value) 
							|| (this._Proyectos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proyectos.Entity = null;
						previousValue.Proyectos_Departamentos.Remove(this);
					}
					this._Proyectos.Entity = value;
					if ((value != null))
					{
						value.Proyectos_Departamentos.Add(this);
						this._PRD_PRY_Id = value.PRY_Id;
					}
					else
					{
						this._PRD_PRY_Id = default(int);
					}
					this.SendPropertyChanged("Proyectos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departamentos_Proyectos_Departamentos", Storage="_Departamentos", ThisKey="PRD_DEP_Id", OtherKey="DEP_Id", IsForeignKey=true)]
		public Departamentos Departamentos
		{
			get
			{
				return this._Departamentos.Entity;
			}
			set
			{
				Departamentos previousValue = this._Departamentos.Entity;
				if (((previousValue != value) 
							|| (this._Departamentos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Departamentos.Entity = null;
						previousValue.Proyectos_Departamentos.Remove(this);
					}
					this._Departamentos.Entity = value;
					if ((value != null))
					{
						value.Proyectos_Departamentos.Add(this);
						this._PRD_DEP_Id = value.DEP_Id;
					}
					else
					{
						this._PRD_DEP_Id = default(int);
					}
					this.SendPropertyChanged("Departamentos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Proyectos_Empresas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PRE_PRY_Id;
		
		private int _PRE_EMP_Id;
		
		private decimal _PRE_Porcentaje;
		
		private EntityRef<Proyectos> _Proyectos;
		
		private EntityRef<Empresas> _Empresas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPRE_PRY_IdChanging(int value);
    partial void OnPRE_PRY_IdChanged();
    partial void OnPRE_EMP_IdChanging(int value);
    partial void OnPRE_EMP_IdChanged();
    partial void OnPRE_PorcentajeChanging(decimal value);
    partial void OnPRE_PorcentajeChanged();
    #endregion
		
		public Proyectos_Empresas()
		{
			this._Proyectos = default(EntityRef<Proyectos>);
			this._Empresas = default(EntityRef<Empresas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRE_PRY_Id", IsPrimaryKey=true)]
		public int PRE_PRY_Id
		{
			get
			{
				return this._PRE_PRY_Id;
			}
			set
			{
				if ((this._PRE_PRY_Id != value))
				{
					if (this._Proyectos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRE_PRY_IdChanging(value);
					this.SendPropertyChanging();
					this._PRE_PRY_Id = value;
					this.SendPropertyChanged("PRE_PRY_Id");
					this.OnPRE_PRY_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRE_EMP_Id", IsPrimaryKey=true)]
		public int PRE_EMP_Id
		{
			get
			{
				return this._PRE_EMP_Id;
			}
			set
			{
				if ((this._PRE_EMP_Id != value))
				{
					if (this._Empresas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRE_EMP_IdChanging(value);
					this.SendPropertyChanging();
					this._PRE_EMP_Id = value;
					this.SendPropertyChanged("PRE_EMP_Id");
					this.OnPRE_EMP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRE_Porcentaje")]
		public decimal PRE_Porcentaje
		{
			get
			{
				return this._PRE_Porcentaje;
			}
			set
			{
				if ((this._PRE_Porcentaje != value))
				{
					this.OnPRE_PorcentajeChanging(value);
					this.SendPropertyChanging();
					this._PRE_Porcentaje = value;
					this.SendPropertyChanged("PRE_Porcentaje");
					this.OnPRE_PorcentajeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proyectos_Proyectos_Empresas", Storage="_Proyectos", ThisKey="PRE_PRY_Id", OtherKey="PRY_Id", IsForeignKey=true)]
		public Proyectos Proyectos
		{
			get
			{
				return this._Proyectos.Entity;
			}
			set
			{
				Proyectos previousValue = this._Proyectos.Entity;
				if (((previousValue != value) 
							|| (this._Proyectos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proyectos.Entity = null;
						previousValue.Proyectos_Empresas.Remove(this);
					}
					this._Proyectos.Entity = value;
					if ((value != null))
					{
						value.Proyectos_Empresas.Add(this);
						this._PRE_PRY_Id = value.PRY_Id;
					}
					else
					{
						this._PRE_PRY_Id = default(int);
					}
					this.SendPropertyChanged("Proyectos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Proyectos_Empresas", Storage="_Empresas", ThisKey="PRE_EMP_Id", OtherKey="EMP_Id", IsForeignKey=true)]
		public Empresas Empresas
		{
			get
			{
				return this._Empresas.Entity;
			}
			set
			{
				Empresas previousValue = this._Empresas.Entity;
				if (((previousValue != value) 
							|| (this._Empresas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresas.Entity = null;
						previousValue.Proyectos_Empresas.Remove(this);
					}
					this._Empresas.Entity = value;
					if ((value != null))
					{
						value.Proyectos_Empresas.Add(this);
						this._PRE_EMP_Id = value.EMP_Id;
					}
					else
					{
						this._PRE_EMP_Id = default(int);
					}
					this.SendPropertyChanged("Empresas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Proyectos_Partes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PPA_Id;
		
		private int _PPA_PEP_Anyo;
		
		private int _PPA_PEP_Mes;
		
		private int _PPA_PRY_Id;
		
		private int _PPA_PER_Id;
		
		private string _PPA_Descripcion;
		
		private bool _PPA_Validado;
		
		private EntitySet<Proyectos_Partes_Horas> _Proyectos_Partes_Horas;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo_Partes> _Tareas_Empresas_LineasEsfuerzo_Partes;
		
		private EntityRef<Proyectos> _Proyectos;
		
		private EntityRef<Personas> _Personas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPPA_IdChanging(int value);
    partial void OnPPA_IdChanged();
    partial void OnPPA_PEP_AnyoChanging(int value);
    partial void OnPPA_PEP_AnyoChanged();
    partial void OnPPA_PEP_MesChanging(int value);
    partial void OnPPA_PEP_MesChanged();
    partial void OnPPA_PRY_IdChanging(int value);
    partial void OnPPA_PRY_IdChanged();
    partial void OnPPA_PER_IdChanging(int value);
    partial void OnPPA_PER_IdChanged();
    partial void OnPPA_DescripcionChanging(string value);
    partial void OnPPA_DescripcionChanged();
    partial void OnPPA_ValidadoChanging(bool value);
    partial void OnPPA_ValidadoChanged();
    #endregion
		
		public Proyectos_Partes()
		{
			this._Proyectos_Partes_Horas = new EntitySet<Proyectos_Partes_Horas>(new Action<Proyectos_Partes_Horas>(this.attach_Proyectos_Partes_Horas), new Action<Proyectos_Partes_Horas>(this.detach_Proyectos_Partes_Horas));
			this._Tareas_Empresas_LineasEsfuerzo_Partes = new EntitySet<Tareas_Empresas_LineasEsfuerzo_Partes>(new Action<Tareas_Empresas_LineasEsfuerzo_Partes>(this.attach_Tareas_Empresas_LineasEsfuerzo_Partes), new Action<Tareas_Empresas_LineasEsfuerzo_Partes>(this.detach_Tareas_Empresas_LineasEsfuerzo_Partes));
			this._Proyectos = default(EntityRef<Proyectos>);
			this._Personas = default(EntityRef<Personas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PPA_Id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PPA_Id
		{
			get
			{
				return this._PPA_Id;
			}
			set
			{
				if ((this._PPA_Id != value))
				{
					this.OnPPA_IdChanging(value);
					this.SendPropertyChanging();
					this._PPA_Id = value;
					this.SendPropertyChanged("PPA_Id");
					this.OnPPA_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PPA_PEP_Anyo")]
		public int PPA_PEP_Anyo
		{
			get
			{
				return this._PPA_PEP_Anyo;
			}
			set
			{
				if ((this._PPA_PEP_Anyo != value))
				{
					this.OnPPA_PEP_AnyoChanging(value);
					this.SendPropertyChanging();
					this._PPA_PEP_Anyo = value;
					this.SendPropertyChanged("PPA_PEP_Anyo");
					this.OnPPA_PEP_AnyoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PPA_PEP_Mes")]
		public int PPA_PEP_Mes
		{
			get
			{
				return this._PPA_PEP_Mes;
			}
			set
			{
				if ((this._PPA_PEP_Mes != value))
				{
					this.OnPPA_PEP_MesChanging(value);
					this.SendPropertyChanging();
					this._PPA_PEP_Mes = value;
					this.SendPropertyChanged("PPA_PEP_Mes");
					this.OnPPA_PEP_MesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PPA_PRY_Id")]
		public int PPA_PRY_Id
		{
			get
			{
				return this._PPA_PRY_Id;
			}
			set
			{
				if ((this._PPA_PRY_Id != value))
				{
					if (this._Proyectos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPPA_PRY_IdChanging(value);
					this.SendPropertyChanging();
					this._PPA_PRY_Id = value;
					this.SendPropertyChanged("PPA_PRY_Id");
					this.OnPPA_PRY_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PPA_PER_Id")]
		public int PPA_PER_Id
		{
			get
			{
				return this._PPA_PER_Id;
			}
			set
			{
				if ((this._PPA_PER_Id != value))
				{
					if (this._Personas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPPA_PER_IdChanging(value);
					this.SendPropertyChanging();
					this._PPA_PER_Id = value;
					this.SendPropertyChanged("PPA_PER_Id");
					this.OnPPA_PER_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PPA_Descripcion")]
		public string PPA_Descripcion
		{
			get
			{
				return this._PPA_Descripcion;
			}
			set
			{
				if ((this._PPA_Descripcion != value))
				{
					this.OnPPA_DescripcionChanging(value);
					this.SendPropertyChanging();
					this._PPA_Descripcion = value;
					this.SendPropertyChanged("PPA_Descripcion");
					this.OnPPA_DescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PPA_Validado")]
		public bool PPA_Validado
		{
			get
			{
				return this._PPA_Validado;
			}
			set
			{
				if ((this._PPA_Validado != value))
				{
					this.OnPPA_ValidadoChanging(value);
					this.SendPropertyChanging();
					this._PPA_Validado = value;
					this.SendPropertyChanged("PPA_Validado");
					this.OnPPA_ValidadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proyectos_Partes_Proyectos_Partes_Horas", Storage="_Proyectos_Partes_Horas", ThisKey="PPA_Id", OtherKey="PPH_PPA_Id")]
		public EntitySet<Proyectos_Partes_Horas> Proyectos_Partes_Horas
		{
			get
			{
				return this._Proyectos_Partes_Horas;
			}
			set
			{
				this._Proyectos_Partes_Horas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proyectos_Partes_Tareas_Empresas_LineasEsfuerzo_Partes", Storage="_Tareas_Empresas_LineasEsfuerzo_Partes", ThisKey="PPA_Id", OtherKey="TCP_PPA_Id")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo_Partes> Tareas_Empresas_LineasEsfuerzo_Partes
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo_Partes;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo_Partes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proyectos_Proyectos_Partes", Storage="_Proyectos", ThisKey="PPA_PRY_Id", OtherKey="PRY_Id", IsForeignKey=true)]
		public Proyectos Proyectos
		{
			get
			{
				return this._Proyectos.Entity;
			}
			set
			{
				Proyectos previousValue = this._Proyectos.Entity;
				if (((previousValue != value) 
							|| (this._Proyectos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proyectos.Entity = null;
						previousValue.Proyectos_Partes.Remove(this);
					}
					this._Proyectos.Entity = value;
					if ((value != null))
					{
						value.Proyectos_Partes.Add(this);
						this._PPA_PRY_Id = value.PRY_Id;
					}
					else
					{
						this._PPA_PRY_Id = default(int);
					}
					this.SendPropertyChanged("Proyectos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personas_Proyectos_Partes", Storage="_Personas", ThisKey="PPA_PER_Id", OtherKey="PER_Id", IsForeignKey=true)]
		public Personas Personas
		{
			get
			{
				return this._Personas.Entity;
			}
			set
			{
				Personas previousValue = this._Personas.Entity;
				if (((previousValue != value) 
							|| (this._Personas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personas.Entity = null;
						previousValue.Proyectos_Partes.Remove(this);
					}
					this._Personas.Entity = value;
					if ((value != null))
					{
						value.Proyectos_Partes.Add(this);
						this._PPA_PER_Id = value.PER_Id;
					}
					else
					{
						this._PPA_PER_Id = default(int);
					}
					this.SendPropertyChanged("Personas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Proyectos_Partes_Horas(Proyectos_Partes_Horas entity)
		{
			this.SendPropertyChanging();
			entity.Proyectos_Partes = this;
		}
		
		private void detach_Proyectos_Partes_Horas(Proyectos_Partes_Horas entity)
		{
			this.SendPropertyChanging();
			entity.Proyectos_Partes = null;
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo_Partes(Tareas_Empresas_LineasEsfuerzo_Partes entity)
		{
			this.SendPropertyChanging();
			entity.Proyectos_Partes = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo_Partes(Tareas_Empresas_LineasEsfuerzo_Partes entity)
		{
			this.SendPropertyChanging();
			entity.Proyectos_Partes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Proyectos_Partes_Horas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PPH_PPA_Id;
		
		private System.DateTime _PPH_Fecha;
		
		private decimal _PPH_Horas;
		
		private EntityRef<Proyectos_Partes> _Proyectos_Partes;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPPH_PPA_IdChanging(int value);
    partial void OnPPH_PPA_IdChanged();
    partial void OnPPH_FechaChanging(System.DateTime value);
    partial void OnPPH_FechaChanged();
    partial void OnPPH_HorasChanging(decimal value);
    partial void OnPPH_HorasChanged();
    #endregion
		
		public Proyectos_Partes_Horas()
		{
			this._Proyectos_Partes = default(EntityRef<Proyectos_Partes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PPH_PPA_Id", IsPrimaryKey=true)]
		public int PPH_PPA_Id
		{
			get
			{
				return this._PPH_PPA_Id;
			}
			set
			{
				if ((this._PPH_PPA_Id != value))
				{
					if (this._Proyectos_Partes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPPH_PPA_IdChanging(value);
					this.SendPropertyChanging();
					this._PPH_PPA_Id = value;
					this.SendPropertyChanged("PPH_PPA_Id");
					this.OnPPH_PPA_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PPH_Fecha", IsPrimaryKey=true)]
		public System.DateTime PPH_Fecha
		{
			get
			{
				return this._PPH_Fecha;
			}
			set
			{
				if ((this._PPH_Fecha != value))
				{
					this.OnPPH_FechaChanging(value);
					this.SendPropertyChanging();
					this._PPH_Fecha = value;
					this.SendPropertyChanged("PPH_Fecha");
					this.OnPPH_FechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PPH_Horas")]
		public decimal PPH_Horas
		{
			get
			{
				return this._PPH_Horas;
			}
			set
			{
				if ((this._PPH_Horas != value))
				{
					this.OnPPH_HorasChanging(value);
					this.SendPropertyChanging();
					this._PPH_Horas = value;
					this.SendPropertyChanged("PPH_Horas");
					this.OnPPH_HorasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proyectos_Partes_Proyectos_Partes_Horas", Storage="_Proyectos_Partes", ThisKey="PPH_PPA_Id", OtherKey="PPA_Id", IsForeignKey=true)]
		public Proyectos_Partes Proyectos_Partes
		{
			get
			{
				return this._Proyectos_Partes.Entity;
			}
			set
			{
				Proyectos_Partes previousValue = this._Proyectos_Partes.Entity;
				if (((previousValue != value) 
							|| (this._Proyectos_Partes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proyectos_Partes.Entity = null;
						previousValue.Proyectos_Partes_Horas.Remove(this);
					}
					this._Proyectos_Partes.Entity = value;
					if ((value != null))
					{
						value.Proyectos_Partes_Horas.Add(this);
						this._PPH_PPA_Id = value.PPA_Id;
					}
					else
					{
						this._PPH_PPA_Id = default(int);
					}
					this.SendPropertyChanged("Proyectos_Partes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class PeriodosPartes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PEP_Anyo;
		
		private int _PEP_Mes;
		
		private System.DateTime _PEP_FechaInicio;
		
		private System.DateTime _PEP_FechaFin;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPEP_AnyoChanging(int value);
    partial void OnPEP_AnyoChanged();
    partial void OnPEP_MesChanging(int value);
    partial void OnPEP_MesChanged();
    partial void OnPEP_FechaInicioChanging(System.DateTime value);
    partial void OnPEP_FechaInicioChanged();
    partial void OnPEP_FechaFinChanging(System.DateTime value);
    partial void OnPEP_FechaFinChanged();
    #endregion
		
		public PeriodosPartes()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PEP_Anyo", IsPrimaryKey=true)]
		public int PEP_Anyo
		{
			get
			{
				return this._PEP_Anyo;
			}
			set
			{
				if ((this._PEP_Anyo != value))
				{
					this.OnPEP_AnyoChanging(value);
					this.SendPropertyChanging();
					this._PEP_Anyo = value;
					this.SendPropertyChanged("PEP_Anyo");
					this.OnPEP_AnyoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PEP_Mes", IsPrimaryKey=true)]
		public int PEP_Mes
		{
			get
			{
				return this._PEP_Mes;
			}
			set
			{
				if ((this._PEP_Mes != value))
				{
					this.OnPEP_MesChanging(value);
					this.SendPropertyChanging();
					this._PEP_Mes = value;
					this.SendPropertyChanged("PEP_Mes");
					this.OnPEP_MesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PEP_FechaInicio")]
		public System.DateTime PEP_FechaInicio
		{
			get
			{
				return this._PEP_FechaInicio;
			}
			set
			{
				if ((this._PEP_FechaInicio != value))
				{
					this.OnPEP_FechaInicioChanging(value);
					this.SendPropertyChanging();
					this._PEP_FechaInicio = value;
					this.SendPropertyChanged("PEP_FechaInicio");
					this.OnPEP_FechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PEP_FechaFin")]
		public System.DateTime PEP_FechaFin
		{
			get
			{
				return this._PEP_FechaFin;
			}
			set
			{
				if ((this._PEP_FechaFin != value))
				{
					this.OnPEP_FechaFinChanging(value);
					this.SendPropertyChanging();
					this._PEP_FechaFin = value;
					this.SendPropertyChanged("PEP_FechaFin");
					this.OnPEP_FechaFinChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Tareas_Empresas_LineasEsfuerzo_Partes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TCP_TLE_Id;
		
		private int _TCP_PPA_Id;
		
		private System.DateTime _TCP_Fecha;
		
		private decimal _TCP_Horas;
		
		private EntityRef<Proyectos_Partes> _Proyectos_Partes;
		
		private EntityRef<Tareas_Empresas_LineasEsfuerzo> _Tareas_Empresas_LineasEsfuerzo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTCP_TLE_IdChanging(int value);
    partial void OnTCP_TLE_IdChanged();
    partial void OnTCP_PPA_IdChanging(int value);
    partial void OnTCP_PPA_IdChanged();
    partial void OnTCP_FechaChanging(System.DateTime value);
    partial void OnTCP_FechaChanged();
    partial void OnTCP_HorasChanging(decimal value);
    partial void OnTCP_HorasChanged();
    #endregion
		
		public Tareas_Empresas_LineasEsfuerzo_Partes()
		{
			this._Proyectos_Partes = default(EntityRef<Proyectos_Partes>);
			this._Tareas_Empresas_LineasEsfuerzo = default(EntityRef<Tareas_Empresas_LineasEsfuerzo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCP_TLE_Id", IsPrimaryKey=true)]
		public int TCP_TLE_Id
		{
			get
			{
				return this._TCP_TLE_Id;
			}
			set
			{
				if ((this._TCP_TLE_Id != value))
				{
					if (this._Tareas_Empresas_LineasEsfuerzo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTCP_TLE_IdChanging(value);
					this.SendPropertyChanging();
					this._TCP_TLE_Id = value;
					this.SendPropertyChanged("TCP_TLE_Id");
					this.OnTCP_TLE_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCP_PPA_Id", IsPrimaryKey=true)]
		public int TCP_PPA_Id
		{
			get
			{
				return this._TCP_PPA_Id;
			}
			set
			{
				if ((this._TCP_PPA_Id != value))
				{
					if (this._Proyectos_Partes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTCP_PPA_IdChanging(value);
					this.SendPropertyChanging();
					this._TCP_PPA_Id = value;
					this.SendPropertyChanged("TCP_PPA_Id");
					this.OnTCP_PPA_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCP_Fecha", IsPrimaryKey=true)]
		public System.DateTime TCP_Fecha
		{
			get
			{
				return this._TCP_Fecha;
			}
			set
			{
				if ((this._TCP_Fecha != value))
				{
					this.OnTCP_FechaChanging(value);
					this.SendPropertyChanging();
					this._TCP_Fecha = value;
					this.SendPropertyChanged("TCP_Fecha");
					this.OnTCP_FechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCP_Horas")]
		public decimal TCP_Horas
		{
			get
			{
				return this._TCP_Horas;
			}
			set
			{
				if ((this._TCP_Horas != value))
				{
					this.OnTCP_HorasChanging(value);
					this.SendPropertyChanging();
					this._TCP_Horas = value;
					this.SendPropertyChanged("TCP_Horas");
					this.OnTCP_HorasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proyectos_Partes_Tareas_Empresas_LineasEsfuerzo_Partes", Storage="_Proyectos_Partes", ThisKey="TCP_PPA_Id", OtherKey="PPA_Id", IsForeignKey=true)]
		public Proyectos_Partes Proyectos_Partes
		{
			get
			{
				return this._Proyectos_Partes.Entity;
			}
			set
			{
				Proyectos_Partes previousValue = this._Proyectos_Partes.Entity;
				if (((previousValue != value) 
							|| (this._Proyectos_Partes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proyectos_Partes.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo_Partes.Remove(this);
					}
					this._Proyectos_Partes.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo_Partes.Add(this);
						this._TCP_PPA_Id = value.PPA_Id;
					}
					else
					{
						this._TCP_PPA_Id = default(int);
					}
					this.SendPropertyChanged("Proyectos_Partes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Empresas_LineasEsfuerzo_Tareas_Empresas_LineasEsfuerzo_Partes", Storage="_Tareas_Empresas_LineasEsfuerzo", ThisKey="TCP_TLE_Id", OtherKey="TLE_Id", IsForeignKey=true)]
		public Tareas_Empresas_LineasEsfuerzo Tareas_Empresas_LineasEsfuerzo
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo.Entity;
			}
			set
			{
				Tareas_Empresas_LineasEsfuerzo previousValue = this._Tareas_Empresas_LineasEsfuerzo.Entity;
				if (((previousValue != value) 
							|| (this._Tareas_Empresas_LineasEsfuerzo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tareas_Empresas_LineasEsfuerzo.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo_Partes.Remove(this);
					}
					this._Tareas_Empresas_LineasEsfuerzo.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo_Partes.Add(this);
						this._TCP_TLE_Id = value.TLE_Id;
					}
					else
					{
						this._TCP_TLE_Id = default(int);
					}
					this.SendPropertyChanged("Tareas_Empresas_LineasEsfuerzo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class FacturasP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FAP_Id;
		
		private string _FAP_NumFactura;
		
		private int _FAP_PRV_Id;
		
		private System.DateTime _FAP_Fecha;
		
		private decimal _FAP_BaseImponible;
		
		private bool _FAP_Cerrada;
		
		private System.DateTime _FechaAlta;
		
		private System.DateTime _FechaModificacion;
		
		private int _PER_Id_Modificacion;
		
		private EntityRef<Proveedores> _Proveedores;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFAP_IdChanging(int value);
    partial void OnFAP_IdChanged();
    partial void OnFAP_NumFacturaChanging(string value);
    partial void OnFAP_NumFacturaChanged();
    partial void OnFAP_PRV_IdChanging(int value);
    partial void OnFAP_PRV_IdChanged();
    partial void OnFAP_FechaChanging(System.DateTime value);
    partial void OnFAP_FechaChanged();
    partial void OnFAP_BaseImponibleChanging(decimal value);
    partial void OnFAP_BaseImponibleChanged();
    partial void OnFAP_CerradaChanging(bool value);
    partial void OnFAP_CerradaChanged();
    partial void OnFechaAltaChanging(System.DateTime value);
    partial void OnFechaAltaChanged();
    partial void OnFechaModificacionChanging(System.DateTime value);
    partial void OnFechaModificacionChanged();
    partial void OnPER_Id_ModificacionChanging(int value);
    partial void OnPER_Id_ModificacionChanged();
    #endregion
		
		public FacturasP()
		{
			this._Proveedores = default(EntityRef<Proveedores>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAP_Id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FAP_Id
		{
			get
			{
				return this._FAP_Id;
			}
			set
			{
				if ((this._FAP_Id != value))
				{
					this.OnFAP_IdChanging(value);
					this.SendPropertyChanging();
					this._FAP_Id = value;
					this.SendPropertyChanged("FAP_Id");
					this.OnFAP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAP_NumFactura", CanBeNull=false)]
		public string FAP_NumFactura
		{
			get
			{
				return this._FAP_NumFactura;
			}
			set
			{
				if ((this._FAP_NumFactura != value))
				{
					this.OnFAP_NumFacturaChanging(value);
					this.SendPropertyChanging();
					this._FAP_NumFactura = value;
					this.SendPropertyChanged("FAP_NumFactura");
					this.OnFAP_NumFacturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAP_PRV_Id")]
		public int FAP_PRV_Id
		{
			get
			{
				return this._FAP_PRV_Id;
			}
			set
			{
				if ((this._FAP_PRV_Id != value))
				{
					if (this._Proveedores.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFAP_PRV_IdChanging(value);
					this.SendPropertyChanging();
					this._FAP_PRV_Id = value;
					this.SendPropertyChanged("FAP_PRV_Id");
					this.OnFAP_PRV_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAP_Fecha")]
		public System.DateTime FAP_Fecha
		{
			get
			{
				return this._FAP_Fecha;
			}
			set
			{
				if ((this._FAP_Fecha != value))
				{
					this.OnFAP_FechaChanging(value);
					this.SendPropertyChanging();
					this._FAP_Fecha = value;
					this.SendPropertyChanged("FAP_Fecha");
					this.OnFAP_FechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAP_BaseImponible")]
		public decimal FAP_BaseImponible
		{
			get
			{
				return this._FAP_BaseImponible;
			}
			set
			{
				if ((this._FAP_BaseImponible != value))
				{
					this.OnFAP_BaseImponibleChanging(value);
					this.SendPropertyChanging();
					this._FAP_BaseImponible = value;
					this.SendPropertyChanged("FAP_BaseImponible");
					this.OnFAP_BaseImponibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAP_Cerrada")]
		public bool FAP_Cerrada
		{
			get
			{
				return this._FAP_Cerrada;
			}
			set
			{
				if ((this._FAP_Cerrada != value))
				{
					this.OnFAP_CerradaChanging(value);
					this.SendPropertyChanging();
					this._FAP_Cerrada = value;
					this.SendPropertyChanged("FAP_Cerrada");
					this.OnFAP_CerradaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaAlta")]
		public System.DateTime FechaAlta
		{
			get
			{
				return this._FechaAlta;
			}
			set
			{
				if ((this._FechaAlta != value))
				{
					this.OnFechaAltaChanging(value);
					this.SendPropertyChanging();
					this._FechaAlta = value;
					this.SendPropertyChanged("FechaAlta");
					this.OnFechaAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaModificacion")]
		public System.DateTime FechaModificacion
		{
			get
			{
				return this._FechaModificacion;
			}
			set
			{
				if ((this._FechaModificacion != value))
				{
					this.OnFechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._FechaModificacion = value;
					this.SendPropertyChanged("FechaModificacion");
					this.OnFechaModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_Id_Modificacion")]
		public int PER_Id_Modificacion
		{
			get
			{
				return this._PER_Id_Modificacion;
			}
			set
			{
				if ((this._PER_Id_Modificacion != value))
				{
					this.OnPER_Id_ModificacionChanging(value);
					this.SendPropertyChanging();
					this._PER_Id_Modificacion = value;
					this.SendPropertyChanged("PER_Id_Modificacion");
					this.OnPER_Id_ModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedores_FacturasP", Storage="_Proveedores", ThisKey="FAP_PRV_Id", OtherKey="PRV_Id", IsForeignKey=true)]
		public Proveedores Proveedores
		{
			get
			{
				return this._Proveedores.Entity;
			}
			set
			{
				Proveedores previousValue = this._Proveedores.Entity;
				if (((previousValue != value) 
							|| (this._Proveedores.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proveedores.Entity = null;
						previousValue.FacturasP.Remove(this);
					}
					this._Proveedores.Entity = value;
					if ((value != null))
					{
						value.FacturasP.Add(this);
						this._FAP_PRV_Id = value.PRV_Id;
					}
					else
					{
						this._FAP_PRV_Id = default(int);
					}
					this.SendPropertyChanged("Proveedores");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Aplicaciones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _APP_Id;
		
		private string _APP_Nombre;
		
		private System.Nullable<int> _APP_TAR_Id;
		
		private EntitySet<Aplicaciones_Modulos> _Aplicaciones_Modulos;
		
		private EntitySet<Aplicaciones_Tarifas> _Aplicaciones_Tarifas;
		
		private EntitySet<Aplicaciones_TiposEnte> _Aplicaciones_TiposEnte;
		
		private EntitySet<Entes_Aplicaciones> _Entes_Aplicaciones;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo_Aplicaciones> _Tareas_Empresas_LineasEsfuerzo_Aplicaciones;
		
		private EntityRef<Tareas> _Tareas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAPP_IdChanging(int value);
    partial void OnAPP_IdChanged();
    partial void OnAPP_NombreChanging(string value);
    partial void OnAPP_NombreChanged();
    partial void OnAPP_TAR_IdChanging(System.Nullable<int> value);
    partial void OnAPP_TAR_IdChanged();
    #endregion
		
		public Aplicaciones()
		{
			this._Aplicaciones_Modulos = new EntitySet<Aplicaciones_Modulos>(new Action<Aplicaciones_Modulos>(this.attach_Aplicaciones_Modulos), new Action<Aplicaciones_Modulos>(this.detach_Aplicaciones_Modulos));
			this._Aplicaciones_Tarifas = new EntitySet<Aplicaciones_Tarifas>(new Action<Aplicaciones_Tarifas>(this.attach_Aplicaciones_Tarifas), new Action<Aplicaciones_Tarifas>(this.detach_Aplicaciones_Tarifas));
			this._Aplicaciones_TiposEnte = new EntitySet<Aplicaciones_TiposEnte>(new Action<Aplicaciones_TiposEnte>(this.attach_Aplicaciones_TiposEnte), new Action<Aplicaciones_TiposEnte>(this.detach_Aplicaciones_TiposEnte));
			this._Entes_Aplicaciones = new EntitySet<Entes_Aplicaciones>(new Action<Entes_Aplicaciones>(this.attach_Entes_Aplicaciones), new Action<Entes_Aplicaciones>(this.detach_Entes_Aplicaciones));
			this._Tareas_Empresas_LineasEsfuerzo_Aplicaciones = new EntitySet<Tareas_Empresas_LineasEsfuerzo_Aplicaciones>(new Action<Tareas_Empresas_LineasEsfuerzo_Aplicaciones>(this.attach_Tareas_Empresas_LineasEsfuerzo_Aplicaciones), new Action<Tareas_Empresas_LineasEsfuerzo_Aplicaciones>(this.detach_Tareas_Empresas_LineasEsfuerzo_Aplicaciones));
			this._Tareas = default(EntityRef<Tareas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APP_Id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int APP_Id
		{
			get
			{
				return this._APP_Id;
			}
			set
			{
				if ((this._APP_Id != value))
				{
					this.OnAPP_IdChanging(value);
					this.SendPropertyChanging();
					this._APP_Id = value;
					this.SendPropertyChanged("APP_Id");
					this.OnAPP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APP_Nombre", CanBeNull=false)]
		public string APP_Nombre
		{
			get
			{
				return this._APP_Nombre;
			}
			set
			{
				if ((this._APP_Nombre != value))
				{
					this.OnAPP_NombreChanging(value);
					this.SendPropertyChanging();
					this._APP_Nombre = value;
					this.SendPropertyChanged("APP_Nombre");
					this.OnAPP_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APP_TAR_Id")]
		public System.Nullable<int> APP_TAR_Id
		{
			get
			{
				return this._APP_TAR_Id;
			}
			set
			{
				if ((this._APP_TAR_Id != value))
				{
					if (this._Tareas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAPP_TAR_IdChanging(value);
					this.SendPropertyChanging();
					this._APP_TAR_Id = value;
					this.SendPropertyChanged("APP_TAR_Id");
					this.OnAPP_TAR_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aplicaciones_Aplicaciones_Modulos", Storage="_Aplicaciones_Modulos", ThisKey="APP_Id", OtherKey="APM_APP_Id")]
		public EntitySet<Aplicaciones_Modulos> Aplicaciones_Modulos
		{
			get
			{
				return this._Aplicaciones_Modulos;
			}
			set
			{
				this._Aplicaciones_Modulos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aplicaciones_Aplicaciones_Tarifas", Storage="_Aplicaciones_Tarifas", ThisKey="APP_Id", OtherKey="APT_APP_Id")]
		public EntitySet<Aplicaciones_Tarifas> Aplicaciones_Tarifas
		{
			get
			{
				return this._Aplicaciones_Tarifas;
			}
			set
			{
				this._Aplicaciones_Tarifas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aplicaciones_Aplicaciones_TiposEnte", Storage="_Aplicaciones_TiposEnte", ThisKey="APP_Id", OtherKey="ATE_APP_Id")]
		public EntitySet<Aplicaciones_TiposEnte> Aplicaciones_TiposEnte
		{
			get
			{
				return this._Aplicaciones_TiposEnte;
			}
			set
			{
				this._Aplicaciones_TiposEnte.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aplicaciones_Entes_Aplicaciones", Storage="_Entes_Aplicaciones", ThisKey="APP_Id", OtherKey="ENL_APP_Id")]
		public EntitySet<Entes_Aplicaciones> Entes_Aplicaciones
		{
			get
			{
				return this._Entes_Aplicaciones;
			}
			set
			{
				this._Entes_Aplicaciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aplicaciones_Tareas_Empresas_LineasEsfuerzo_Aplicaciones", Storage="_Tareas_Empresas_LineasEsfuerzo_Aplicaciones", ThisKey="APP_Id", OtherKey="TCA_APP_Id")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo_Aplicaciones> Tareas_Empresas_LineasEsfuerzo_Aplicaciones
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo_Aplicaciones;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo_Aplicaciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Aplicaciones", Storage="_Tareas", ThisKey="APP_TAR_Id", OtherKey="TAR_Id", IsForeignKey=true)]
		public Tareas Tareas
		{
			get
			{
				return this._Tareas.Entity;
			}
			set
			{
				Tareas previousValue = this._Tareas.Entity;
				if (((previousValue != value) 
							|| (this._Tareas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tareas.Entity = null;
						previousValue.Aplicaciones.Remove(this);
					}
					this._Tareas.Entity = value;
					if ((value != null))
					{
						value.Aplicaciones.Add(this);
						this._APP_TAR_Id = value.TAR_Id;
					}
					else
					{
						this._APP_TAR_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tareas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Aplicaciones_Modulos(Aplicaciones_Modulos entity)
		{
			this.SendPropertyChanging();
			entity.Aplicaciones = this;
		}
		
		private void detach_Aplicaciones_Modulos(Aplicaciones_Modulos entity)
		{
			this.SendPropertyChanging();
			entity.Aplicaciones = null;
		}
		
		private void attach_Aplicaciones_Tarifas(Aplicaciones_Tarifas entity)
		{
			this.SendPropertyChanging();
			entity.Aplicaciones = this;
		}
		
		private void detach_Aplicaciones_Tarifas(Aplicaciones_Tarifas entity)
		{
			this.SendPropertyChanging();
			entity.Aplicaciones = null;
		}
		
		private void attach_Aplicaciones_TiposEnte(Aplicaciones_TiposEnte entity)
		{
			this.SendPropertyChanging();
			entity.Aplicaciones = this;
		}
		
		private void detach_Aplicaciones_TiposEnte(Aplicaciones_TiposEnte entity)
		{
			this.SendPropertyChanging();
			entity.Aplicaciones = null;
		}
		
		private void attach_Entes_Aplicaciones(Entes_Aplicaciones entity)
		{
			this.SendPropertyChanging();
			entity.Aplicaciones = this;
		}
		
		private void detach_Entes_Aplicaciones(Entes_Aplicaciones entity)
		{
			this.SendPropertyChanging();
			entity.Aplicaciones = null;
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo_Aplicaciones(Tareas_Empresas_LineasEsfuerzo_Aplicaciones entity)
		{
			this.SendPropertyChanging();
			entity.Aplicaciones = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo_Aplicaciones(Tareas_Empresas_LineasEsfuerzo_Aplicaciones entity)
		{
			this.SendPropertyChanging();
			entity.Aplicaciones = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Aplicaciones_Modulos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _APM_Id;
		
		private int _APM_APP_Id;
		
		private string _APM_Nombre;
		
		private int _APM_TAR_Id;
		
		private EntitySet<Aplicaciones_Modulos_Empresas> _Aplicaciones_Modulos_Empresas;
		
		private EntitySet<Aplicaciones_Modulos_Tarifas> _Aplicaciones_Modulos_Tarifas;
		
		private EntityRef<Aplicaciones> _Aplicaciones;
		
		private EntityRef<Tareas> _Tareas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAPM_IdChanging(int value);
    partial void OnAPM_IdChanged();
    partial void OnAPM_APP_IdChanging(int value);
    partial void OnAPM_APP_IdChanged();
    partial void OnAPM_NombreChanging(string value);
    partial void OnAPM_NombreChanged();
    partial void OnAPM_TAR_IdChanging(int value);
    partial void OnAPM_TAR_IdChanged();
    #endregion
		
		public Aplicaciones_Modulos()
		{
			this._Aplicaciones_Modulos_Empresas = new EntitySet<Aplicaciones_Modulos_Empresas>(new Action<Aplicaciones_Modulos_Empresas>(this.attach_Aplicaciones_Modulos_Empresas), new Action<Aplicaciones_Modulos_Empresas>(this.detach_Aplicaciones_Modulos_Empresas));
			this._Aplicaciones_Modulos_Tarifas = new EntitySet<Aplicaciones_Modulos_Tarifas>(new Action<Aplicaciones_Modulos_Tarifas>(this.attach_Aplicaciones_Modulos_Tarifas), new Action<Aplicaciones_Modulos_Tarifas>(this.detach_Aplicaciones_Modulos_Tarifas));
			this._Aplicaciones = default(EntityRef<Aplicaciones>);
			this._Tareas = default(EntityRef<Tareas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APM_Id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int APM_Id
		{
			get
			{
				return this._APM_Id;
			}
			set
			{
				if ((this._APM_Id != value))
				{
					this.OnAPM_IdChanging(value);
					this.SendPropertyChanging();
					this._APM_Id = value;
					this.SendPropertyChanged("APM_Id");
					this.OnAPM_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APM_APP_Id")]
		public int APM_APP_Id
		{
			get
			{
				return this._APM_APP_Id;
			}
			set
			{
				if ((this._APM_APP_Id != value))
				{
					if (this._Aplicaciones.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAPM_APP_IdChanging(value);
					this.SendPropertyChanging();
					this._APM_APP_Id = value;
					this.SendPropertyChanged("APM_APP_Id");
					this.OnAPM_APP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APM_Nombre", CanBeNull=false)]
		public string APM_Nombre
		{
			get
			{
				return this._APM_Nombre;
			}
			set
			{
				if ((this._APM_Nombre != value))
				{
					this.OnAPM_NombreChanging(value);
					this.SendPropertyChanging();
					this._APM_Nombre = value;
					this.SendPropertyChanged("APM_Nombre");
					this.OnAPM_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APM_TAR_Id")]
		public int APM_TAR_Id
		{
			get
			{
				return this._APM_TAR_Id;
			}
			set
			{
				if ((this._APM_TAR_Id != value))
				{
					if (this._Tareas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAPM_TAR_IdChanging(value);
					this.SendPropertyChanging();
					this._APM_TAR_Id = value;
					this.SendPropertyChanged("APM_TAR_Id");
					this.OnAPM_TAR_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aplicaciones_Modulos_Aplicaciones_Modulos_Empresas", Storage="_Aplicaciones_Modulos_Empresas", ThisKey="APM_Id", OtherKey="AME_APM_Id")]
		public EntitySet<Aplicaciones_Modulos_Empresas> Aplicaciones_Modulos_Empresas
		{
			get
			{
				return this._Aplicaciones_Modulos_Empresas;
			}
			set
			{
				this._Aplicaciones_Modulos_Empresas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aplicaciones_Modulos_Aplicaciones_Modulos_Tarifas", Storage="_Aplicaciones_Modulos_Tarifas", ThisKey="APM_Id", OtherKey="AMT_APM_Id")]
		public EntitySet<Aplicaciones_Modulos_Tarifas> Aplicaciones_Modulos_Tarifas
		{
			get
			{
				return this._Aplicaciones_Modulos_Tarifas;
			}
			set
			{
				this._Aplicaciones_Modulos_Tarifas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aplicaciones_Aplicaciones_Modulos", Storage="_Aplicaciones", ThisKey="APM_APP_Id", OtherKey="APP_Id", IsForeignKey=true)]
		public Aplicaciones Aplicaciones
		{
			get
			{
				return this._Aplicaciones.Entity;
			}
			set
			{
				Aplicaciones previousValue = this._Aplicaciones.Entity;
				if (((previousValue != value) 
							|| (this._Aplicaciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aplicaciones.Entity = null;
						previousValue.Aplicaciones_Modulos.Remove(this);
					}
					this._Aplicaciones.Entity = value;
					if ((value != null))
					{
						value.Aplicaciones_Modulos.Add(this);
						this._APM_APP_Id = value.APP_Id;
					}
					else
					{
						this._APM_APP_Id = default(int);
					}
					this.SendPropertyChanged("Aplicaciones");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Aplicaciones_Modulos", Storage="_Tareas", ThisKey="APM_TAR_Id", OtherKey="TAR_Id", IsForeignKey=true)]
		public Tareas Tareas
		{
			get
			{
				return this._Tareas.Entity;
			}
			set
			{
				Tareas previousValue = this._Tareas.Entity;
				if (((previousValue != value) 
							|| (this._Tareas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tareas.Entity = null;
						previousValue.Aplicaciones_Modulos.Remove(this);
					}
					this._Tareas.Entity = value;
					if ((value != null))
					{
						value.Aplicaciones_Modulos.Add(this);
						this._APM_TAR_Id = value.TAR_Id;
					}
					else
					{
						this._APM_TAR_Id = default(int);
					}
					this.SendPropertyChanged("Tareas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Aplicaciones_Modulos_Empresas(Aplicaciones_Modulos_Empresas entity)
		{
			this.SendPropertyChanging();
			entity.Aplicaciones_Modulos = this;
		}
		
		private void detach_Aplicaciones_Modulos_Empresas(Aplicaciones_Modulos_Empresas entity)
		{
			this.SendPropertyChanging();
			entity.Aplicaciones_Modulos = null;
		}
		
		private void attach_Aplicaciones_Modulos_Tarifas(Aplicaciones_Modulos_Tarifas entity)
		{
			this.SendPropertyChanging();
			entity.Aplicaciones_Modulos = this;
		}
		
		private void detach_Aplicaciones_Modulos_Tarifas(Aplicaciones_Modulos_Tarifas entity)
		{
			this.SendPropertyChanging();
			entity.Aplicaciones_Modulos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Aplicaciones_Modulos_Empresas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AME_Id;
		
		private int _AME_APM_Id;
		
		private int _AME_EMP_Id;
		
		private System.DateTime _AME_FechaInicio;
		
		private System.Nullable<System.DateTime> _AME_FechaFin;
		
		private decimal _AME_ImporteMensual;
		
		private string _AME_DescripcionConcepto;
		
		private System.Nullable<decimal> _AME_PorcentajeReparto;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo_Modulos> _Tareas_Empresas_LineasEsfuerzo_Modulos;
		
		private EntityRef<Aplicaciones_Modulos> _Aplicaciones_Modulos;
		
		private EntityRef<Empresas> _Empresas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAME_IdChanging(int value);
    partial void OnAME_IdChanged();
    partial void OnAME_APM_IdChanging(int value);
    partial void OnAME_APM_IdChanged();
    partial void OnAME_EMP_IdChanging(int value);
    partial void OnAME_EMP_IdChanged();
    partial void OnAME_FechaInicioChanging(System.DateTime value);
    partial void OnAME_FechaInicioChanged();
    partial void OnAME_FechaFinChanging(System.Nullable<System.DateTime> value);
    partial void OnAME_FechaFinChanged();
    partial void OnAME_ImporteMensualChanging(decimal value);
    partial void OnAME_ImporteMensualChanged();
    partial void OnAME_DescripcionConceptoChanging(string value);
    partial void OnAME_DescripcionConceptoChanged();
    partial void OnAME_PorcentajeRepartoChanging(System.Nullable<decimal> value);
    partial void OnAME_PorcentajeRepartoChanged();
    #endregion
		
		public Aplicaciones_Modulos_Empresas()
		{
			this._Tareas_Empresas_LineasEsfuerzo_Modulos = new EntitySet<Tareas_Empresas_LineasEsfuerzo_Modulos>(new Action<Tareas_Empresas_LineasEsfuerzo_Modulos>(this.attach_Tareas_Empresas_LineasEsfuerzo_Modulos), new Action<Tareas_Empresas_LineasEsfuerzo_Modulos>(this.detach_Tareas_Empresas_LineasEsfuerzo_Modulos));
			this._Aplicaciones_Modulos = default(EntityRef<Aplicaciones_Modulos>);
			this._Empresas = default(EntityRef<Empresas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AME_Id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AME_Id
		{
			get
			{
				return this._AME_Id;
			}
			set
			{
				if ((this._AME_Id != value))
				{
					this.OnAME_IdChanging(value);
					this.SendPropertyChanging();
					this._AME_Id = value;
					this.SendPropertyChanged("AME_Id");
					this.OnAME_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AME_APM_Id")]
		public int AME_APM_Id
		{
			get
			{
				return this._AME_APM_Id;
			}
			set
			{
				if ((this._AME_APM_Id != value))
				{
					if (this._Aplicaciones_Modulos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAME_APM_IdChanging(value);
					this.SendPropertyChanging();
					this._AME_APM_Id = value;
					this.SendPropertyChanged("AME_APM_Id");
					this.OnAME_APM_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AME_EMP_Id")]
		public int AME_EMP_Id
		{
			get
			{
				return this._AME_EMP_Id;
			}
			set
			{
				if ((this._AME_EMP_Id != value))
				{
					if (this._Empresas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAME_EMP_IdChanging(value);
					this.SendPropertyChanging();
					this._AME_EMP_Id = value;
					this.SendPropertyChanged("AME_EMP_Id");
					this.OnAME_EMP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AME_FechaInicio")]
		public System.DateTime AME_FechaInicio
		{
			get
			{
				return this._AME_FechaInicio;
			}
			set
			{
				if ((this._AME_FechaInicio != value))
				{
					this.OnAME_FechaInicioChanging(value);
					this.SendPropertyChanging();
					this._AME_FechaInicio = value;
					this.SendPropertyChanged("AME_FechaInicio");
					this.OnAME_FechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AME_FechaFin")]
		public System.Nullable<System.DateTime> AME_FechaFin
		{
			get
			{
				return this._AME_FechaFin;
			}
			set
			{
				if ((this._AME_FechaFin != value))
				{
					this.OnAME_FechaFinChanging(value);
					this.SendPropertyChanging();
					this._AME_FechaFin = value;
					this.SendPropertyChanged("AME_FechaFin");
					this.OnAME_FechaFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AME_ImporteMensual")]
		public decimal AME_ImporteMensual
		{
			get
			{
				return this._AME_ImporteMensual;
			}
			set
			{
				if ((this._AME_ImporteMensual != value))
				{
					this.OnAME_ImporteMensualChanging(value);
					this.SendPropertyChanging();
					this._AME_ImporteMensual = value;
					this.SendPropertyChanged("AME_ImporteMensual");
					this.OnAME_ImporteMensualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AME_DescripcionConcepto")]
		public string AME_DescripcionConcepto
		{
			get
			{
				return this._AME_DescripcionConcepto;
			}
			set
			{
				if ((this._AME_DescripcionConcepto != value))
				{
					this.OnAME_DescripcionConceptoChanging(value);
					this.SendPropertyChanging();
					this._AME_DescripcionConcepto = value;
					this.SendPropertyChanged("AME_DescripcionConcepto");
					this.OnAME_DescripcionConceptoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AME_PorcentajeReparto")]
		public System.Nullable<decimal> AME_PorcentajeReparto
		{
			get
			{
				return this._AME_PorcentajeReparto;
			}
			set
			{
				if ((this._AME_PorcentajeReparto != value))
				{
					this.OnAME_PorcentajeRepartoChanging(value);
					this.SendPropertyChanging();
					this._AME_PorcentajeReparto = value;
					this.SendPropertyChanged("AME_PorcentajeReparto");
					this.OnAME_PorcentajeRepartoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aplicaciones_Modulos_Empresas_Tareas_Empresas_LineasEsfuerzo_Modulos", Storage="_Tareas_Empresas_LineasEsfuerzo_Modulos", ThisKey="AME_Id", OtherKey="TCM_AME_Id")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo_Modulos> Tareas_Empresas_LineasEsfuerzo_Modulos
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo_Modulos;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo_Modulos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aplicaciones_Modulos_Aplicaciones_Modulos_Empresas", Storage="_Aplicaciones_Modulos", ThisKey="AME_APM_Id", OtherKey="APM_Id", IsForeignKey=true)]
		public Aplicaciones_Modulos Aplicaciones_Modulos
		{
			get
			{
				return this._Aplicaciones_Modulos.Entity;
			}
			set
			{
				Aplicaciones_Modulos previousValue = this._Aplicaciones_Modulos.Entity;
				if (((previousValue != value) 
							|| (this._Aplicaciones_Modulos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aplicaciones_Modulos.Entity = null;
						previousValue.Aplicaciones_Modulos_Empresas.Remove(this);
					}
					this._Aplicaciones_Modulos.Entity = value;
					if ((value != null))
					{
						value.Aplicaciones_Modulos_Empresas.Add(this);
						this._AME_APM_Id = value.APM_Id;
					}
					else
					{
						this._AME_APM_Id = default(int);
					}
					this.SendPropertyChanged("Aplicaciones_Modulos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Aplicaciones_Modulos_Empresas", Storage="_Empresas", ThisKey="AME_EMP_Id", OtherKey="EMP_Id", IsForeignKey=true)]
		public Empresas Empresas
		{
			get
			{
				return this._Empresas.Entity;
			}
			set
			{
				Empresas previousValue = this._Empresas.Entity;
				if (((previousValue != value) 
							|| (this._Empresas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresas.Entity = null;
						previousValue.Aplicaciones_Modulos_Empresas.Remove(this);
					}
					this._Empresas.Entity = value;
					if ((value != null))
					{
						value.Aplicaciones_Modulos_Empresas.Add(this);
						this._AME_EMP_Id = value.EMP_Id;
					}
					else
					{
						this._AME_EMP_Id = default(int);
					}
					this.SendPropertyChanged("Empresas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo_Modulos(Tareas_Empresas_LineasEsfuerzo_Modulos entity)
		{
			this.SendPropertyChanging();
			entity.Aplicaciones_Modulos_Empresas = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo_Modulos(Tareas_Empresas_LineasEsfuerzo_Modulos entity)
		{
			this.SendPropertyChanging();
			entity.Aplicaciones_Modulos_Empresas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Aplicaciones_Modulos_Tarifas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AMT_Id;
		
		private int _AMT_APM_Id;
		
		private System.DateTime _AMT_FechaInicio;
		
		private System.Nullable<System.DateTime> _AMT_FechaFin;
		
		private decimal _AMT_ImporteMensualReparto;
		
		private decimal _AMT_ImporteMensualRepartoPorcentajes;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo_ModulosReparto> _Tareas_Empresas_LineasEsfuerzo_ModulosReparto;
		
		private EntityRef<Aplicaciones_Modulos> _Aplicaciones_Modulos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAMT_IdChanging(int value);
    partial void OnAMT_IdChanged();
    partial void OnAMT_APM_IdChanging(int value);
    partial void OnAMT_APM_IdChanged();
    partial void OnAMT_FechaInicioChanging(System.DateTime value);
    partial void OnAMT_FechaInicioChanged();
    partial void OnAMT_FechaFinChanging(System.Nullable<System.DateTime> value);
    partial void OnAMT_FechaFinChanged();
    partial void OnAMT_ImporteMensualRepartoChanging(decimal value);
    partial void OnAMT_ImporteMensualRepartoChanged();
    partial void OnAMT_ImporteMensualRepartoPorcentajesChanging(decimal value);
    partial void OnAMT_ImporteMensualRepartoPorcentajesChanged();
    #endregion
		
		public Aplicaciones_Modulos_Tarifas()
		{
			this._Tareas_Empresas_LineasEsfuerzo_ModulosReparto = new EntitySet<Tareas_Empresas_LineasEsfuerzo_ModulosReparto>(new Action<Tareas_Empresas_LineasEsfuerzo_ModulosReparto>(this.attach_Tareas_Empresas_LineasEsfuerzo_ModulosReparto), new Action<Tareas_Empresas_LineasEsfuerzo_ModulosReparto>(this.detach_Tareas_Empresas_LineasEsfuerzo_ModulosReparto));
			this._Aplicaciones_Modulos = default(EntityRef<Aplicaciones_Modulos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMT_Id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AMT_Id
		{
			get
			{
				return this._AMT_Id;
			}
			set
			{
				if ((this._AMT_Id != value))
				{
					this.OnAMT_IdChanging(value);
					this.SendPropertyChanging();
					this._AMT_Id = value;
					this.SendPropertyChanged("AMT_Id");
					this.OnAMT_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMT_APM_Id")]
		public int AMT_APM_Id
		{
			get
			{
				return this._AMT_APM_Id;
			}
			set
			{
				if ((this._AMT_APM_Id != value))
				{
					if (this._Aplicaciones_Modulos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAMT_APM_IdChanging(value);
					this.SendPropertyChanging();
					this._AMT_APM_Id = value;
					this.SendPropertyChanged("AMT_APM_Id");
					this.OnAMT_APM_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMT_FechaInicio")]
		public System.DateTime AMT_FechaInicio
		{
			get
			{
				return this._AMT_FechaInicio;
			}
			set
			{
				if ((this._AMT_FechaInicio != value))
				{
					this.OnAMT_FechaInicioChanging(value);
					this.SendPropertyChanging();
					this._AMT_FechaInicio = value;
					this.SendPropertyChanged("AMT_FechaInicio");
					this.OnAMT_FechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMT_FechaFin")]
		public System.Nullable<System.DateTime> AMT_FechaFin
		{
			get
			{
				return this._AMT_FechaFin;
			}
			set
			{
				if ((this._AMT_FechaFin != value))
				{
					this.OnAMT_FechaFinChanging(value);
					this.SendPropertyChanging();
					this._AMT_FechaFin = value;
					this.SendPropertyChanged("AMT_FechaFin");
					this.OnAMT_FechaFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMT_ImporteMensualReparto")]
		public decimal AMT_ImporteMensualReparto
		{
			get
			{
				return this._AMT_ImporteMensualReparto;
			}
			set
			{
				if ((this._AMT_ImporteMensualReparto != value))
				{
					this.OnAMT_ImporteMensualRepartoChanging(value);
					this.SendPropertyChanging();
					this._AMT_ImporteMensualReparto = value;
					this.SendPropertyChanged("AMT_ImporteMensualReparto");
					this.OnAMT_ImporteMensualRepartoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMT_ImporteMensualRepartoPorcentajes")]
		public decimal AMT_ImporteMensualRepartoPorcentajes
		{
			get
			{
				return this._AMT_ImporteMensualRepartoPorcentajes;
			}
			set
			{
				if ((this._AMT_ImporteMensualRepartoPorcentajes != value))
				{
					this.OnAMT_ImporteMensualRepartoPorcentajesChanging(value);
					this.SendPropertyChanging();
					this._AMT_ImporteMensualRepartoPorcentajes = value;
					this.SendPropertyChanged("AMT_ImporteMensualRepartoPorcentajes");
					this.OnAMT_ImporteMensualRepartoPorcentajesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aplicaciones_Modulos_Tarifas_Tareas_Empresas_LineasEsfuerzo_ModulosReparto", Storage="_Tareas_Empresas_LineasEsfuerzo_ModulosReparto", ThisKey="AMT_Id", OtherKey="TCR_AMT_Id")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo_ModulosReparto> Tareas_Empresas_LineasEsfuerzo_ModulosReparto
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo_ModulosReparto;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo_ModulosReparto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aplicaciones_Modulos_Aplicaciones_Modulos_Tarifas", Storage="_Aplicaciones_Modulos", ThisKey="AMT_APM_Id", OtherKey="APM_Id", IsForeignKey=true)]
		public Aplicaciones_Modulos Aplicaciones_Modulos
		{
			get
			{
				return this._Aplicaciones_Modulos.Entity;
			}
			set
			{
				Aplicaciones_Modulos previousValue = this._Aplicaciones_Modulos.Entity;
				if (((previousValue != value) 
							|| (this._Aplicaciones_Modulos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aplicaciones_Modulos.Entity = null;
						previousValue.Aplicaciones_Modulos_Tarifas.Remove(this);
					}
					this._Aplicaciones_Modulos.Entity = value;
					if ((value != null))
					{
						value.Aplicaciones_Modulos_Tarifas.Add(this);
						this._AMT_APM_Id = value.APM_Id;
					}
					else
					{
						this._AMT_APM_Id = default(int);
					}
					this.SendPropertyChanged("Aplicaciones_Modulos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo_ModulosReparto(Tareas_Empresas_LineasEsfuerzo_ModulosReparto entity)
		{
			this.SendPropertyChanging();
			entity.Aplicaciones_Modulos_Tarifas = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo_ModulosReparto(Tareas_Empresas_LineasEsfuerzo_ModulosReparto entity)
		{
			this.SendPropertyChanging();
			entity.Aplicaciones_Modulos_Tarifas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Aplicaciones_Tarifas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _APT_APP_Id;
		
		private System.DateTime _APT_FechaInicio;
		
		private System.Nullable<System.DateTime> _APT_FechaFin;
		
		private decimal _APT_PrecioUnitario;
		
		private EntityRef<Aplicaciones> _Aplicaciones;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAPT_APP_IdChanging(int value);
    partial void OnAPT_APP_IdChanged();
    partial void OnAPT_FechaInicioChanging(System.DateTime value);
    partial void OnAPT_FechaInicioChanged();
    partial void OnAPT_FechaFinChanging(System.Nullable<System.DateTime> value);
    partial void OnAPT_FechaFinChanged();
    partial void OnAPT_PrecioUnitarioChanging(decimal value);
    partial void OnAPT_PrecioUnitarioChanged();
    #endregion
		
		public Aplicaciones_Tarifas()
		{
			this._Aplicaciones = default(EntityRef<Aplicaciones>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APT_APP_Id", IsPrimaryKey=true)]
		public int APT_APP_Id
		{
			get
			{
				return this._APT_APP_Id;
			}
			set
			{
				if ((this._APT_APP_Id != value))
				{
					if (this._Aplicaciones.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAPT_APP_IdChanging(value);
					this.SendPropertyChanging();
					this._APT_APP_Id = value;
					this.SendPropertyChanged("APT_APP_Id");
					this.OnAPT_APP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APT_FechaInicio", IsPrimaryKey=true)]
		public System.DateTime APT_FechaInicio
		{
			get
			{
				return this._APT_FechaInicio;
			}
			set
			{
				if ((this._APT_FechaInicio != value))
				{
					this.OnAPT_FechaInicioChanging(value);
					this.SendPropertyChanging();
					this._APT_FechaInicio = value;
					this.SendPropertyChanged("APT_FechaInicio");
					this.OnAPT_FechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APT_FechaFin")]
		public System.Nullable<System.DateTime> APT_FechaFin
		{
			get
			{
				return this._APT_FechaFin;
			}
			set
			{
				if ((this._APT_FechaFin != value))
				{
					this.OnAPT_FechaFinChanging(value);
					this.SendPropertyChanging();
					this._APT_FechaFin = value;
					this.SendPropertyChanged("APT_FechaFin");
					this.OnAPT_FechaFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APT_PrecioUnitario")]
		public decimal APT_PrecioUnitario
		{
			get
			{
				return this._APT_PrecioUnitario;
			}
			set
			{
				if ((this._APT_PrecioUnitario != value))
				{
					this.OnAPT_PrecioUnitarioChanging(value);
					this.SendPropertyChanging();
					this._APT_PrecioUnitario = value;
					this.SendPropertyChanged("APT_PrecioUnitario");
					this.OnAPT_PrecioUnitarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aplicaciones_Aplicaciones_Tarifas", Storage="_Aplicaciones", ThisKey="APT_APP_Id", OtherKey="APP_Id", IsForeignKey=true)]
		public Aplicaciones Aplicaciones
		{
			get
			{
				return this._Aplicaciones.Entity;
			}
			set
			{
				Aplicaciones previousValue = this._Aplicaciones.Entity;
				if (((previousValue != value) 
							|| (this._Aplicaciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aplicaciones.Entity = null;
						previousValue.Aplicaciones_Tarifas.Remove(this);
					}
					this._Aplicaciones.Entity = value;
					if ((value != null))
					{
						value.Aplicaciones_Tarifas.Add(this);
						this._APT_APP_Id = value.APP_Id;
					}
					else
					{
						this._APT_APP_Id = default(int);
					}
					this.SendPropertyChanged("Aplicaciones");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Aplicaciones_TiposEnte : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ATE_APP_Id;
		
		private int _ATE_TEN_Id;
		
		private EntityRef<Aplicaciones> _Aplicaciones;
		
		private EntityRef<TiposEnte> _TiposEnte;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnATE_APP_IdChanging(int value);
    partial void OnATE_APP_IdChanged();
    partial void OnATE_TEN_IdChanging(int value);
    partial void OnATE_TEN_IdChanged();
    #endregion
		
		public Aplicaciones_TiposEnte()
		{
			this._Aplicaciones = default(EntityRef<Aplicaciones>);
			this._TiposEnte = default(EntityRef<TiposEnte>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ATE_APP_Id", IsPrimaryKey=true)]
		public int ATE_APP_Id
		{
			get
			{
				return this._ATE_APP_Id;
			}
			set
			{
				if ((this._ATE_APP_Id != value))
				{
					if (this._Aplicaciones.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnATE_APP_IdChanging(value);
					this.SendPropertyChanging();
					this._ATE_APP_Id = value;
					this.SendPropertyChanged("ATE_APP_Id");
					this.OnATE_APP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ATE_TEN_Id", IsPrimaryKey=true)]
		public int ATE_TEN_Id
		{
			get
			{
				return this._ATE_TEN_Id;
			}
			set
			{
				if ((this._ATE_TEN_Id != value))
				{
					if (this._TiposEnte.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnATE_TEN_IdChanging(value);
					this.SendPropertyChanging();
					this._ATE_TEN_Id = value;
					this.SendPropertyChanged("ATE_TEN_Id");
					this.OnATE_TEN_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aplicaciones_Aplicaciones_TiposEnte", Storage="_Aplicaciones", ThisKey="ATE_APP_Id", OtherKey="APP_Id", IsForeignKey=true)]
		public Aplicaciones Aplicaciones
		{
			get
			{
				return this._Aplicaciones.Entity;
			}
			set
			{
				Aplicaciones previousValue = this._Aplicaciones.Entity;
				if (((previousValue != value) 
							|| (this._Aplicaciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aplicaciones.Entity = null;
						previousValue.Aplicaciones_TiposEnte.Remove(this);
					}
					this._Aplicaciones.Entity = value;
					if ((value != null))
					{
						value.Aplicaciones_TiposEnte.Add(this);
						this._ATE_APP_Id = value.APP_Id;
					}
					else
					{
						this._ATE_APP_Id = default(int);
					}
					this.SendPropertyChanged("Aplicaciones");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TiposEnte_Aplicaciones_TiposEnte", Storage="_TiposEnte", ThisKey="ATE_TEN_Id", OtherKey="TEN_Id", IsForeignKey=true)]
		public TiposEnte TiposEnte
		{
			get
			{
				return this._TiposEnte.Entity;
			}
			set
			{
				TiposEnte previousValue = this._TiposEnte.Entity;
				if (((previousValue != value) 
							|| (this._TiposEnte.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TiposEnte.Entity = null;
						previousValue.Aplicaciones_TiposEnte.Remove(this);
					}
					this._TiposEnte.Entity = value;
					if ((value != null))
					{
						value.Aplicaciones_TiposEnte.Add(this);
						this._ATE_TEN_Id = value.TEN_Id;
					}
					else
					{
						this._ATE_TEN_Id = default(int);
					}
					this.SendPropertyChanged("TiposEnte");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Entes_Aplicaciones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ENL_ENT_Id;
		
		private int _ENL_APP_Id;
		
		private System.DateTime _ENL_FechaInicio;
		
		private System.Nullable<System.DateTime> _ENL_FechaFin;
		
		private EntityRef<Entes> _Entes;
		
		private EntityRef<Aplicaciones> _Aplicaciones;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnENL_ENT_IdChanging(int value);
    partial void OnENL_ENT_IdChanged();
    partial void OnENL_APP_IdChanging(int value);
    partial void OnENL_APP_IdChanged();
    partial void OnENL_FechaInicioChanging(System.DateTime value);
    partial void OnENL_FechaInicioChanged();
    partial void OnENL_FechaFinChanging(System.Nullable<System.DateTime> value);
    partial void OnENL_FechaFinChanged();
    #endregion
		
		public Entes_Aplicaciones()
		{
			this._Entes = default(EntityRef<Entes>);
			this._Aplicaciones = default(EntityRef<Aplicaciones>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENL_ENT_Id", IsPrimaryKey=true)]
		public int ENL_ENT_Id
		{
			get
			{
				return this._ENL_ENT_Id;
			}
			set
			{
				if ((this._ENL_ENT_Id != value))
				{
					if (this._Entes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnENL_ENT_IdChanging(value);
					this.SendPropertyChanging();
					this._ENL_ENT_Id = value;
					this.SendPropertyChanged("ENL_ENT_Id");
					this.OnENL_ENT_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENL_APP_Id", IsPrimaryKey=true)]
		public int ENL_APP_Id
		{
			get
			{
				return this._ENL_APP_Id;
			}
			set
			{
				if ((this._ENL_APP_Id != value))
				{
					if (this._Aplicaciones.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnENL_APP_IdChanging(value);
					this.SendPropertyChanging();
					this._ENL_APP_Id = value;
					this.SendPropertyChanged("ENL_APP_Id");
					this.OnENL_APP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENL_FechaInicio", IsPrimaryKey=true)]
		public System.DateTime ENL_FechaInicio
		{
			get
			{
				return this._ENL_FechaInicio;
			}
			set
			{
				if ((this._ENL_FechaInicio != value))
				{
					this.OnENL_FechaInicioChanging(value);
					this.SendPropertyChanging();
					this._ENL_FechaInicio = value;
					this.SendPropertyChanged("ENL_FechaInicio");
					this.OnENL_FechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENL_FechaFin")]
		public System.Nullable<System.DateTime> ENL_FechaFin
		{
			get
			{
				return this._ENL_FechaFin;
			}
			set
			{
				if ((this._ENL_FechaFin != value))
				{
					this.OnENL_FechaFinChanging(value);
					this.SendPropertyChanging();
					this._ENL_FechaFin = value;
					this.SendPropertyChanged("ENL_FechaFin");
					this.OnENL_FechaFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entes_Entes_Aplicaciones", Storage="_Entes", ThisKey="ENL_ENT_Id", OtherKey="ENT_Id", IsForeignKey=true)]
		public Entes Entes
		{
			get
			{
				return this._Entes.Entity;
			}
			set
			{
				Entes previousValue = this._Entes.Entity;
				if (((previousValue != value) 
							|| (this._Entes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entes.Entity = null;
						previousValue.Entes_Aplicaciones.Remove(this);
					}
					this._Entes.Entity = value;
					if ((value != null))
					{
						value.Entes_Aplicaciones.Add(this);
						this._ENL_ENT_Id = value.ENT_Id;
					}
					else
					{
						this._ENL_ENT_Id = default(int);
					}
					this.SendPropertyChanged("Entes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aplicaciones_Entes_Aplicaciones", Storage="_Aplicaciones", ThisKey="ENL_APP_Id", OtherKey="APP_Id", IsForeignKey=true)]
		public Aplicaciones Aplicaciones
		{
			get
			{
				return this._Aplicaciones.Entity;
			}
			set
			{
				Aplicaciones previousValue = this._Aplicaciones.Entity;
				if (((previousValue != value) 
							|| (this._Aplicaciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aplicaciones.Entity = null;
						previousValue.Entes_Aplicaciones.Remove(this);
					}
					this._Aplicaciones.Entity = value;
					if ((value != null))
					{
						value.Entes_Aplicaciones.Add(this);
						this._ENL_APP_Id = value.APP_Id;
					}
					else
					{
						this._ENL_APP_Id = default(int);
					}
					this.SendPropertyChanged("Aplicaciones");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class LicenciasAnuales : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LAN_Id;
		
		private int _LAN_PRV_Id;
		
		private string _LAN_Nombre;
		
		private System.Nullable<int> _LAN_TAR_Id;
		
		private EntitySet<LicenciasAnuales_TiposEnte> _LicenciasAnuales_TiposEnte;
		
		private EntitySet<ContratosLicenciasAnuales_Tarifas> _ContratosLicenciasAnuales_Tarifas;
		
		private EntitySet<Entes_LicenciasAnuales> _Entes_LicenciasAnuales;
		
		private EntitySet<Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales> _Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales;
		
		private EntityRef<Proveedores> _Proveedores;
		
		private EntityRef<Tareas> _Tareas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLAN_IdChanging(int value);
    partial void OnLAN_IdChanged();
    partial void OnLAN_PRV_IdChanging(int value);
    partial void OnLAN_PRV_IdChanged();
    partial void OnLAN_NombreChanging(string value);
    partial void OnLAN_NombreChanged();
    partial void OnLAN_TAR_IdChanging(System.Nullable<int> value);
    partial void OnLAN_TAR_IdChanged();
    #endregion
		
		public LicenciasAnuales()
		{
			this._LicenciasAnuales_TiposEnte = new EntitySet<LicenciasAnuales_TiposEnte>(new Action<LicenciasAnuales_TiposEnte>(this.attach_LicenciasAnuales_TiposEnte), new Action<LicenciasAnuales_TiposEnte>(this.detach_LicenciasAnuales_TiposEnte));
			this._ContratosLicenciasAnuales_Tarifas = new EntitySet<ContratosLicenciasAnuales_Tarifas>(new Action<ContratosLicenciasAnuales_Tarifas>(this.attach_ContratosLicenciasAnuales_Tarifas), new Action<ContratosLicenciasAnuales_Tarifas>(this.detach_ContratosLicenciasAnuales_Tarifas));
			this._Entes_LicenciasAnuales = new EntitySet<Entes_LicenciasAnuales>(new Action<Entes_LicenciasAnuales>(this.attach_Entes_LicenciasAnuales), new Action<Entes_LicenciasAnuales>(this.detach_Entes_LicenciasAnuales));
			this._Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales = new EntitySet<Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales>(new Action<Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales>(this.attach_Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales), new Action<Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales>(this.detach_Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales));
			this._Proveedores = default(EntityRef<Proveedores>);
			this._Tareas = default(EntityRef<Tareas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAN_Id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LAN_Id
		{
			get
			{
				return this._LAN_Id;
			}
			set
			{
				if ((this._LAN_Id != value))
				{
					this.OnLAN_IdChanging(value);
					this.SendPropertyChanging();
					this._LAN_Id = value;
					this.SendPropertyChanged("LAN_Id");
					this.OnLAN_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAN_PRV_Id")]
		public int LAN_PRV_Id
		{
			get
			{
				return this._LAN_PRV_Id;
			}
			set
			{
				if ((this._LAN_PRV_Id != value))
				{
					if (this._Proveedores.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLAN_PRV_IdChanging(value);
					this.SendPropertyChanging();
					this._LAN_PRV_Id = value;
					this.SendPropertyChanged("LAN_PRV_Id");
					this.OnLAN_PRV_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAN_Nombre", CanBeNull=false)]
		public string LAN_Nombre
		{
			get
			{
				return this._LAN_Nombre;
			}
			set
			{
				if ((this._LAN_Nombre != value))
				{
					this.OnLAN_NombreChanging(value);
					this.SendPropertyChanging();
					this._LAN_Nombre = value;
					this.SendPropertyChanged("LAN_Nombre");
					this.OnLAN_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAN_TAR_Id")]
		public System.Nullable<int> LAN_TAR_Id
		{
			get
			{
				return this._LAN_TAR_Id;
			}
			set
			{
				if ((this._LAN_TAR_Id != value))
				{
					if (this._Tareas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLAN_TAR_IdChanging(value);
					this.SendPropertyChanging();
					this._LAN_TAR_Id = value;
					this.SendPropertyChanged("LAN_TAR_Id");
					this.OnLAN_TAR_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LicenciasAnuales_LicenciasAnuales_TiposEnte", Storage="_LicenciasAnuales_TiposEnte", ThisKey="LAN_Id", OtherKey="LAT_LAN_Id")]
		public EntitySet<LicenciasAnuales_TiposEnte> LicenciasAnuales_TiposEnte
		{
			get
			{
				return this._LicenciasAnuales_TiposEnte;
			}
			set
			{
				this._LicenciasAnuales_TiposEnte.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LicenciasAnuales_ContratosLicenciasAnuales_Tarifas", Storage="_ContratosLicenciasAnuales_Tarifas", ThisKey="LAN_Id", OtherKey="CLT_LAN_Id")]
		public EntitySet<ContratosLicenciasAnuales_Tarifas> ContratosLicenciasAnuales_Tarifas
		{
			get
			{
				return this._ContratosLicenciasAnuales_Tarifas;
			}
			set
			{
				this._ContratosLicenciasAnuales_Tarifas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LicenciasAnuales_Entes_LicenciasAnuales", Storage="_Entes_LicenciasAnuales", ThisKey="LAN_Id", OtherKey="ELA_LAN_Id")]
		public EntitySet<Entes_LicenciasAnuales> Entes_LicenciasAnuales
		{
			get
			{
				return this._Entes_LicenciasAnuales;
			}
			set
			{
				this._Entes_LicenciasAnuales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LicenciasAnuales_Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales", Storage="_Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales", ThisKey="LAN_Id", OtherKey="TCL_LAN_Id")]
		public EntitySet<Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales> Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales;
			}
			set
			{
				this._Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedores_LicenciasAnuales", Storage="_Proveedores", ThisKey="LAN_PRV_Id", OtherKey="PRV_Id", IsForeignKey=true)]
		public Proveedores Proveedores
		{
			get
			{
				return this._Proveedores.Entity;
			}
			set
			{
				Proveedores previousValue = this._Proveedores.Entity;
				if (((previousValue != value) 
							|| (this._Proveedores.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proveedores.Entity = null;
						previousValue.LicenciasAnuales.Remove(this);
					}
					this._Proveedores.Entity = value;
					if ((value != null))
					{
						value.LicenciasAnuales.Add(this);
						this._LAN_PRV_Id = value.PRV_Id;
					}
					else
					{
						this._LAN_PRV_Id = default(int);
					}
					this.SendPropertyChanged("Proveedores");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_LicenciasAnuales", Storage="_Tareas", ThisKey="LAN_TAR_Id", OtherKey="TAR_Id", IsForeignKey=true)]
		public Tareas Tareas
		{
			get
			{
				return this._Tareas.Entity;
			}
			set
			{
				Tareas previousValue = this._Tareas.Entity;
				if (((previousValue != value) 
							|| (this._Tareas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tareas.Entity = null;
						previousValue.LicenciasAnuales.Remove(this);
					}
					this._Tareas.Entity = value;
					if ((value != null))
					{
						value.LicenciasAnuales.Add(this);
						this._LAN_TAR_Id = value.TAR_Id;
					}
					else
					{
						this._LAN_TAR_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tareas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LicenciasAnuales_TiposEnte(LicenciasAnuales_TiposEnte entity)
		{
			this.SendPropertyChanging();
			entity.LicenciasAnuales = this;
		}
		
		private void detach_LicenciasAnuales_TiposEnte(LicenciasAnuales_TiposEnte entity)
		{
			this.SendPropertyChanging();
			entity.LicenciasAnuales = null;
		}
		
		private void attach_ContratosLicenciasAnuales_Tarifas(ContratosLicenciasAnuales_Tarifas entity)
		{
			this.SendPropertyChanging();
			entity.LicenciasAnuales = this;
		}
		
		private void detach_ContratosLicenciasAnuales_Tarifas(ContratosLicenciasAnuales_Tarifas entity)
		{
			this.SendPropertyChanging();
			entity.LicenciasAnuales = null;
		}
		
		private void attach_Entes_LicenciasAnuales(Entes_LicenciasAnuales entity)
		{
			this.SendPropertyChanging();
			entity.LicenciasAnuales = this;
		}
		
		private void detach_Entes_LicenciasAnuales(Entes_LicenciasAnuales entity)
		{
			this.SendPropertyChanging();
			entity.LicenciasAnuales = null;
		}
		
		private void attach_Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales(Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales entity)
		{
			this.SendPropertyChanging();
			entity.LicenciasAnuales = this;
		}
		
		private void detach_Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales(Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales entity)
		{
			this.SendPropertyChanging();
			entity.LicenciasAnuales = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class LicenciasAnuales_TiposEnte : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LAT_LAN_Id;
		
		private int _LAT_TEN_Id;
		
		private EntityRef<LicenciasAnuales> _LicenciasAnuales;
		
		private EntityRef<TiposEnte> _TiposEnte;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLAT_LAN_IdChanging(int value);
    partial void OnLAT_LAN_IdChanged();
    partial void OnLAT_TEN_IdChanging(int value);
    partial void OnLAT_TEN_IdChanged();
    #endregion
		
		public LicenciasAnuales_TiposEnte()
		{
			this._LicenciasAnuales = default(EntityRef<LicenciasAnuales>);
			this._TiposEnte = default(EntityRef<TiposEnte>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAT_LAN_Id", IsPrimaryKey=true)]
		public int LAT_LAN_Id
		{
			get
			{
				return this._LAT_LAN_Id;
			}
			set
			{
				if ((this._LAT_LAN_Id != value))
				{
					if (this._LicenciasAnuales.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLAT_LAN_IdChanging(value);
					this.SendPropertyChanging();
					this._LAT_LAN_Id = value;
					this.SendPropertyChanged("LAT_LAN_Id");
					this.OnLAT_LAN_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAT_TEN_Id", IsPrimaryKey=true)]
		public int LAT_TEN_Id
		{
			get
			{
				return this._LAT_TEN_Id;
			}
			set
			{
				if ((this._LAT_TEN_Id != value))
				{
					if (this._TiposEnte.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLAT_TEN_IdChanging(value);
					this.SendPropertyChanging();
					this._LAT_TEN_Id = value;
					this.SendPropertyChanged("LAT_TEN_Id");
					this.OnLAT_TEN_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LicenciasAnuales_LicenciasAnuales_TiposEnte", Storage="_LicenciasAnuales", ThisKey="LAT_LAN_Id", OtherKey="LAN_Id", IsForeignKey=true)]
		public LicenciasAnuales LicenciasAnuales
		{
			get
			{
				return this._LicenciasAnuales.Entity;
			}
			set
			{
				LicenciasAnuales previousValue = this._LicenciasAnuales.Entity;
				if (((previousValue != value) 
							|| (this._LicenciasAnuales.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LicenciasAnuales.Entity = null;
						previousValue.LicenciasAnuales_TiposEnte.Remove(this);
					}
					this._LicenciasAnuales.Entity = value;
					if ((value != null))
					{
						value.LicenciasAnuales_TiposEnte.Add(this);
						this._LAT_LAN_Id = value.LAN_Id;
					}
					else
					{
						this._LAT_LAN_Id = default(int);
					}
					this.SendPropertyChanged("LicenciasAnuales");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TiposEnte_LicenciasAnuales_TiposEnte", Storage="_TiposEnte", ThisKey="LAT_TEN_Id", OtherKey="TEN_Id", IsForeignKey=true)]
		public TiposEnte TiposEnte
		{
			get
			{
				return this._TiposEnte.Entity;
			}
			set
			{
				TiposEnte previousValue = this._TiposEnte.Entity;
				if (((previousValue != value) 
							|| (this._TiposEnte.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TiposEnte.Entity = null;
						previousValue.LicenciasAnuales_TiposEnte.Remove(this);
					}
					this._TiposEnte.Entity = value;
					if ((value != null))
					{
						value.LicenciasAnuales_TiposEnte.Add(this);
						this._LAT_TEN_Id = value.TEN_Id;
					}
					else
					{
						this._LAT_TEN_Id = default(int);
					}
					this.SendPropertyChanged("TiposEnte");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ContratosLicenciasAnuales : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CLA_Id;
		
		private int _CLA_PRV_Id;
		
		private System.DateTime _CLA_FechaInicio;
		
		private System.DateTime _CLA_FechaFin;
		
		private EntitySet<ContratosLicenciasAnuales_Tarifas> _ContratosLicenciasAnuales_Tarifas;
		
		private EntityRef<Proveedores> _Proveedores;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCLA_IdChanging(int value);
    partial void OnCLA_IdChanged();
    partial void OnCLA_PRV_IdChanging(int value);
    partial void OnCLA_PRV_IdChanged();
    partial void OnCLA_FechaInicioChanging(System.DateTime value);
    partial void OnCLA_FechaInicioChanged();
    partial void OnCLA_FechaFinChanging(System.DateTime value);
    partial void OnCLA_FechaFinChanged();
    #endregion
		
		public ContratosLicenciasAnuales()
		{
			this._ContratosLicenciasAnuales_Tarifas = new EntitySet<ContratosLicenciasAnuales_Tarifas>(new Action<ContratosLicenciasAnuales_Tarifas>(this.attach_ContratosLicenciasAnuales_Tarifas), new Action<ContratosLicenciasAnuales_Tarifas>(this.detach_ContratosLicenciasAnuales_Tarifas));
			this._Proveedores = default(EntityRef<Proveedores>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLA_Id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CLA_Id
		{
			get
			{
				return this._CLA_Id;
			}
			set
			{
				if ((this._CLA_Id != value))
				{
					this.OnCLA_IdChanging(value);
					this.SendPropertyChanging();
					this._CLA_Id = value;
					this.SendPropertyChanged("CLA_Id");
					this.OnCLA_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLA_PRV_Id")]
		public int CLA_PRV_Id
		{
			get
			{
				return this._CLA_PRV_Id;
			}
			set
			{
				if ((this._CLA_PRV_Id != value))
				{
					if (this._Proveedores.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCLA_PRV_IdChanging(value);
					this.SendPropertyChanging();
					this._CLA_PRV_Id = value;
					this.SendPropertyChanged("CLA_PRV_Id");
					this.OnCLA_PRV_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLA_FechaInicio")]
		public System.DateTime CLA_FechaInicio
		{
			get
			{
				return this._CLA_FechaInicio;
			}
			set
			{
				if ((this._CLA_FechaInicio != value))
				{
					this.OnCLA_FechaInicioChanging(value);
					this.SendPropertyChanging();
					this._CLA_FechaInicio = value;
					this.SendPropertyChanged("CLA_FechaInicio");
					this.OnCLA_FechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLA_FechaFin")]
		public System.DateTime CLA_FechaFin
		{
			get
			{
				return this._CLA_FechaFin;
			}
			set
			{
				if ((this._CLA_FechaFin != value))
				{
					this.OnCLA_FechaFinChanging(value);
					this.SendPropertyChanging();
					this._CLA_FechaFin = value;
					this.SendPropertyChanged("CLA_FechaFin");
					this.OnCLA_FechaFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContratosLicenciasAnuales_ContratosLicenciasAnuales_Tarifas", Storage="_ContratosLicenciasAnuales_Tarifas", ThisKey="CLA_Id", OtherKey="CLT_CLA_Id")]
		public EntitySet<ContratosLicenciasAnuales_Tarifas> ContratosLicenciasAnuales_Tarifas
		{
			get
			{
				return this._ContratosLicenciasAnuales_Tarifas;
			}
			set
			{
				this._ContratosLicenciasAnuales_Tarifas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedores_ContratosLicenciasAnuales", Storage="_Proveedores", ThisKey="CLA_PRV_Id", OtherKey="PRV_Id", IsForeignKey=true)]
		public Proveedores Proveedores
		{
			get
			{
				return this._Proveedores.Entity;
			}
			set
			{
				Proveedores previousValue = this._Proveedores.Entity;
				if (((previousValue != value) 
							|| (this._Proveedores.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proveedores.Entity = null;
						previousValue.ContratosLicenciasAnuales.Remove(this);
					}
					this._Proveedores.Entity = value;
					if ((value != null))
					{
						value.ContratosLicenciasAnuales.Add(this);
						this._CLA_PRV_Id = value.PRV_Id;
					}
					else
					{
						this._CLA_PRV_Id = default(int);
					}
					this.SendPropertyChanged("Proveedores");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContratosLicenciasAnuales_Tarifas(ContratosLicenciasAnuales_Tarifas entity)
		{
			this.SendPropertyChanging();
			entity.ContratosLicenciasAnuales = this;
		}
		
		private void detach_ContratosLicenciasAnuales_Tarifas(ContratosLicenciasAnuales_Tarifas entity)
		{
			this.SendPropertyChanging();
			entity.ContratosLicenciasAnuales = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ContratosLicenciasAnuales_Tarifas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CLT_CLA_Id;
		
		private int _CLT_LAN_Id;
		
		private decimal _CLT_ImporteAnual;
		
		private EntityRef<ContratosLicenciasAnuales> _ContratosLicenciasAnuales;
		
		private EntityRef<LicenciasAnuales> _LicenciasAnuales;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCLT_CLA_IdChanging(int value);
    partial void OnCLT_CLA_IdChanged();
    partial void OnCLT_LAN_IdChanging(int value);
    partial void OnCLT_LAN_IdChanged();
    partial void OnCLT_ImporteAnualChanging(decimal value);
    partial void OnCLT_ImporteAnualChanged();
    #endregion
		
		public ContratosLicenciasAnuales_Tarifas()
		{
			this._ContratosLicenciasAnuales = default(EntityRef<ContratosLicenciasAnuales>);
			this._LicenciasAnuales = default(EntityRef<LicenciasAnuales>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLT_CLA_Id", IsPrimaryKey=true)]
		public int CLT_CLA_Id
		{
			get
			{
				return this._CLT_CLA_Id;
			}
			set
			{
				if ((this._CLT_CLA_Id != value))
				{
					if (this._ContratosLicenciasAnuales.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCLT_CLA_IdChanging(value);
					this.SendPropertyChanging();
					this._CLT_CLA_Id = value;
					this.SendPropertyChanged("CLT_CLA_Id");
					this.OnCLT_CLA_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLT_LAN_Id", IsPrimaryKey=true)]
		public int CLT_LAN_Id
		{
			get
			{
				return this._CLT_LAN_Id;
			}
			set
			{
				if ((this._CLT_LAN_Id != value))
				{
					if (this._LicenciasAnuales.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCLT_LAN_IdChanging(value);
					this.SendPropertyChanging();
					this._CLT_LAN_Id = value;
					this.SendPropertyChanged("CLT_LAN_Id");
					this.OnCLT_LAN_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLT_ImporteAnual")]
		public decimal CLT_ImporteAnual
		{
			get
			{
				return this._CLT_ImporteAnual;
			}
			set
			{
				if ((this._CLT_ImporteAnual != value))
				{
					this.OnCLT_ImporteAnualChanging(value);
					this.SendPropertyChanging();
					this._CLT_ImporteAnual = value;
					this.SendPropertyChanged("CLT_ImporteAnual");
					this.OnCLT_ImporteAnualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContratosLicenciasAnuales_ContratosLicenciasAnuales_Tarifas", Storage="_ContratosLicenciasAnuales", ThisKey="CLT_CLA_Id", OtherKey="CLA_Id", IsForeignKey=true)]
		public ContratosLicenciasAnuales ContratosLicenciasAnuales
		{
			get
			{
				return this._ContratosLicenciasAnuales.Entity;
			}
			set
			{
				ContratosLicenciasAnuales previousValue = this._ContratosLicenciasAnuales.Entity;
				if (((previousValue != value) 
							|| (this._ContratosLicenciasAnuales.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContratosLicenciasAnuales.Entity = null;
						previousValue.ContratosLicenciasAnuales_Tarifas.Remove(this);
					}
					this._ContratosLicenciasAnuales.Entity = value;
					if ((value != null))
					{
						value.ContratosLicenciasAnuales_Tarifas.Add(this);
						this._CLT_CLA_Id = value.CLA_Id;
					}
					else
					{
						this._CLT_CLA_Id = default(int);
					}
					this.SendPropertyChanged("ContratosLicenciasAnuales");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LicenciasAnuales_ContratosLicenciasAnuales_Tarifas", Storage="_LicenciasAnuales", ThisKey="CLT_LAN_Id", OtherKey="LAN_Id", IsForeignKey=true)]
		public LicenciasAnuales LicenciasAnuales
		{
			get
			{
				return this._LicenciasAnuales.Entity;
			}
			set
			{
				LicenciasAnuales previousValue = this._LicenciasAnuales.Entity;
				if (((previousValue != value) 
							|| (this._LicenciasAnuales.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LicenciasAnuales.Entity = null;
						previousValue.ContratosLicenciasAnuales_Tarifas.Remove(this);
					}
					this._LicenciasAnuales.Entity = value;
					if ((value != null))
					{
						value.ContratosLicenciasAnuales_Tarifas.Add(this);
						this._CLT_LAN_Id = value.LAN_Id;
					}
					else
					{
						this._CLT_LAN_Id = default(int);
					}
					this.SendPropertyChanged("LicenciasAnuales");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Entes_LicenciasAnuales : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ELA_ENT_Id;
		
		private int _ELA_LAN_Id;
		
		private System.DateTime _ELA_FechaInicio;
		
		private System.DateTime _ELA_FechaFin;
		
		private int _ELA_CLA_Id;
		
		private EntityRef<Entes> _Entes;
		
		private EntityRef<LicenciasAnuales> _LicenciasAnuales;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnELA_ENT_IdChanging(int value);
    partial void OnELA_ENT_IdChanged();
    partial void OnELA_LAN_IdChanging(int value);
    partial void OnELA_LAN_IdChanged();
    partial void OnELA_FechaInicioChanging(System.DateTime value);
    partial void OnELA_FechaInicioChanged();
    partial void OnELA_FechaFinChanging(System.DateTime value);
    partial void OnELA_FechaFinChanged();
    partial void OnELA_CLA_IdChanging(int value);
    partial void OnELA_CLA_IdChanged();
    #endregion
		
		public Entes_LicenciasAnuales()
		{
			this._Entes = default(EntityRef<Entes>);
			this._LicenciasAnuales = default(EntityRef<LicenciasAnuales>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ELA_ENT_Id", IsPrimaryKey=true)]
		public int ELA_ENT_Id
		{
			get
			{
				return this._ELA_ENT_Id;
			}
			set
			{
				if ((this._ELA_ENT_Id != value))
				{
					if (this._Entes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnELA_ENT_IdChanging(value);
					this.SendPropertyChanging();
					this._ELA_ENT_Id = value;
					this.SendPropertyChanged("ELA_ENT_Id");
					this.OnELA_ENT_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ELA_LAN_Id", IsPrimaryKey=true)]
		public int ELA_LAN_Id
		{
			get
			{
				return this._ELA_LAN_Id;
			}
			set
			{
				if ((this._ELA_LAN_Id != value))
				{
					if (this._LicenciasAnuales.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnELA_LAN_IdChanging(value);
					this.SendPropertyChanging();
					this._ELA_LAN_Id = value;
					this.SendPropertyChanged("ELA_LAN_Id");
					this.OnELA_LAN_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ELA_FechaInicio")]
		public System.DateTime ELA_FechaInicio
		{
			get
			{
				return this._ELA_FechaInicio;
			}
			set
			{
				if ((this._ELA_FechaInicio != value))
				{
					this.OnELA_FechaInicioChanging(value);
					this.SendPropertyChanging();
					this._ELA_FechaInicio = value;
					this.SendPropertyChanged("ELA_FechaInicio");
					this.OnELA_FechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ELA_FechaFin")]
		public System.DateTime ELA_FechaFin
		{
			get
			{
				return this._ELA_FechaFin;
			}
			set
			{
				if ((this._ELA_FechaFin != value))
				{
					this.OnELA_FechaFinChanging(value);
					this.SendPropertyChanging();
					this._ELA_FechaFin = value;
					this.SendPropertyChanged("ELA_FechaFin");
					this.OnELA_FechaFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ELA_CLA_Id", IsPrimaryKey=true)]
		public int ELA_CLA_Id
		{
			get
			{
				return this._ELA_CLA_Id;
			}
			set
			{
				if ((this._ELA_CLA_Id != value))
				{
					this.OnELA_CLA_IdChanging(value);
					this.SendPropertyChanging();
					this._ELA_CLA_Id = value;
					this.SendPropertyChanged("ELA_CLA_Id");
					this.OnELA_CLA_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entes_Entes_LicenciasAnuales", Storage="_Entes", ThisKey="ELA_ENT_Id", OtherKey="ENT_Id", IsForeignKey=true)]
		public Entes Entes
		{
			get
			{
				return this._Entes.Entity;
			}
			set
			{
				Entes previousValue = this._Entes.Entity;
				if (((previousValue != value) 
							|| (this._Entes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entes.Entity = null;
						previousValue.Entes_LicenciasAnuales.Remove(this);
					}
					this._Entes.Entity = value;
					if ((value != null))
					{
						value.Entes_LicenciasAnuales.Add(this);
						this._ELA_ENT_Id = value.ENT_Id;
					}
					else
					{
						this._ELA_ENT_Id = default(int);
					}
					this.SendPropertyChanged("Entes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LicenciasAnuales_Entes_LicenciasAnuales", Storage="_LicenciasAnuales", ThisKey="ELA_LAN_Id", OtherKey="LAN_Id", IsForeignKey=true)]
		public LicenciasAnuales LicenciasAnuales
		{
			get
			{
				return this._LicenciasAnuales.Entity;
			}
			set
			{
				LicenciasAnuales previousValue = this._LicenciasAnuales.Entity;
				if (((previousValue != value) 
							|| (this._LicenciasAnuales.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LicenciasAnuales.Entity = null;
						previousValue.Entes_LicenciasAnuales.Remove(this);
					}
					this._LicenciasAnuales.Entity = value;
					if ((value != null))
					{
						value.Entes_LicenciasAnuales.Add(this);
						this._ELA_LAN_Id = value.LAN_Id;
					}
					else
					{
						this._ELA_LAN_Id = default(int);
					}
					this.SendPropertyChanged("LicenciasAnuales");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Proveedores_ContratosSoporte_Reparto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PVR_PVC_Id;
		
		private int _PVR_EMP_Id;
		
		private decimal _PVR_Porcentaje;
		
		private EntityRef<Proveedores_ContratosSoporte> _Proveedores_ContratosSoporte;
		
		private EntityRef<Empresas> _Empresas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPVR_PVC_IdChanging(int value);
    partial void OnPVR_PVC_IdChanged();
    partial void OnPVR_EMP_IdChanging(int value);
    partial void OnPVR_EMP_IdChanged();
    partial void OnPVR_PorcentajeChanging(decimal value);
    partial void OnPVR_PorcentajeChanged();
    #endregion
		
		public Proveedores_ContratosSoporte_Reparto()
		{
			this._Proveedores_ContratosSoporte = default(EntityRef<Proveedores_ContratosSoporte>);
			this._Empresas = default(EntityRef<Empresas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PVR_PVC_Id", IsPrimaryKey=true)]
		public int PVR_PVC_Id
		{
			get
			{
				return this._PVR_PVC_Id;
			}
			set
			{
				if ((this._PVR_PVC_Id != value))
				{
					if (this._Proveedores_ContratosSoporte.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPVR_PVC_IdChanging(value);
					this.SendPropertyChanging();
					this._PVR_PVC_Id = value;
					this.SendPropertyChanged("PVR_PVC_Id");
					this.OnPVR_PVC_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PVR_EMP_Id", IsPrimaryKey=true)]
		public int PVR_EMP_Id
		{
			get
			{
				return this._PVR_EMP_Id;
			}
			set
			{
				if ((this._PVR_EMP_Id != value))
				{
					if (this._Empresas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPVR_EMP_IdChanging(value);
					this.SendPropertyChanging();
					this._PVR_EMP_Id = value;
					this.SendPropertyChanged("PVR_EMP_Id");
					this.OnPVR_EMP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PVR_Porcentaje")]
		public decimal PVR_Porcentaje
		{
			get
			{
				return this._PVR_Porcentaje;
			}
			set
			{
				if ((this._PVR_Porcentaje != value))
				{
					this.OnPVR_PorcentajeChanging(value);
					this.SendPropertyChanging();
					this._PVR_Porcentaje = value;
					this.SendPropertyChanged("PVR_Porcentaje");
					this.OnPVR_PorcentajeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedores_ContratosSoporte_Proveedores_ContratosSoporte_Reparto", Storage="_Proveedores_ContratosSoporte", ThisKey="PVR_PVC_Id", OtherKey="PVC_Id", IsForeignKey=true)]
		public Proveedores_ContratosSoporte Proveedores_ContratosSoporte
		{
			get
			{
				return this._Proveedores_ContratosSoporte.Entity;
			}
			set
			{
				Proveedores_ContratosSoporte previousValue = this._Proveedores_ContratosSoporte.Entity;
				if (((previousValue != value) 
							|| (this._Proveedores_ContratosSoporte.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proveedores_ContratosSoporte.Entity = null;
						previousValue.Proveedores_ContratosSoporte_Reparto.Remove(this);
					}
					this._Proveedores_ContratosSoporte.Entity = value;
					if ((value != null))
					{
						value.Proveedores_ContratosSoporte_Reparto.Add(this);
						this._PVR_PVC_Id = value.PVC_Id;
					}
					else
					{
						this._PVR_PVC_Id = default(int);
					}
					this.SendPropertyChanged("Proveedores_ContratosSoporte");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Proveedores_ContratosSoporte_Reparto", Storage="_Empresas", ThisKey="PVR_EMP_Id", OtherKey="EMP_Id", IsForeignKey=true)]
		public Empresas Empresas
		{
			get
			{
				return this._Empresas.Entity;
			}
			set
			{
				Empresas previousValue = this._Empresas.Entity;
				if (((previousValue != value) 
							|| (this._Empresas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresas.Entity = null;
						previousValue.Proveedores_ContratosSoporte_Reparto.Remove(this);
					}
					this._Empresas.Entity = value;
					if ((value != null))
					{
						value.Proveedores_ContratosSoporte_Reparto.Add(this);
						this._PVR_EMP_Id = value.EMP_Id;
					}
					else
					{
						this._PVR_EMP_Id = default(int);
					}
					this.SendPropertyChanged("Empresas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Tareas_Empresas_LineasEsfuerzo_Aplicaciones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TCA_TLE_Id;
		
		private int _TCA_APP_Id;
		
		private int _TCA_ENT_Id;
		
		private decimal _TCA_Importe;
		
		private EntityRef<Tareas_Empresas_LineasEsfuerzo> _Tareas_Empresas_LineasEsfuerzo;
		
		private EntityRef<Aplicaciones> _Aplicaciones;
		
		private EntityRef<Entes> _Entes;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTCA_TLE_IdChanging(int value);
    partial void OnTCA_TLE_IdChanged();
    partial void OnTCA_APP_IdChanging(int value);
    partial void OnTCA_APP_IdChanged();
    partial void OnTCA_ENT_IdChanging(int value);
    partial void OnTCA_ENT_IdChanged();
    partial void OnTCA_ImporteChanging(decimal value);
    partial void OnTCA_ImporteChanged();
    #endregion
		
		public Tareas_Empresas_LineasEsfuerzo_Aplicaciones()
		{
			this._Tareas_Empresas_LineasEsfuerzo = default(EntityRef<Tareas_Empresas_LineasEsfuerzo>);
			this._Aplicaciones = default(EntityRef<Aplicaciones>);
			this._Entes = default(EntityRef<Entes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCA_TLE_Id", IsPrimaryKey=true)]
		public int TCA_TLE_Id
		{
			get
			{
				return this._TCA_TLE_Id;
			}
			set
			{
				if ((this._TCA_TLE_Id != value))
				{
					if (this._Tareas_Empresas_LineasEsfuerzo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTCA_TLE_IdChanging(value);
					this.SendPropertyChanging();
					this._TCA_TLE_Id = value;
					this.SendPropertyChanged("TCA_TLE_Id");
					this.OnTCA_TLE_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCA_APP_Id", IsPrimaryKey=true)]
		public int TCA_APP_Id
		{
			get
			{
				return this._TCA_APP_Id;
			}
			set
			{
				if ((this._TCA_APP_Id != value))
				{
					if (this._Aplicaciones.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTCA_APP_IdChanging(value);
					this.SendPropertyChanging();
					this._TCA_APP_Id = value;
					this.SendPropertyChanged("TCA_APP_Id");
					this.OnTCA_APP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCA_ENT_Id", IsPrimaryKey=true)]
		public int TCA_ENT_Id
		{
			get
			{
				return this._TCA_ENT_Id;
			}
			set
			{
				if ((this._TCA_ENT_Id != value))
				{
					if (this._Entes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTCA_ENT_IdChanging(value);
					this.SendPropertyChanging();
					this._TCA_ENT_Id = value;
					this.SendPropertyChanged("TCA_ENT_Id");
					this.OnTCA_ENT_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCA_Importe")]
		public decimal TCA_Importe
		{
			get
			{
				return this._TCA_Importe;
			}
			set
			{
				if ((this._TCA_Importe != value))
				{
					this.OnTCA_ImporteChanging(value);
					this.SendPropertyChanging();
					this._TCA_Importe = value;
					this.SendPropertyChanged("TCA_Importe");
					this.OnTCA_ImporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Empresas_LineasEsfuerzo_Tareas_Empresas_LineasEsfuerzo_Aplicaciones", Storage="_Tareas_Empresas_LineasEsfuerzo", ThisKey="TCA_TLE_Id", OtherKey="TLE_Id", IsForeignKey=true)]
		public Tareas_Empresas_LineasEsfuerzo Tareas_Empresas_LineasEsfuerzo
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo.Entity;
			}
			set
			{
				Tareas_Empresas_LineasEsfuerzo previousValue = this._Tareas_Empresas_LineasEsfuerzo.Entity;
				if (((previousValue != value) 
							|| (this._Tareas_Empresas_LineasEsfuerzo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tareas_Empresas_LineasEsfuerzo.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo_Aplicaciones.Remove(this);
					}
					this._Tareas_Empresas_LineasEsfuerzo.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo_Aplicaciones.Add(this);
						this._TCA_TLE_Id = value.TLE_Id;
					}
					else
					{
						this._TCA_TLE_Id = default(int);
					}
					this.SendPropertyChanged("Tareas_Empresas_LineasEsfuerzo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aplicaciones_Tareas_Empresas_LineasEsfuerzo_Aplicaciones", Storage="_Aplicaciones", ThisKey="TCA_APP_Id", OtherKey="APP_Id", IsForeignKey=true)]
		public Aplicaciones Aplicaciones
		{
			get
			{
				return this._Aplicaciones.Entity;
			}
			set
			{
				Aplicaciones previousValue = this._Aplicaciones.Entity;
				if (((previousValue != value) 
							|| (this._Aplicaciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aplicaciones.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo_Aplicaciones.Remove(this);
					}
					this._Aplicaciones.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo_Aplicaciones.Add(this);
						this._TCA_APP_Id = value.APP_Id;
					}
					else
					{
						this._TCA_APP_Id = default(int);
					}
					this.SendPropertyChanged("Aplicaciones");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entes_Tareas_Empresas_LineasEsfuerzo_Aplicaciones", Storage="_Entes", ThisKey="TCA_ENT_Id", OtherKey="ENT_Id", IsForeignKey=true)]
		public Entes Entes
		{
			get
			{
				return this._Entes.Entity;
			}
			set
			{
				Entes previousValue = this._Entes.Entity;
				if (((previousValue != value) 
							|| (this._Entes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entes.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo_Aplicaciones.Remove(this);
					}
					this._Entes.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo_Aplicaciones.Add(this);
						this._TCA_ENT_Id = value.ENT_Id;
					}
					else
					{
						this._TCA_ENT_Id = default(int);
					}
					this.SendPropertyChanged("Entes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Tareas_Empresas_LineasEsfuerzo_Modulos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TCM_TLE_Id;
		
		private int _TCM_AME_Id;
		
		private decimal _TCM_Importe;
		
		private EntityRef<Tareas_Empresas_LineasEsfuerzo> _Tareas_Empresas_LineasEsfuerzo;
		
		private EntityRef<Aplicaciones_Modulos_Empresas> _Aplicaciones_Modulos_Empresas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTCM_TLE_IdChanging(int value);
    partial void OnTCM_TLE_IdChanged();
    partial void OnTCM_AME_IdChanging(int value);
    partial void OnTCM_AME_IdChanged();
    partial void OnTCM_ImporteChanging(decimal value);
    partial void OnTCM_ImporteChanged();
    #endregion
		
		public Tareas_Empresas_LineasEsfuerzo_Modulos()
		{
			this._Tareas_Empresas_LineasEsfuerzo = default(EntityRef<Tareas_Empresas_LineasEsfuerzo>);
			this._Aplicaciones_Modulos_Empresas = default(EntityRef<Aplicaciones_Modulos_Empresas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCM_TLE_Id", IsPrimaryKey=true)]
		public int TCM_TLE_Id
		{
			get
			{
				return this._TCM_TLE_Id;
			}
			set
			{
				if ((this._TCM_TLE_Id != value))
				{
					if (this._Tareas_Empresas_LineasEsfuerzo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTCM_TLE_IdChanging(value);
					this.SendPropertyChanging();
					this._TCM_TLE_Id = value;
					this.SendPropertyChanged("TCM_TLE_Id");
					this.OnTCM_TLE_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCM_AME_Id", IsPrimaryKey=true)]
		public int TCM_AME_Id
		{
			get
			{
				return this._TCM_AME_Id;
			}
			set
			{
				if ((this._TCM_AME_Id != value))
				{
					if (this._Aplicaciones_Modulos_Empresas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTCM_AME_IdChanging(value);
					this.SendPropertyChanging();
					this._TCM_AME_Id = value;
					this.SendPropertyChanged("TCM_AME_Id");
					this.OnTCM_AME_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCM_Importe")]
		public decimal TCM_Importe
		{
			get
			{
				return this._TCM_Importe;
			}
			set
			{
				if ((this._TCM_Importe != value))
				{
					this.OnTCM_ImporteChanging(value);
					this.SendPropertyChanging();
					this._TCM_Importe = value;
					this.SendPropertyChanged("TCM_Importe");
					this.OnTCM_ImporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Empresas_LineasEsfuerzo_Tareas_Empresas_LineasEsfuerzo_Modulos", Storage="_Tareas_Empresas_LineasEsfuerzo", ThisKey="TCM_TLE_Id", OtherKey="TLE_Id", IsForeignKey=true)]
		public Tareas_Empresas_LineasEsfuerzo Tareas_Empresas_LineasEsfuerzo
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo.Entity;
			}
			set
			{
				Tareas_Empresas_LineasEsfuerzo previousValue = this._Tareas_Empresas_LineasEsfuerzo.Entity;
				if (((previousValue != value) 
							|| (this._Tareas_Empresas_LineasEsfuerzo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tareas_Empresas_LineasEsfuerzo.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo_Modulos.Remove(this);
					}
					this._Tareas_Empresas_LineasEsfuerzo.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo_Modulos.Add(this);
						this._TCM_TLE_Id = value.TLE_Id;
					}
					else
					{
						this._TCM_TLE_Id = default(int);
					}
					this.SendPropertyChanged("Tareas_Empresas_LineasEsfuerzo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aplicaciones_Modulos_Empresas_Tareas_Empresas_LineasEsfuerzo_Modulos", Storage="_Aplicaciones_Modulos_Empresas", ThisKey="TCM_AME_Id", OtherKey="AME_Id", IsForeignKey=true)]
		public Aplicaciones_Modulos_Empresas Aplicaciones_Modulos_Empresas
		{
			get
			{
				return this._Aplicaciones_Modulos_Empresas.Entity;
			}
			set
			{
				Aplicaciones_Modulos_Empresas previousValue = this._Aplicaciones_Modulos_Empresas.Entity;
				if (((previousValue != value) 
							|| (this._Aplicaciones_Modulos_Empresas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aplicaciones_Modulos_Empresas.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo_Modulos.Remove(this);
					}
					this._Aplicaciones_Modulos_Empresas.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo_Modulos.Add(this);
						this._TCM_AME_Id = value.AME_Id;
					}
					else
					{
						this._TCM_AME_Id = default(int);
					}
					this.SendPropertyChanged("Aplicaciones_Modulos_Empresas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Tareas_Empresas_LineasEsfuerzo_ModulosReparto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TCR_TLE_Id;
		
		private int _TCR_AMT_Id;
		
		private bool _TCR_Equitativo;
		
		private decimal _TCR_ImporteTotal;
		
		private decimal _TCR_Porcentaje;
		
		private decimal _TCR_Importe;
		
		private EntityRef<Aplicaciones_Modulos_Tarifas> _Aplicaciones_Modulos_Tarifas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTCR_TLE_IdChanging(int value);
    partial void OnTCR_TLE_IdChanged();
    partial void OnTCR_AMT_IdChanging(int value);
    partial void OnTCR_AMT_IdChanged();
    partial void OnTCR_EquitativoChanging(bool value);
    partial void OnTCR_EquitativoChanged();
    partial void OnTCR_ImporteTotalChanging(decimal value);
    partial void OnTCR_ImporteTotalChanged();
    partial void OnTCR_PorcentajeChanging(decimal value);
    partial void OnTCR_PorcentajeChanged();
    partial void OnTCR_ImporteChanging(decimal value);
    partial void OnTCR_ImporteChanged();
    #endregion
		
		public Tareas_Empresas_LineasEsfuerzo_ModulosReparto()
		{
			this._Aplicaciones_Modulos_Tarifas = default(EntityRef<Aplicaciones_Modulos_Tarifas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCR_TLE_Id", IsPrimaryKey=true)]
		public int TCR_TLE_Id
		{
			get
			{
				return this._TCR_TLE_Id;
			}
			set
			{
				if ((this._TCR_TLE_Id != value))
				{
					this.OnTCR_TLE_IdChanging(value);
					this.SendPropertyChanging();
					this._TCR_TLE_Id = value;
					this.SendPropertyChanged("TCR_TLE_Id");
					this.OnTCR_TLE_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCR_AMT_Id", IsPrimaryKey=true)]
		public int TCR_AMT_Id
		{
			get
			{
				return this._TCR_AMT_Id;
			}
			set
			{
				if ((this._TCR_AMT_Id != value))
				{
					if (this._Aplicaciones_Modulos_Tarifas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTCR_AMT_IdChanging(value);
					this.SendPropertyChanging();
					this._TCR_AMT_Id = value;
					this.SendPropertyChanged("TCR_AMT_Id");
					this.OnTCR_AMT_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCR_Equitativo", IsPrimaryKey=true)]
		public bool TCR_Equitativo
		{
			get
			{
				return this._TCR_Equitativo;
			}
			set
			{
				if ((this._TCR_Equitativo != value))
				{
					this.OnTCR_EquitativoChanging(value);
					this.SendPropertyChanging();
					this._TCR_Equitativo = value;
					this.SendPropertyChanged("TCR_Equitativo");
					this.OnTCR_EquitativoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCR_ImporteTotal")]
		public decimal TCR_ImporteTotal
		{
			get
			{
				return this._TCR_ImporteTotal;
			}
			set
			{
				if ((this._TCR_ImporteTotal != value))
				{
					this.OnTCR_ImporteTotalChanging(value);
					this.SendPropertyChanging();
					this._TCR_ImporteTotal = value;
					this.SendPropertyChanged("TCR_ImporteTotal");
					this.OnTCR_ImporteTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCR_Porcentaje")]
		public decimal TCR_Porcentaje
		{
			get
			{
				return this._TCR_Porcentaje;
			}
			set
			{
				if ((this._TCR_Porcentaje != value))
				{
					this.OnTCR_PorcentajeChanging(value);
					this.SendPropertyChanging();
					this._TCR_Porcentaje = value;
					this.SendPropertyChanged("TCR_Porcentaje");
					this.OnTCR_PorcentajeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCR_Importe")]
		public decimal TCR_Importe
		{
			get
			{
				return this._TCR_Importe;
			}
			set
			{
				if ((this._TCR_Importe != value))
				{
					this.OnTCR_ImporteChanging(value);
					this.SendPropertyChanging();
					this._TCR_Importe = value;
					this.SendPropertyChanged("TCR_Importe");
					this.OnTCR_ImporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aplicaciones_Modulos_Tarifas_Tareas_Empresas_LineasEsfuerzo_ModulosReparto", Storage="_Aplicaciones_Modulos_Tarifas", ThisKey="TCR_AMT_Id", OtherKey="AMT_Id", IsForeignKey=true)]
		public Aplicaciones_Modulos_Tarifas Aplicaciones_Modulos_Tarifas
		{
			get
			{
				return this._Aplicaciones_Modulos_Tarifas.Entity;
			}
			set
			{
				Aplicaciones_Modulos_Tarifas previousValue = this._Aplicaciones_Modulos_Tarifas.Entity;
				if (((previousValue != value) 
							|| (this._Aplicaciones_Modulos_Tarifas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aplicaciones_Modulos_Tarifas.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo_ModulosReparto.Remove(this);
					}
					this._Aplicaciones_Modulos_Tarifas.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo_ModulosReparto.Add(this);
						this._TCR_AMT_Id = value.AMT_Id;
					}
					else
					{
						this._TCR_AMT_Id = default(int);
					}
					this.SendPropertyChanged("Aplicaciones_Modulos_Tarifas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Empresas_Departamentos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EDE_Id;
		
		private int _EDE_EMP_Id;
		
		private string _EDE_Nombre;
		
		private EntitySet<Entes> _Entes;
		
		private EntityRef<Empresas> _Empresas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEDE_IdChanging(int value);
    partial void OnEDE_IdChanged();
    partial void OnEDE_EMP_IdChanging(int value);
    partial void OnEDE_EMP_IdChanged();
    partial void OnEDE_NombreChanging(string value);
    partial void OnEDE_NombreChanged();
    #endregion
		
		public Empresas_Departamentos()
		{
			this._Entes = new EntitySet<Entes>(new Action<Entes>(this.attach_Entes), new Action<Entes>(this.detach_Entes));
			this._Empresas = default(EntityRef<Empresas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDE_Id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EDE_Id
		{
			get
			{
				return this._EDE_Id;
			}
			set
			{
				if ((this._EDE_Id != value))
				{
					this.OnEDE_IdChanging(value);
					this.SendPropertyChanging();
					this._EDE_Id = value;
					this.SendPropertyChanged("EDE_Id");
					this.OnEDE_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDE_EMP_Id")]
		public int EDE_EMP_Id
		{
			get
			{
				return this._EDE_EMP_Id;
			}
			set
			{
				if ((this._EDE_EMP_Id != value))
				{
					if (this._Empresas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEDE_EMP_IdChanging(value);
					this.SendPropertyChanging();
					this._EDE_EMP_Id = value;
					this.SendPropertyChanged("EDE_EMP_Id");
					this.OnEDE_EMP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDE_Nombre", CanBeNull=false)]
		public string EDE_Nombre
		{
			get
			{
				return this._EDE_Nombre;
			}
			set
			{
				if ((this._EDE_Nombre != value))
				{
					this.OnEDE_NombreChanging(value);
					this.SendPropertyChanging();
					this._EDE_Nombre = value;
					this.SendPropertyChanged("EDE_Nombre");
					this.OnEDE_NombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Departamentos_Entes", Storage="_Entes", ThisKey="EDE_Id", OtherKey="ENT_EDE_Id")]
		public EntitySet<Entes> Entes
		{
			get
			{
				return this._Entes;
			}
			set
			{
				this._Entes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Empresas_Departamentos", Storage="_Empresas", ThisKey="EDE_EMP_Id", OtherKey="EMP_Id", IsForeignKey=true)]
		public Empresas Empresas
		{
			get
			{
				return this._Empresas.Entity;
			}
			set
			{
				Empresas previousValue = this._Empresas.Entity;
				if (((previousValue != value) 
							|| (this._Empresas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresas.Entity = null;
						previousValue.Empresas_Departamentos.Remove(this);
					}
					this._Empresas.Entity = value;
					if ((value != null))
					{
						value.Empresas_Departamentos.Add(this);
						this._EDE_EMP_Id = value.EMP_Id;
					}
					else
					{
						this._EDE_EMP_Id = default(int);
					}
					this.SendPropertyChanged("Empresas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Entes(Entes entity)
		{
			this.SendPropertyChanging();
			entity.Empresas_Departamentos = this;
		}
		
		private void detach_Entes(Entes entity)
		{
			this.SendPropertyChanging();
			entity.Empresas_Departamentos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Tareas_Empresas_LineasEsfuerzo_Asuntos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TCA_TLE_Id;
		
		private int _TCA_PAS_Id;
		
		private int _TCA_PVC_Id;
		
		private System.Nullable<decimal> _TCA_Horas;
		
		private decimal _TCA_Importe;
		
		private EntityRef<Tareas_Empresas_LineasEsfuerzo> _Tareas_Empresas_LineasEsfuerzo;
		
		private EntityRef<Proveedores_Asuntos> _Proveedores_Asuntos;
		
		private EntityRef<Proveedores_ContratosSoporte> _Proveedores_ContratosSoporte;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTCA_TLE_IdChanging(int value);
    partial void OnTCA_TLE_IdChanged();
    partial void OnTCA_PAS_IdChanging(int value);
    partial void OnTCA_PAS_IdChanged();
    partial void OnTCA_PVC_IdChanging(int value);
    partial void OnTCA_PVC_IdChanged();
    partial void OnTCA_HorasChanging(System.Nullable<decimal> value);
    partial void OnTCA_HorasChanged();
    partial void OnTCA_ImporteChanging(decimal value);
    partial void OnTCA_ImporteChanged();
    #endregion
		
		public Tareas_Empresas_LineasEsfuerzo_Asuntos()
		{
			this._Tareas_Empresas_LineasEsfuerzo = default(EntityRef<Tareas_Empresas_LineasEsfuerzo>);
			this._Proveedores_Asuntos = default(EntityRef<Proveedores_Asuntos>);
			this._Proveedores_ContratosSoporte = default(EntityRef<Proveedores_ContratosSoporte>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCA_TLE_Id", IsPrimaryKey=true)]
		public int TCA_TLE_Id
		{
			get
			{
				return this._TCA_TLE_Id;
			}
			set
			{
				if ((this._TCA_TLE_Id != value))
				{
					if (this._Tareas_Empresas_LineasEsfuerzo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTCA_TLE_IdChanging(value);
					this.SendPropertyChanging();
					this._TCA_TLE_Id = value;
					this.SendPropertyChanged("TCA_TLE_Id");
					this.OnTCA_TLE_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCA_PAS_Id", IsPrimaryKey=true)]
		public int TCA_PAS_Id
		{
			get
			{
				return this._TCA_PAS_Id;
			}
			set
			{
				if ((this._TCA_PAS_Id != value))
				{
					if (this._Proveedores_Asuntos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTCA_PAS_IdChanging(value);
					this.SendPropertyChanging();
					this._TCA_PAS_Id = value;
					this.SendPropertyChanged("TCA_PAS_Id");
					this.OnTCA_PAS_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCA_PVC_Id", IsPrimaryKey=true)]
		public int TCA_PVC_Id
		{
			get
			{
				return this._TCA_PVC_Id;
			}
			set
			{
				if ((this._TCA_PVC_Id != value))
				{
					if (this._Proveedores_ContratosSoporte.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTCA_PVC_IdChanging(value);
					this.SendPropertyChanging();
					this._TCA_PVC_Id = value;
					this.SendPropertyChanged("TCA_PVC_Id");
					this.OnTCA_PVC_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCA_Horas")]
		public System.Nullable<decimal> TCA_Horas
		{
			get
			{
				return this._TCA_Horas;
			}
			set
			{
				if ((this._TCA_Horas != value))
				{
					this.OnTCA_HorasChanging(value);
					this.SendPropertyChanging();
					this._TCA_Horas = value;
					this.SendPropertyChanged("TCA_Horas");
					this.OnTCA_HorasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCA_Importe")]
		public decimal TCA_Importe
		{
			get
			{
				return this._TCA_Importe;
			}
			set
			{
				if ((this._TCA_Importe != value))
				{
					this.OnTCA_ImporteChanging(value);
					this.SendPropertyChanging();
					this._TCA_Importe = value;
					this.SendPropertyChanged("TCA_Importe");
					this.OnTCA_ImporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Empresas_LineasEsfuerzo_Tareas_Empresas_LineasEsfuerzo_Asuntos", Storage="_Tareas_Empresas_LineasEsfuerzo", ThisKey="TCA_TLE_Id", OtherKey="TLE_Id", IsForeignKey=true)]
		public Tareas_Empresas_LineasEsfuerzo Tareas_Empresas_LineasEsfuerzo
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo.Entity;
			}
			set
			{
				Tareas_Empresas_LineasEsfuerzo previousValue = this._Tareas_Empresas_LineasEsfuerzo.Entity;
				if (((previousValue != value) 
							|| (this._Tareas_Empresas_LineasEsfuerzo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tareas_Empresas_LineasEsfuerzo.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo_Asuntos.Remove(this);
					}
					this._Tareas_Empresas_LineasEsfuerzo.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo_Asuntos.Add(this);
						this._TCA_TLE_Id = value.TLE_Id;
					}
					else
					{
						this._TCA_TLE_Id = default(int);
					}
					this.SendPropertyChanged("Tareas_Empresas_LineasEsfuerzo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedores_Asuntos_Tareas_Empresas_LineasEsfuerzo_Asuntos", Storage="_Proveedores_Asuntos", ThisKey="TCA_PAS_Id", OtherKey="PAS_Id", IsForeignKey=true)]
		public Proveedores_Asuntos Proveedores_Asuntos
		{
			get
			{
				return this._Proveedores_Asuntos.Entity;
			}
			set
			{
				Proveedores_Asuntos previousValue = this._Proveedores_Asuntos.Entity;
				if (((previousValue != value) 
							|| (this._Proveedores_Asuntos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proveedores_Asuntos.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo_Asuntos.Remove(this);
					}
					this._Proveedores_Asuntos.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo_Asuntos.Add(this);
						this._TCA_PAS_Id = value.PAS_Id;
					}
					else
					{
						this._TCA_PAS_Id = default(int);
					}
					this.SendPropertyChanged("Proveedores_Asuntos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedores_ContratosSoporte_Tareas_Empresas_LineasEsfuerzo_Asuntos", Storage="_Proveedores_ContratosSoporte", ThisKey="TCA_PVC_Id", OtherKey="PVC_Id", IsForeignKey=true)]
		public Proveedores_ContratosSoporte Proveedores_ContratosSoporte
		{
			get
			{
				return this._Proveedores_ContratosSoporte.Entity;
			}
			set
			{
				Proveedores_ContratosSoporte previousValue = this._Proveedores_ContratosSoporte.Entity;
				if (((previousValue != value) 
							|| (this._Proveedores_ContratosSoporte.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proveedores_ContratosSoporte.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo_Asuntos.Remove(this);
					}
					this._Proveedores_ContratosSoporte.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo_Asuntos.Add(this);
						this._TCA_PVC_Id = value.PVC_Id;
					}
					else
					{
						this._TCA_PVC_Id = default(int);
					}
					this.SendPropertyChanged("Proveedores_ContratosSoporte");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TCL_TLE_Id;
		
		private int _TCL_LAN_Id;
		
		private int _TCL_ENT_Id;
		
		private decimal _TCL_Importe;
		
		private EntityRef<Tareas_Empresas_LineasEsfuerzo> _Tareas_Empresas_LineasEsfuerzo;
		
		private EntityRef<LicenciasAnuales> _LicenciasAnuales;
		
		private EntityRef<Entes> _Entes;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTCL_TLE_IdChanging(int value);
    partial void OnTCL_TLE_IdChanged();
    partial void OnTCL_LAN_IdChanging(int value);
    partial void OnTCL_LAN_IdChanged();
    partial void OnTCL_ENT_IdChanging(int value);
    partial void OnTCL_ENT_IdChanged();
    partial void OnTCL_ImporteChanging(decimal value);
    partial void OnTCL_ImporteChanged();
    #endregion
		
		public Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales()
		{
			this._Tareas_Empresas_LineasEsfuerzo = default(EntityRef<Tareas_Empresas_LineasEsfuerzo>);
			this._LicenciasAnuales = default(EntityRef<LicenciasAnuales>);
			this._Entes = default(EntityRef<Entes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCL_TLE_Id", IsPrimaryKey=true)]
		public int TCL_TLE_Id
		{
			get
			{
				return this._TCL_TLE_Id;
			}
			set
			{
				if ((this._TCL_TLE_Id != value))
				{
					if (this._Tareas_Empresas_LineasEsfuerzo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTCL_TLE_IdChanging(value);
					this.SendPropertyChanging();
					this._TCL_TLE_Id = value;
					this.SendPropertyChanged("TCL_TLE_Id");
					this.OnTCL_TLE_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCL_LAN_Id", IsPrimaryKey=true)]
		public int TCL_LAN_Id
		{
			get
			{
				return this._TCL_LAN_Id;
			}
			set
			{
				if ((this._TCL_LAN_Id != value))
				{
					if (this._LicenciasAnuales.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTCL_LAN_IdChanging(value);
					this.SendPropertyChanging();
					this._TCL_LAN_Id = value;
					this.SendPropertyChanged("TCL_LAN_Id");
					this.OnTCL_LAN_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCL_ENT_Id", IsPrimaryKey=true)]
		public int TCL_ENT_Id
		{
			get
			{
				return this._TCL_ENT_Id;
			}
			set
			{
				if ((this._TCL_ENT_Id != value))
				{
					if (this._Entes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTCL_ENT_IdChanging(value);
					this.SendPropertyChanging();
					this._TCL_ENT_Id = value;
					this.SendPropertyChanged("TCL_ENT_Id");
					this.OnTCL_ENT_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCL_Importe")]
		public decimal TCL_Importe
		{
			get
			{
				return this._TCL_Importe;
			}
			set
			{
				if ((this._TCL_Importe != value))
				{
					this.OnTCL_ImporteChanging(value);
					this.SendPropertyChanging();
					this._TCL_Importe = value;
					this.SendPropertyChanged("TCL_Importe");
					this.OnTCL_ImporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tareas_Empresas_LineasEsfuerzo_Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales", Storage="_Tareas_Empresas_LineasEsfuerzo", ThisKey="TCL_TLE_Id", OtherKey="TLE_Id", IsForeignKey=true)]
		public Tareas_Empresas_LineasEsfuerzo Tareas_Empresas_LineasEsfuerzo
		{
			get
			{
				return this._Tareas_Empresas_LineasEsfuerzo.Entity;
			}
			set
			{
				Tareas_Empresas_LineasEsfuerzo previousValue = this._Tareas_Empresas_LineasEsfuerzo.Entity;
				if (((previousValue != value) 
							|| (this._Tareas_Empresas_LineasEsfuerzo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tareas_Empresas_LineasEsfuerzo.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales.Remove(this);
					}
					this._Tareas_Empresas_LineasEsfuerzo.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales.Add(this);
						this._TCL_TLE_Id = value.TLE_Id;
					}
					else
					{
						this._TCL_TLE_Id = default(int);
					}
					this.SendPropertyChanged("Tareas_Empresas_LineasEsfuerzo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LicenciasAnuales_Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales", Storage="_LicenciasAnuales", ThisKey="TCL_LAN_Id", OtherKey="LAN_Id", IsForeignKey=true)]
		public LicenciasAnuales LicenciasAnuales
		{
			get
			{
				return this._LicenciasAnuales.Entity;
			}
			set
			{
				LicenciasAnuales previousValue = this._LicenciasAnuales.Entity;
				if (((previousValue != value) 
							|| (this._LicenciasAnuales.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LicenciasAnuales.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales.Remove(this);
					}
					this._LicenciasAnuales.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales.Add(this);
						this._TCL_LAN_Id = value.LAN_Id;
					}
					else
					{
						this._TCL_LAN_Id = default(int);
					}
					this.SendPropertyChanged("LicenciasAnuales");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entes_Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales", Storage="_Entes", ThisKey="TCL_ENT_Id", OtherKey="ENT_Id", IsForeignKey=true)]
		public Entes Entes
		{
			get
			{
				return this._Entes.Entity;
			}
			set
			{
				Entes previousValue = this._Entes.Entity;
				if (((previousValue != value) 
							|| (this._Entes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entes.Entity = null;
						previousValue.Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales.Remove(this);
					}
					this._Entes.Entity = value;
					if ((value != null))
					{
						value.Tareas_Empresas_LineasEsfuerzo_LicenciasAnuales.Add(this);
						this._TCL_ENT_Id = value.ENT_Id;
					}
					else
					{
						this._TCL_ENT_Id = default(int);
					}
					this.SendPropertyChanged("Entes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Telefonia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TFN_Id;
		
		private int _TFN_Anyo;
		
		private int _TFN_Mes;
		
		private int _TFN_Tipo;
		
		private System.Nullable<int> _TFN_EMP_Id;
		
		private System.Nullable<int> _TFN_Planta_EMP_Id;
		
		private string _TFN_Planta_Departamento;
		
		private string _TFN_Planta_Sede;
		
		private string _TFN_Planta_Uso;
		
		private string _TFN_Ciclo;
		
		private string _TFN_NumFactura;
		
		private string _TFN_NumCuenta;
		
		private string _TFN_Categoria;
		
		private string _TFN_Telefono;
		
		private string _TFN_Extension;
		
		private string _TFN_TipoCuota;
		
		private System.Nullable<decimal> _TFN_Bytes;
		
		private System.Nullable<decimal> _TFN_Importe;
		
		private System.DateTime _TFN_FechaInicio;
		
		private System.DateTime _TFN_FechaFin;
		
		private EntityRef<Empresas> _Empresas;
		
		private EntityRef<Empresas> _Empresas1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTFN_IdChanging(int value);
    partial void OnTFN_IdChanged();
    partial void OnTFN_AnyoChanging(int value);
    partial void OnTFN_AnyoChanged();
    partial void OnTFN_MesChanging(int value);
    partial void OnTFN_MesChanged();
    partial void OnTFN_TipoChanging(int value);
    partial void OnTFN_TipoChanged();
    partial void OnTFN_EMP_IdChanging(System.Nullable<int> value);
    partial void OnTFN_EMP_IdChanged();
    partial void OnTFN_Planta_EMP_IdChanging(System.Nullable<int> value);
    partial void OnTFN_Planta_EMP_IdChanged();
    partial void OnTFN_Planta_DepartamentoChanging(string value);
    partial void OnTFN_Planta_DepartamentoChanged();
    partial void OnTFN_Planta_SedeChanging(string value);
    partial void OnTFN_Planta_SedeChanged();
    partial void OnTFN_Planta_UsoChanging(string value);
    partial void OnTFN_Planta_UsoChanged();
    partial void OnTFN_CicloChanging(string value);
    partial void OnTFN_CicloChanged();
    partial void OnTFN_NumFacturaChanging(string value);
    partial void OnTFN_NumFacturaChanged();
    partial void OnTFN_NumCuentaChanging(string value);
    partial void OnTFN_NumCuentaChanged();
    partial void OnTFN_CategoriaChanging(string value);
    partial void OnTFN_CategoriaChanged();
    partial void OnTFN_TelefonoChanging(string value);
    partial void OnTFN_TelefonoChanged();
    partial void OnTFN_ExtensionChanging(string value);
    partial void OnTFN_ExtensionChanged();
    partial void OnTFN_TipoCuotaChanging(string value);
    partial void OnTFN_TipoCuotaChanged();
    partial void OnTFN_BytesChanging(System.Nullable<decimal> value);
    partial void OnTFN_BytesChanged();
    partial void OnTFN_ImporteChanging(System.Nullable<decimal> value);
    partial void OnTFN_ImporteChanged();
    partial void OnTFN_FechaInicioChanging(System.DateTime value);
    partial void OnTFN_FechaInicioChanged();
    partial void OnTFN_FechaFinChanging(System.DateTime value);
    partial void OnTFN_FechaFinChanged();
    #endregion
		
		public Telefonia()
		{
			this._Empresas = default(EntityRef<Empresas>);
			this._Empresas1 = default(EntityRef<Empresas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFN_Id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TFN_Id
		{
			get
			{
				return this._TFN_Id;
			}
			set
			{
				if ((this._TFN_Id != value))
				{
					this.OnTFN_IdChanging(value);
					this.SendPropertyChanging();
					this._TFN_Id = value;
					this.SendPropertyChanged("TFN_Id");
					this.OnTFN_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFN_Anyo")]
		public int TFN_Anyo
		{
			get
			{
				return this._TFN_Anyo;
			}
			set
			{
				if ((this._TFN_Anyo != value))
				{
					this.OnTFN_AnyoChanging(value);
					this.SendPropertyChanging();
					this._TFN_Anyo = value;
					this.SendPropertyChanged("TFN_Anyo");
					this.OnTFN_AnyoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFN_Mes")]
		public int TFN_Mes
		{
			get
			{
				return this._TFN_Mes;
			}
			set
			{
				if ((this._TFN_Mes != value))
				{
					this.OnTFN_MesChanging(value);
					this.SendPropertyChanging();
					this._TFN_Mes = value;
					this.SendPropertyChanged("TFN_Mes");
					this.OnTFN_MesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFN_Tipo")]
		public int TFN_Tipo
		{
			get
			{
				return this._TFN_Tipo;
			}
			set
			{
				if ((this._TFN_Tipo != value))
				{
					this.OnTFN_TipoChanging(value);
					this.SendPropertyChanging();
					this._TFN_Tipo = value;
					this.SendPropertyChanged("TFN_Tipo");
					this.OnTFN_TipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFN_EMP_Id")]
		public System.Nullable<int> TFN_EMP_Id
		{
			get
			{
				return this._TFN_EMP_Id;
			}
			set
			{
				if ((this._TFN_EMP_Id != value))
				{
					if (this._Empresas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTFN_EMP_IdChanging(value);
					this.SendPropertyChanging();
					this._TFN_EMP_Id = value;
					this.SendPropertyChanged("TFN_EMP_Id");
					this.OnTFN_EMP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFN_Planta_EMP_Id")]
		public System.Nullable<int> TFN_Planta_EMP_Id
		{
			get
			{
				return this._TFN_Planta_EMP_Id;
			}
			set
			{
				if ((this._TFN_Planta_EMP_Id != value))
				{
					if (this._Empresas1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTFN_Planta_EMP_IdChanging(value);
					this.SendPropertyChanging();
					this._TFN_Planta_EMP_Id = value;
					this.SendPropertyChanged("TFN_Planta_EMP_Id");
					this.OnTFN_Planta_EMP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFN_Planta_Departamento")]
		public string TFN_Planta_Departamento
		{
			get
			{
				return this._TFN_Planta_Departamento;
			}
			set
			{
				if ((this._TFN_Planta_Departamento != value))
				{
					this.OnTFN_Planta_DepartamentoChanging(value);
					this.SendPropertyChanging();
					this._TFN_Planta_Departamento = value;
					this.SendPropertyChanged("TFN_Planta_Departamento");
					this.OnTFN_Planta_DepartamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFN_Planta_Sede")]
		public string TFN_Planta_Sede
		{
			get
			{
				return this._TFN_Planta_Sede;
			}
			set
			{
				if ((this._TFN_Planta_Sede != value))
				{
					this.OnTFN_Planta_SedeChanging(value);
					this.SendPropertyChanging();
					this._TFN_Planta_Sede = value;
					this.SendPropertyChanged("TFN_Planta_Sede");
					this.OnTFN_Planta_SedeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFN_Planta_Uso")]
		public string TFN_Planta_Uso
		{
			get
			{
				return this._TFN_Planta_Uso;
			}
			set
			{
				if ((this._TFN_Planta_Uso != value))
				{
					this.OnTFN_Planta_UsoChanging(value);
					this.SendPropertyChanging();
					this._TFN_Planta_Uso = value;
					this.SendPropertyChanged("TFN_Planta_Uso");
					this.OnTFN_Planta_UsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFN_Ciclo")]
		public string TFN_Ciclo
		{
			get
			{
				return this._TFN_Ciclo;
			}
			set
			{
				if ((this._TFN_Ciclo != value))
				{
					this.OnTFN_CicloChanging(value);
					this.SendPropertyChanging();
					this._TFN_Ciclo = value;
					this.SendPropertyChanged("TFN_Ciclo");
					this.OnTFN_CicloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFN_NumFactura")]
		public string TFN_NumFactura
		{
			get
			{
				return this._TFN_NumFactura;
			}
			set
			{
				if ((this._TFN_NumFactura != value))
				{
					this.OnTFN_NumFacturaChanging(value);
					this.SendPropertyChanging();
					this._TFN_NumFactura = value;
					this.SendPropertyChanged("TFN_NumFactura");
					this.OnTFN_NumFacturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFN_NumCuenta")]
		public string TFN_NumCuenta
		{
			get
			{
				return this._TFN_NumCuenta;
			}
			set
			{
				if ((this._TFN_NumCuenta != value))
				{
					this.OnTFN_NumCuentaChanging(value);
					this.SendPropertyChanging();
					this._TFN_NumCuenta = value;
					this.SendPropertyChanged("TFN_NumCuenta");
					this.OnTFN_NumCuentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFN_Categoria")]
		public string TFN_Categoria
		{
			get
			{
				return this._TFN_Categoria;
			}
			set
			{
				if ((this._TFN_Categoria != value))
				{
					this.OnTFN_CategoriaChanging(value);
					this.SendPropertyChanging();
					this._TFN_Categoria = value;
					this.SendPropertyChanged("TFN_Categoria");
					this.OnTFN_CategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFN_Telefono")]
		public string TFN_Telefono
		{
			get
			{
				return this._TFN_Telefono;
			}
			set
			{
				if ((this._TFN_Telefono != value))
				{
					this.OnTFN_TelefonoChanging(value);
					this.SendPropertyChanging();
					this._TFN_Telefono = value;
					this.SendPropertyChanged("TFN_Telefono");
					this.OnTFN_TelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFN_Extension")]
		public string TFN_Extension
		{
			get
			{
				return this._TFN_Extension;
			}
			set
			{
				if ((this._TFN_Extension != value))
				{
					this.OnTFN_ExtensionChanging(value);
					this.SendPropertyChanging();
					this._TFN_Extension = value;
					this.SendPropertyChanged("TFN_Extension");
					this.OnTFN_ExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFN_TipoCuota")]
		public string TFN_TipoCuota
		{
			get
			{
				return this._TFN_TipoCuota;
			}
			set
			{
				if ((this._TFN_TipoCuota != value))
				{
					this.OnTFN_TipoCuotaChanging(value);
					this.SendPropertyChanging();
					this._TFN_TipoCuota = value;
					this.SendPropertyChanged("TFN_TipoCuota");
					this.OnTFN_TipoCuotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFN_Bytes")]
		public System.Nullable<decimal> TFN_Bytes
		{
			get
			{
				return this._TFN_Bytes;
			}
			set
			{
				if ((this._TFN_Bytes != value))
				{
					this.OnTFN_BytesChanging(value);
					this.SendPropertyChanging();
					this._TFN_Bytes = value;
					this.SendPropertyChanged("TFN_Bytes");
					this.OnTFN_BytesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFN_Importe")]
		public System.Nullable<decimal> TFN_Importe
		{
			get
			{
				return this._TFN_Importe;
			}
			set
			{
				if ((this._TFN_Importe != value))
				{
					this.OnTFN_ImporteChanging(value);
					this.SendPropertyChanging();
					this._TFN_Importe = value;
					this.SendPropertyChanged("TFN_Importe");
					this.OnTFN_ImporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFN_FechaInicio")]
		public System.DateTime TFN_FechaInicio
		{
			get
			{
				return this._TFN_FechaInicio;
			}
			set
			{
				if ((this._TFN_FechaInicio != value))
				{
					this.OnTFN_FechaInicioChanging(value);
					this.SendPropertyChanging();
					this._TFN_FechaInicio = value;
					this.SendPropertyChanged("TFN_FechaInicio");
					this.OnTFN_FechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFN_FechaFin")]
		public System.DateTime TFN_FechaFin
		{
			get
			{
				return this._TFN_FechaFin;
			}
			set
			{
				if ((this._TFN_FechaFin != value))
				{
					this.OnTFN_FechaFinChanging(value);
					this.SendPropertyChanging();
					this._TFN_FechaFin = value;
					this.SendPropertyChanged("TFN_FechaFin");
					this.OnTFN_FechaFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Telefonia", Storage="_Empresas", ThisKey="TFN_EMP_Id", OtherKey="EMP_Id", IsForeignKey=true)]
		public Empresas Empresas
		{
			get
			{
				return this._Empresas.Entity;
			}
			set
			{
				Empresas previousValue = this._Empresas.Entity;
				if (((previousValue != value) 
							|| (this._Empresas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresas.Entity = null;
						previousValue.Telefonia.Remove(this);
					}
					this._Empresas.Entity = value;
					if ((value != null))
					{
						value.Telefonia.Add(this);
						this._TFN_EMP_Id = value.EMP_Id;
					}
					else
					{
						this._TFN_EMP_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Empresas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_Telefonia1", Storage="_Empresas1", ThisKey="TFN_Planta_EMP_Id", OtherKey="EMP_Id", IsForeignKey=true)]
		public Empresas Empresas1
		{
			get
			{
				return this._Empresas1.Entity;
			}
			set
			{
				Empresas previousValue = this._Empresas1.Entity;
				if (((previousValue != value) 
							|| (this._Empresas1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresas1.Entity = null;
						previousValue.Telefonia1.Remove(this);
					}
					this._Empresas1.Entity = value;
					if ((value != null))
					{
						value.Telefonia1.Add(this);
						this._TFN_Planta_EMP_Id = value.EMP_Id;
					}
					else
					{
						this._TFN_Planta_EMP_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Empresas1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class TiposCuota : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TCU_Id;
		
		private string _TCU_Cuota;
		
		private string _TCU_Departamento;
		
		private string _TCU_Sede;
		
		private string _TCU_Uso;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTCU_IdChanging(int value);
    partial void OnTCU_IdChanged();
    partial void OnTCU_CuotaChanging(string value);
    partial void OnTCU_CuotaChanged();
    partial void OnTCU_DepartamentoChanging(string value);
    partial void OnTCU_DepartamentoChanged();
    partial void OnTCU_SedeChanging(string value);
    partial void OnTCU_SedeChanged();
    partial void OnTCU_UsoChanging(string value);
    partial void OnTCU_UsoChanged();
    #endregion
		
		public TiposCuota()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCU_Id", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TCU_Id
		{
			get
			{
				return this._TCU_Id;
			}
			set
			{
				if ((this._TCU_Id != value))
				{
					this.OnTCU_IdChanging(value);
					this.SendPropertyChanging();
					this._TCU_Id = value;
					this.SendPropertyChanged("TCU_Id");
					this.OnTCU_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCU_Cuota", CanBeNull=false)]
		public string TCU_Cuota
		{
			get
			{
				return this._TCU_Cuota;
			}
			set
			{
				if ((this._TCU_Cuota != value))
				{
					this.OnTCU_CuotaChanging(value);
					this.SendPropertyChanging();
					this._TCU_Cuota = value;
					this.SendPropertyChanged("TCU_Cuota");
					this.OnTCU_CuotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCU_Departamento", CanBeNull=false)]
		public string TCU_Departamento
		{
			get
			{
				return this._TCU_Departamento;
			}
			set
			{
				if ((this._TCU_Departamento != value))
				{
					this.OnTCU_DepartamentoChanging(value);
					this.SendPropertyChanging();
					this._TCU_Departamento = value;
					this.SendPropertyChanged("TCU_Departamento");
					this.OnTCU_DepartamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCU_Sede", CanBeNull=false)]
		public string TCU_Sede
		{
			get
			{
				return this._TCU_Sede;
			}
			set
			{
				if ((this._TCU_Sede != value))
				{
					this.OnTCU_SedeChanging(value);
					this.SendPropertyChanging();
					this._TCU_Sede = value;
					this.SendPropertyChanged("TCU_Sede");
					this.OnTCU_SedeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCU_Uso", CanBeNull=false)]
		public string TCU_Uso
		{
			get
			{
				return this._TCU_Uso;
			}
			set
			{
				if ((this._TCU_Uso != value))
				{
					this.OnTCU_UsoChanging(value);
					this.SendPropertyChanging();
					this._TCU_Uso = value;
					this.SendPropertyChanged("TCU_Uso");
					this.OnTCU_UsoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ContratosCAU_ExcluidasGuardia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _CEE_CCA_Id;
		
		private System.Nullable<int> _CEE_EMP_Id;
		
		private EntityRef<ContratosCAU> _ContratosCAU;
		
		private EntityRef<Empresas> _Empresas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCEE_CCA_IdChanging(System.Nullable<int> value);
    partial void OnCEE_CCA_IdChanged();
    partial void OnCEE_EMP_IdChanging(System.Nullable<int> value);
    partial void OnCEE_EMP_IdChanged();
    #endregion
		
		public ContratosCAU_ExcluidasGuardia()
		{
			this._ContratosCAU = default(EntityRef<ContratosCAU>);
			this._Empresas = default(EntityRef<Empresas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEE_CCA_Id", IsPrimaryKey=true)]
		public System.Nullable<int> CEE_CCA_Id
		{
			get
			{
				return this._CEE_CCA_Id;
			}
			set
			{
				if ((this._CEE_CCA_Id != value))
				{
					if (this._ContratosCAU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCEE_CCA_IdChanging(value);
					this.SendPropertyChanging();
					this._CEE_CCA_Id = value;
					this.SendPropertyChanged("CEE_CCA_Id");
					this.OnCEE_CCA_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEE_EMP_Id", IsPrimaryKey=true)]
		public System.Nullable<int> CEE_EMP_Id
		{
			get
			{
				return this._CEE_EMP_Id;
			}
			set
			{
				if ((this._CEE_EMP_Id != value))
				{
					if (this._Empresas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCEE_EMP_IdChanging(value);
					this.SendPropertyChanging();
					this._CEE_EMP_Id = value;
					this.SendPropertyChanged("CEE_EMP_Id");
					this.OnCEE_EMP_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContratosCAU_ContratosCAU_ExcluidasGuardia", Storage="_ContratosCAU", ThisKey="CEE_CCA_Id", OtherKey="CCA_Id", IsForeignKey=true)]
		public ContratosCAU ContratosCAU
		{
			get
			{
				return this._ContratosCAU.Entity;
			}
			set
			{
				ContratosCAU previousValue = this._ContratosCAU.Entity;
				if (((previousValue != value) 
							|| (this._ContratosCAU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContratosCAU.Entity = null;
						previousValue.ContratosCAU_ExcluidasGuardia.Remove(this);
					}
					this._ContratosCAU.Entity = value;
					if ((value != null))
					{
						value.ContratosCAU_ExcluidasGuardia.Add(this);
						this._CEE_CCA_Id = value.CCA_Id;
					}
					else
					{
						this._CEE_CCA_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("ContratosCAU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empresas_ContratosCAU_ExcluidasGuardia", Storage="_Empresas", ThisKey="CEE_EMP_Id", OtherKey="EMP_Id", IsForeignKey=true)]
		public Empresas Empresas
		{
			get
			{
				return this._Empresas.Entity;
			}
			set
			{
				Empresas previousValue = this._Empresas.Entity;
				if (((previousValue != value) 
							|| (this._Empresas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empresas.Entity = null;
						previousValue.ContratosCAU_ExcluidasGuardia.Remove(this);
					}
					this._Empresas.Entity = value;
					if ((value != null))
					{
						value.ContratosCAU_ExcluidasGuardia.Add(this);
						this._CEE_EMP_Id = value.EMP_Id;
					}
					else
					{
						this._CEE_EMP_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Empresas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
