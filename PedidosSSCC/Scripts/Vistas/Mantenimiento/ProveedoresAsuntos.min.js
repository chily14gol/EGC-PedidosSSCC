function inicializarTablaAsuntos(){const n=inicializarDataTable("#tableAsuntos",{ajax:{url:AppConfig.urls.ObtenerAsuntos,type:"GET",dataSrc:""},columns:[{data:"ProveedorNombre",title:"Proveedor"},{data:"PAS_Anyo",title:"Año"},{data:"PAS_Mes",title:"Mes"},{data:"PAS_CodigoExterno",title:"Código Externo"},{data:"PAS_Fecha",title:"Fecha",render:formatDateToDDMMYYYY},{data:"TicketTitulo",title:"Ticket GLPI"},{data:"EntidadNombre",title:"Entidad"},{data:"EmpresaNombre",title:"Empresa"},{data:"TareaNombre",title:"Tarea"},{data:"PAS_Descripcion",title:"Descripción"},{data:"PAS_Horas",title:"Horas",className:"text-end dt-type-numeric-with-decimal"},{data:"PAS_Importe",title:"Importe",className:"text-end",render:formatMoney},{data:"PAS_NumFacturaP",title:"Nº Factura"},{data:null,title:'<span class="sReader">Acción<\/span>',orderable:!1,className:"td-btn",render:function(n,t,i){const r=JSON.stringify(i).replace(/"/g,"&quot;");return`
                            <button class="btn btn-icon btn-editar btn-outline-secondary me-2" data-asunto="${r}" onclick="editarAsunto(this)">
                                <i class="bi bi-pencil-square"></i>
                            </button>
                            <button class="btn btn-icon btn-eliminar btn-outline-secondary" data-asunto="${r}" onclick="eliminarAsunto(this)">
                                <i class="bi bi-trash"></i>
                            </button>`}}]},[],"export_asuntos");$(window).resize(()=>n.columns.adjust().draw());$("#formBuscarAsunto").on("keyup",function(){n.search(this.value,!1,!1).draw()})}async function cargarComboProveedores(n,t){let i;i=t?await $.get(AppConfig.urls.ObtenerProveedoresSoporte):await $.get(AppConfig.urls.ObtenerProveedores);const r=$(n).empty().append('<option value="">Seleccione Proveedor<\/option>');i.forEach(n=>r.append(`<option value="${n.PRV_Id}">${n.PRV_Nombre}</option>`))}async function cargarComboEntidades(){const t=await $.get(AppConfig.urls.ObtenerComboEntidades),i=$("#pasEntidad").empty().append('<option value="">Seleccione Entidad<\/option>');t.forEach(n=>i.append(`<option value="${n.ENT_Id}">${n.ENT_Nombre}</option>`));const n=$("#pasEntidad");n.hasClass("select2-hidden-accessible")&&n.select2("destroy");n.select2({placeholder:"Seleccione Entidad",allowClear:!0,width:"100%",dropdownParent:$("#modalAsunto")})}async function cargarComboEmpresas(){const n=await $.get(AppConfig.urls.ObtenerComboEmpresas),t=$("#pasEmpresa").empty().append('<option value="">Seleccione Empresa<\/option>');n.forEach(n=>t.append(`<option value="${n.EMP_Id}">${n.EMP_Nombre}</option>`))}async function cargarComboTicketsGLPI(){const n=await $.get(AppConfig.urls.ObtenerTicketsGLPICombo),t=$("#pasTicket").empty().append('<option value="">Seleccione Ticket GLPI<\/option>');n.forEach(n=>t.append(`<option value="${n.TKC_Id_GLPI}">${n.TKC_Titulo}</option>`))}async function cargarPeriodoFacturacion(){const n=await $.get(AppConfig.urls.ObtenerPeriodoFacturacion);$("#impAnyo").val(n.Anyo);$("#impMes").val(n.Mes)}async function cargarComboTareas(){const t=await $.get(AppConfig.urls.ObtenerTareasCombo),i=$("#pasTarea").empty().append('<option value="">Seleccione Tarea<\/option>');t.forEach(n=>i.append(`<option value="${n.TAR_Id}">${n.TAR_Nombre}</option>`));const n=$("#pasTarea");n.hasClass("select2-hidden-accessible")&&n.select2("destroy");n.select2({placeholder:"Seleccione Tarea",allowClear:!0,width:"100%",dropdownParent:$("#modalAsunto")})}function limpiarModalAsunto(){$("#pasId, #pasAnyo, #pasMes, #pasCodigoExterno, #pasFecha, #pasDescripcion, #pasHoras, #pasImporte, #pasNumFactura").val("");$("#pasEntidad, #pasEmpresa, #pasTicket").val("");ticketSelect.clearChoices();ticketSelect.clearStore();ticketSelect.clearInput();ticketSelect.setChoices([{value:"",label:"Seleccione Ticket GLPI",disabled:!0}],"value","label",!0);$("#pasTarea").val(null).trigger("change");$("#modalAsunto .is-invalid").removeClass("is-invalid")}function editarAsunto(n){limpiarModalAsunto();const t=JSON.parse(n.getAttribute("data-asunto"));$("#pasId").val(t.PAS_Id);$("#pasProveedor").val(t.PAS_PRV_Id||"");$("#pasAnyo").val(t.PAS_Anyo);$("#pasMes").val(t.PAS_Mes);$("#pasCodigoExterno").val(t.PAS_CodigoExterno);$("#pasFecha").val(formatDateInputForDateField(t.PAS_Fecha));t.PAS_TKC_Id_GLPI&&ticketSelect.setChoices([{value:t.PAS_TKC_Id_GLPI,label:"#"+t.PAS_TKC_Id_GLPI+" - "+t.TicketTitulo,selected:!0,disabled:!1}],"value","label",!0);const i=$("#pasEntidad");i.val(t.PAS_ENT_Id||"");i.trigger("change");$("#pasEmpresa").val(t.PAS_EMP_Id||"");$("#pasDescripcion").val(t.PAS_Descripcion);$("#pasHoras").val(t.PAS_Horas);$("#pasImporte").val(t.PAS_Importe);$("#pasNumFactura").val(t.PAS_NumFacturaP);$("#pasTarea").val(t.PAS_TAR_Id||"").trigger("change");$("#modalAsuntoLabel").text("Editar Asunto");$("#modalAsunto").modal("show")}async function guardarAsunto(){let n=[];if(validarCampo("#pasProveedor","Proveedor",n),validarCampo("#pasAnyo","Año",n),validarCampo("#pasMes","Mes",n),n.length){mostrarToast(AppConfig.mensajes.camposObligatorios+n.join(", "),TipoToast.Warning);return}const i={PAS_Id:$("#pasId").val(),PAS_PRV_Id:$("#pasProveedor").val(),PAS_Anyo:$("#pasAnyo").val(),PAS_Mes:$("#pasMes").val(),PAS_CodigoExterno:$("#pasCodigoExterno").val(),PAS_Fecha:$("#pasFecha").val(),PAS_TKC_Id_GLPI:$("#pasTicket").val(),PAS_ENT_Id:$("#pasEntidad").val(),PAS_EMP_Id:$("#pasEmpresa").val(),PAS_TAR_Id:$("#pasTarea").val()||null,PAS_Descripcion:$("#pasDescripcion").val(),PAS_Horas:parseFloat($("#pasHoras").val()),PAS_Importe:parseFloat($("#pasImporte").val()),PAS_NumFacturaP:$("#pasNumFactura").val()};try{const n=await $.ajax({url:AppConfig.urls.GuardarAsunto,type:"POST",contentType:"application/json",data:JSON.stringify(i),dataType:"json"});n.success?(mostrarToast("Guardado",TipoToast.Success),$("#modalAsunto").modal("hide"),$("#tableAsuntos").DataTable().ajax.reload(null,!1)):mostrarToast("Error al guardar",TipoToast.Error)}catch(t){const n=obtenerMensajeErrorAjax(t);registrarErrorjQuery(t.status,n)}}function eliminarAsunto(n){const t=JSON.parse(n.getAttribute("data-asunto"));mostrarAlertaConfirmacion({titulo:`¿Eliminar asunto '${t.PAS_Descripcion}'?`,onConfirmar:async()=>{try{const n=await $.ajax({url:AppConfig.urls.EliminarAsunto,type:"POST",contentType:"application/json",data:JSON.stringify({id:t.PAS_Id}),dataType:"json"});n.success?(mostrarToast("Eliminado",TipoToast.Success),$("#tableAsuntos").DataTable().ajax.reload(null,!1)):mostrarToast("No se pudo eliminar",TipoToast.Warning)}catch(n){registrarErrorjQuery(n.status||"",n.message||n)}}})}function limpiarImportar(){$("#formImportar")[0].reset();$("#impFactura").val("")}function generarResumenPorAsunto(n){let t="";return n.forEach(n=>{t+=`
    <div class="card mb-4 shadow-sm">
      <div class="card-header text-white d-flex justify-content-between" style="background-color:#0092ff">
        <div>
          <strong>${n.NombreEmpresa}</strong>
          <small class="text-light ms-3">${n.Anyo}/${String(n.Mes).padStart(2,"0")}</small>
        </div>
        <div>
          <span class="badge bg-light text-dark fs-6">Total Horas: ${n.TotalHoras.toFixed(2)}</span>
          <span class="badge bg-light text-dark ms-2 fs-6">Importe: ${formatMoney(n.TotalImporte)}</span>
        </div>
      </div>
      <div class="card-body p-2">`,n.Proveedores.forEach(n=>{t+=`
      <div class="mb-3">
        <h6>Proveedor → ${n.NombreProveedor}
          <strong class="text-muted">(Horas Contratadas: ${n.HorasContratadas.toFixed(2)}, Precio/Hora: ${formatMoney(n.PrecioHoraContrato)})</strong>
        </h6>`,n.ListaErrores&&n.ListaErrores.length&&(t+=`
        <div class="alert alert-warning">
          <ul class="mb-2" style="margin-bottom: 0px !important;">
            ${n.ListaErrores.map(n=>`<li>${n}</li>`).join("")}
          </ul>
        </div>`),t+=`
        <table class="table table-sm table-striped mb-2">
          <thead class="table-light">
            <tr>
              <th class="text-end">Fecha</th>
              <th class="text-end">Asunto</th>
              <th class="text-end">Entidad</th>
              <th class="text-end">Ticket GLPI</th>
              <th class="text-end">Horas/Importe</th>
            </tr>
          </thead>
          <tbody>`,n.Asuntos.forEach(n=>{const i=parseDotNetDateToDDMMYYYY(n.Fecha),r=n.IdTicket?`#${n.IdTicket}`:"";t+=`
            <tr>
              <td class="text-end">${i}</td>
              <td class="text-end">${n.Descripcion}</td>
              <td class="text-end">${n.EntidadNombre}</td>
              <td class="text-end">${r}</td>
              <td class="text-end">${n.Horas>0?`${n.Horas.toFixed(2)} h`:`${n.Importe.toFixed(2)} €`}</td>
            </tr>`;n.Mensaje&&(t+=`
            <tr>
              <td colspan="3" class="ps-3"><em>${n.Mensaje}</em></td>
            </tr>`)}),t+=`
          </tbody>
        </table>
      </div>`}),t+=`
      </div>
    </div>`}),t}async function generarConceptosAsuntos(){mostrarDivCargando();try{const n=await $.ajax({url:AppConfig.urls.GenerarConceptosAsuntos,type:"POST",contentType:"application/json; charset=utf-8",dataType:"json"});if(ocultarDivCargando(),n.success){const t=n.resultados.length?`<ul class="text-start">
             ${n.resultados.map(n=>`<li><strong>${n.EmpresaNombre}</strong>: ${n.ConceptosCreados} concepto(s)</li>`).join("")}
           </ul>`:`<p>No se ha generado ningún concepto.</p>`;await Swal.fire({title:"Conceptos generados correctamente",html:t,icon:"success",confirmButtonText:"Aceptar",width:"50%"});$("#tableAsuntos").DataTable().ajax.reload(null,!1)}else mostrarToast(n.mensaje||"Error al generar conceptos.",TipoToast.Error)}catch(n){ocultarDivCargando();const t=obtenerMensajeErrorAjax(n);registrarErrorjQuery(n.status||"",t)}}var ticketSelect;$(document).ready(function(){VerificarSesionActiva(OpcionMenu.ProveedoresAsuntos).then(()=>{cargarComboProveedores("#pasProveedor",!1),cargarComboProveedores("#impProveedor",!0),cargarComboEntidades(),cargarComboEmpresas(),cargarComboTareas(),inicializarTablaAsuntos()});$("#btnNuevoAsunto").on("click",()=>{limpiarModalAsunto();$("#modalAsuntoLabel").text("Añadir Asunto");const n=document.getElementById("modalAsunto"),t=bootstrap.Modal.getOrCreateInstance(n);t.show()});$("#btnGuardarAsunto").on("click",guardarAsunto);$("#btnImportarExcel").on("click",()=>{limpiarImportar();cargarPeriodoFacturacion();const n=document.getElementById("modalImportar"),t=bootstrap.Modal.getOrCreateInstance(n);t.show()});$("#btnProcesarExcel").on("click",function(){const r=$("#impProveedor").val(),f=$("#impAnyo").val(),e=$("#impMes").val(),o=$("#impFactura").val(),i=$("#impFile")[0],u=i.files[0];let t=[];if(r?$("#impProveedor").removeClass("is-invalid"):($("#impProveedor").addClass("is-invalid"),t.push("Proveedor")),u?$(i).removeClass("is-invalid"):($(i).addClass("is-invalid"),t.push("Archivo Excel")),t.length){mostrarToast(AppConfig.mensajes.camposObligatorios+t.join(", "),TipoToast.Warning);return}bootstrap.Modal.getOrCreateInstance("#modalImportar").hide();mostrarDivCargando();const n=new FormData;n.append("impProveedor",r);n.append("impAnyo",f);n.append("impMes",e);n.append("impFactura",o);n.append("impFile",u);$.ajax({url:AppConfig.urls.ImportarAsuntosExcel,type:"POST",data:n,processData:!1,contentType:!1,success:function(n){if(n.success)ocultarDivCargando(),mostrarToast("Archivo importado correctamente.",TipoToast.Success),setTimeout(function(){mostrarDivCargando();$("#tableAsuntos").DataTable().destroy();inicializarTablaAsuntos()},200);else if(ocultarDivCargando(),n.errores){var i=!0,t="";if(n.hayErroresBloqueantes)if(n.errores&&n.errores.length===1){const r=Array.isArray(n.errores[0])?n.errores[0][0]:n.errores[0];typeof r=="string"&&r.toLowerCase().includes("no hay contrato vigente para el proveedor")?(t=r,i=!1):t="La importación NO se ha realizado. Consulte el fichero generado."}else t="La importación NO se ha realizado. Consulte el fichero generado.";else t="La importación SI se ha realizado ("+n.insertados+" registros) con algunos errores. Consulte el fichero generado.";if(n.hayErroresBloqueantes?Swal.fire({title:"Error al importar",text:t,icon:"error",confirmButtonText:"Cerrar",confirmButtonColor:"#d33"}).then(n=>{n.isConfirmed&&setTimeout(function(){mostrarDivCargando();$("#tableAsuntos").DataTable().destroy();inicializarTablaAsuntos()},200)}):Swal.fire({title:"Importación realizada con errores",text:t,icon:"warning",confirmButtonText:"Cerrar",confirmButtonColor:"#d33"}).then(n=>{n.isConfirmed&&setTimeout(function(){mostrarDivCargando();$("#tableAsuntos").DataTable().destroy();inicializarTablaAsuntos()},200)}),n.fileUrl&&i){let t=document.createElement("a");t.href=n.fileUrl;t.download="Errores_Importacion.xlsx";document.body.appendChild(t);t.click();document.body.removeChild(t)}}else n.excepcion&&Swal.fire({title:"Error al importar",text:n.excepcion,icon:"error",confirmButtonText:"Cerrar",confirmButtonColor:"#d33"}).then(n=>{n.isConfirmed&&setTimeout(function(){mostrarDivCargando();$("#tableAsuntos").DataTable().destroy();inicializarTablaAsuntos()},200)})},error:function(n){ocultarDivCargando();const t=obtenerMensajeErrorAjax(n);registrarErrorjQuery(n.status,t)}})});$("#btnPrevisulizarConceptosAsuntos").click(async()=>{mostrarDivCargando();try{const r=await $.ajax({url:window.AppConfig.urls.previsulizarConceptosAsuntos,type:"POST",dataType:"json",contentType:"application/json; charset=utf-8"});if(ocultarDivCargando(),!r.success){await Swal.fire({icon:"error",title:"Error al previsualizar",html:`<div class="text-start">${r.mensaje}</div>`,confirmButtonText:"Entendido"});return}const{partesPreview:n,partesErrors:t}=r;if((!n||n.length===0)&&(!t||t.length)){await Swal.fire({title:"Nada que Previsualizar",html:`<p>No hay conceptos de asuntos pendientes.</p>`,icon:"info",confirmButtonText:"Entendido",width:500});return}let i="";t&&t.length&&(i=`
                  <div class="alert alert-warning">
                    <ul>
                      ${t.map(n=>`<li>${n}</li>`).join("")}
                    </ul>
                  </div>
                `);n&&n.length!==0?i+=generarResumenPorAsunto(n):i=`<p>No hay asuntos validos para previsualizar.</p>`;const{isConfirmed:u}=await Swal.fire({title:"Previsualizar Conceptos de Asuntos",html:`<div class="small text-start">
                         ${i}
                       </div>`,width:"80%",showCancelButton:!0,cancelButtonText:"Cerrar",confirmButtonText:"Generar Conceptos",icon:"info"});u&&await generarConceptosAsuntos()}catch(n){ocultarDivCargando();registrarErrorjQuery(n.status,n.message)}});const n=document.getElementById("pasTicket");ticketSelect=new Choices(n,{removeItemButton:!0,allowHTML:!1,placeholderValue:"Buscar ticket GLPI…",searchPlaceholderValue:"Teclea para buscar",shouldSort:!1,noResultsText:"No hay resultados",loadingText:"Cargando…",searchEnabled:!0,searchChoices:!1,searchFloor:1});n.addEventListener("search",async n=>{const t=n.detail.value;if(!t){ticketSelect.clearChoices();return}ticketSelect.clearChoices();ticketSelect.setChoices([{value:"",label:ticketSelect.config.loadingText,disabled:!0}],"value","label",!0);try{const n=await fetch(`${AppConfig.urls.ObtenerTicketsGLPICombo}?q=${encodeURIComponent(t)}`),i=await n.json();ticketSelect.clearChoices();ticketSelect.setChoices(i.results.map(n=>({value:n.id,label:n.text})),"value","label",!0)}catch(i){console.error(i)}})});